
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.12+38 (git sha1 f599c148c, x86_64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Running command `verilog_defines -DNO_ICE40_DEFAULT_ASSIGNMENTS -DGITCLEAN=0 -DGITHASH=6536e52 -DMODE_640x480 -DPMOD_DIGILENT_VGA -DICE40UP5K -DUPDUINO ; read_verilog -I. -sv upduino/xosera_upd.sv ./blitter.sv ./blitter2.sv ./bus_interface.sv ./colormem.sv ./copper.sv ./coppermem.sv ./reg_interface.sv ./spi_target.sv ./tilemem.sv ./video_blend.sv ./video_gen.sv ./video_playfield.sv ./vram.sv ./vram_arb.sv ./xosera_main.sv ./xosera_pkg.sv ./xrmem_arb.sv ; scratchpad -copy abc9.script.flow3 abc9.script ; synth_ice40 -device u -dsp -abc9 -top xosera_upd -json upduino/xosera_upd_vga_640x480.json' --

1. Executing Verilog-2005 frontend: upduino/xosera_upd.sv
Parsing SystemVerilog input from `upduino/xosera_upd.sv' to AST representation.
Suppressed Warning: Yosys has only limited support for tri-state logic at the moment. (upduino/xosera_upd.sv:141)
Generating RTLIL representation for module `\xosera_upd'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ./blitter.sv
Parsing SystemVerilog input from `./blitter.sv' to AST representation.
Generating RTLIL representation for module `\blitter'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ./blitter2.sv
Parsing SystemVerilog input from `./blitter2.sv' to AST representation.
Generating RTLIL representation for module `\blitter2'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ./bus_interface.sv
Parsing SystemVerilog input from `./bus_interface.sv' to AST representation.
Generating RTLIL representation for module `\bus_interface'.
Suppressed Warning: Replacing memory \data_r with list of registers. See ./bus_interface.sv:111, ./bus_interface.sv:79
Suppressed Warning: Replacing memory \reg_num_r with list of registers. See ./bus_interface.sv:108, ./bus_interface.sv:77
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ./colormem.sv
Parsing SystemVerilog input from `./colormem.sv' to AST representation.
Generating RTLIL representation for module `\colormem'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: ./copper.sv
Parsing SystemVerilog input from `./copper.sv' to AST representation.
Generating RTLIL representation for module `\copper'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: ./coppermem.sv
Parsing SystemVerilog input from `./coppermem.sv' to AST representation.
Generating RTLIL representation for module `\coppermem'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: ./reg_interface.sv
Parsing SystemVerilog input from `./reg_interface.sv' to AST representation.
Generating RTLIL representation for module `\reg_interface'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: ./spi_target.sv
Parsing SystemVerilog input from `./spi_target.sv' to AST representation.
Generating RTLIL representation for module `\spi_target'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: ./tilemem.sv
Parsing SystemVerilog input from `./tilemem.sv' to AST representation.
Generating RTLIL representation for module `\tilemem'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: ./video_blend.sv
Parsing SystemVerilog input from `./video_blend.sv' to AST representation.
Generating RTLIL representation for module `\video_blend'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: ./video_gen.sv
Parsing SystemVerilog input from `./video_gen.sv' to AST representation.
Generating RTLIL representation for module `\video_gen'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: ./video_playfield.sv
Parsing SystemVerilog input from `./video_playfield.sv' to AST representation.
Generating RTLIL representation for module `\video_playfield'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: ./vram.sv
Parsing SystemVerilog input from `./vram.sv' to AST representation.
Generating RTLIL representation for module `\vram'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: ./vram_arb.sv
Parsing SystemVerilog input from `./vram_arb.sv' to AST representation.
Generating RTLIL representation for module `\vram_arb'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: ./xosera_main.sv
Parsing SystemVerilog input from `./xosera_main.sv' to AST representation.
Generating RTLIL representation for module `\xosera_main'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: ./xosera_pkg.sv
Parsing SystemVerilog input from `./xosera_pkg.sv' to AST representation.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: ./xrmem_arb.sv
Parsing SystemVerilog input from `./xrmem_arb.sv' to AST representation.
Generating RTLIL representation for module `\xrmem_arb'.
Successfully finished Verilog frontend.

19. Executing SYNTH_ICE40 pass.

19.1. Executing Verilog-2005 frontend: /Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

19.2. Executing HIERARCHY pass (managing design hierarchy).

19.2.1. Analyzing design hierarchy..
Top module:  \xosera_upd
Used module:     \xosera_main
Used module:         \video_blend
Used module:         \blitter2
Used module:         \xrmem_arb
Used module:             \colormem
Used module:             \coppermem
Used module:             \tilemem
Used module:         \vram_arb
Used module:             \vram
Used module:         \copper
Used module:         \video_gen
Used module:             \video_playfield
Used module:         \reg_interface
Used module:             \bus_interface
Parameter \EN_BLEND = 1
Parameter \EN_BLEND_ADDCLAMP = 1

19.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\video_blend'.
Parameter \EN_BLEND = 1
Parameter \EN_BLEND_ADDCLAMP = 1
Generating RTLIL representation for module `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend'.
Parameter \EN_BLIT_DECR_MODE = 1
Parameter \EN_BLIT_DECR_LSHIFT = 1

19.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\blitter2'.
Parameter \EN_BLIT_DECR_MODE = 1
Parameter \EN_BLIT_DECR_LSHIFT = 1
Generating RTLIL representation for module `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2'.
Parameter \EN_VID_PF_B = 1

19.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\xrmem_arb'.
Parameter \EN_VID_PF_B = 1
Generating RTLIL representation for module `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001'.
Parameter \EN_BLIT = 1

19.2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\vram_arb'.
Parameter \EN_BLIT = 1
Generating RTLIL representation for module `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001'.
Parameter \EN_VID_PF_B = 1

19.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\video_gen'.
Parameter \EN_VID_PF_B = 1
Generating RTLIL representation for module `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001'.
Parameter \AWIDTH = 8
Parameter \PLAYFIELD = 8'01000010

19.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\colormem'.
Parameter \AWIDTH = 8
Parameter \PLAYFIELD = 8'01000010
Generating RTLIL representation for module `$paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem'.
Parameter \AWIDTH = 10

19.2.8. Executing AST frontend in derive mode using pre-parsed AST for module `\coppermem'.
Parameter \AWIDTH = 10
Generating RTLIL representation for module `$paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010'.
Parameter \AWIDTH = 10
Found cached RTLIL representation for module `$paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010'.
Parameter \AWIDTH = 10

19.2.9. Executing AST frontend in derive mode using pre-parsed AST for module `\tilemem'.
Parameter \AWIDTH = 10
Generating RTLIL representation for module `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010'.
Parameter \AWIDTH = 12

19.2.10. Executing AST frontend in derive mode using pre-parsed AST for module `\tilemem'.
Parameter \AWIDTH = 12
Generating RTLIL representation for module `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100'.
Parameter \AWIDTH = 8
Parameter \PLAYFIELD = 8'01000001

19.2.11. Executing AST frontend in derive mode using pre-parsed AST for module `\colormem'.
Parameter \AWIDTH = 8
Parameter \PLAYFIELD = 8'01000001
Generating RTLIL representation for module `$paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem'.

19.2.12. Analyzing design hierarchy..
Top module:  \xosera_upd
Used module:     \xosera_main
Used module:         $paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend
Used module:         $paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2
Used module:         $paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001
Used module:             \colormem
Used module:             \coppermem
Used module:             \tilemem
Used module:         $paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001
Used module:             \vram
Used module:         \copper
Used module:         $paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001
Used module:             \video_playfield
Used module:         \reg_interface
Used module:             \bus_interface
Parameter \AWIDTH = 8
Parameter \PLAYFIELD = 8'01000010
Found cached RTLIL representation for module `$paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem'.
Parameter \AWIDTH = 10
Found cached RTLIL representation for module `$paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010'.
Parameter \AWIDTH = 10
Found cached RTLIL representation for module `$paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010'.
Parameter \AWIDTH = 10
Found cached RTLIL representation for module `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010'.
Parameter \AWIDTH = 12
Found cached RTLIL representation for module `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100'.
Parameter \AWIDTH = 8
Parameter \PLAYFIELD = 8'01000001
Found cached RTLIL representation for module `$paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem'.

19.2.13. Analyzing design hierarchy..
Top module:  \xosera_upd
Used module:     \xosera_main
Used module:         $paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend
Used module:         $paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2
Used module:         $paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001
Used module:             $paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem
Used module:             $paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010
Used module:             $paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010
Used module:             $paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100
Used module:             $paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem
Used module:         $paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001
Used module:             \vram
Used module:         \copper
Used module:         $paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001
Used module:             \video_playfield
Used module:         \reg_interface
Used module:             \bus_interface

19.2.14. Analyzing design hierarchy..
Top module:  \xosera_upd
Used module:     \xosera_main
Used module:         $paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend
Used module:         $paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2
Used module:         $paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001
Used module:             $paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem
Used module:             $paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010
Used module:             $paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010
Used module:             $paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100
Used module:             $paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem
Used module:         $paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001
Used module:             \vram
Used module:         \copper
Used module:         $paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001
Used module:             \video_playfield
Used module:         \reg_interface
Used module:             \bus_interface
Removing unused module `\xrmem_arb'.
Removing unused module `\vram_arb'.
Removing unused module `\video_gen'.
Removing unused module `\video_blend'.
Removing unused module `\tilemem'.
Removing unused module `\spi_target'.
Removing unused module `\coppermem'.
Removing unused module `\colormem'.
Removing unused module `\blitter2'.
Removing unused module `\blitter'.
Removed 10 unused modules.

19.3. Executing PROC pass (convert processes to netlists).

19.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem.$proc$./colormem.sv:0$1240'.
Removing empty process `$paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem.$proc$./colormem.sv:0$1240'.
Found and cleaned up 2 empty switches in `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100.$proc$./tilemem.sv:0$1228'.
Removing empty process `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100.$proc$./tilemem.sv:0$1228'.
Found and cleaned up 2 empty switches in `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010.$proc$./tilemem.sv:0$1214'.
Removing empty process `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010.$proc$./tilemem.sv:0$1214'.
Found and cleaned up 1 empty switch in `$paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem.$proc$./colormem.sv:0$1192'.
Removing empty process `$paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem.$proc$./colormem.sv:0$1192'.
Found and cleaned up 3 empty switches in `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1075'.
Cleaned up 9 empty switches.

19.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1386$805 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1328$800 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1251$796 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1193$791 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1122$788 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1072$785 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1001$782 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:951$779 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:789$771 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:731$766 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:654$762 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:596$757 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:525$754 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:475$751 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:404$748 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:354$745 in module SB_DFFSR.
Marked 1 switch rules as full_case in process $proc$./colormem.sv:41$1230 in module $paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem.
Marked 2 switch rules as full_case in process $proc$./xosera_main.sv:417$483 in module xosera_main.
Marked 1 switch rules as full_case in process $proc$./tilemem.sv:74$1216 in module $paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100.
Removed 1 dead cases from process $proc$./vram.sv:0$467 in module vram.
Marked 1 switch rules as full_case in process $proc$./vram.sv:0$467 in module vram.
Marked 10 switch rules as full_case in process $proc$./video_playfield.sv:345$417 in module video_playfield.
Marked 19 switch rules as full_case in process $proc$./video_playfield.sv:0$365 in module video_playfield.
Marked 1 switch rules as full_case in process $proc$./video_playfield.sv:0$364 in module video_playfield.
Marked 1 switch rules as full_case in process $proc$./tilemem.sv:74$1204 in module $paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010.
Marked 1 switch rules as full_case in process $proc$./coppermem.sv:45$1194 in module $paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010.
Marked 1 switch rules as full_case in process $proc$./colormem.sv:41$1182 in module $paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem.
Marked 1 switch rules as full_case in process $proc$./video_gen.sv:550$1168 in module $paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.
Removed 1 dead cases from process $proc$./video_gen.sv:0$1167 in module $paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.
Marked 1 switch rules as full_case in process $proc$./video_gen.sv:0$1167 in module $paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.
Removed 1 dead cases from process $proc$./video_gen.sv:0$1161 in module $paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.
Marked 1 switch rules as full_case in process $proc$./video_gen.sv:0$1161 in module $paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.
Marked 2 switch rules as full_case in process $proc$./video_gen.sv:0$1154 in module $paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.
Marked 1 switch rules as full_case in process $proc$./video_gen.sv:470$1129 in module $paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.
Marked 1 switch rules as full_case in process $proc$./video_gen.sv:301$1128 in module $paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.
Marked 3 switch rules as full_case in process $proc$./reg_interface.sv:201$224 in module reg_interface.
Marked 1 switch rules as full_case in process $proc$./reg_interface.sv:187$219 in module reg_interface.
Marked 1 switch rules as full_case in process $proc$./reg_interface.sv:172$215 in module reg_interface.
Removed 1 dead cases from process $proc$./reg_interface.sv:0$188 in module reg_interface.
Marked 1 switch rules as full_case in process $proc$./reg_interface.sv:0$188 in module reg_interface.
Marked 3 switch rules as full_case in process $proc$./vram_arb.sv:0$1113 in module $paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.
Marked 13 switch rules as full_case in process $proc$./copper.sv:257$166 in module copper.
Marked 2 switch rules as full_case in process $proc$./xrmem_arb.sv:0$1089 in module $paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.
Marked 2 switch rules as full_case in process $proc$./xrmem_arb.sv:0$1082 in module $paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.
Marked 2 switch rules as full_case in process $proc$./xrmem_arb.sv:0$1075 in module $paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.
Marked 2 switch rules as full_case in process $proc$./xrmem_arb.sv:0$1067 in module $paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.
Marked 3 switch rules as full_case in process $proc$./xrmem_arb.sv:0$1060 in module $paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.
Marked 2 switch rules as full_case in process $proc$./xrmem_arb.sv:0$1052 in module $paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.
Marked 2 switch rules as full_case in process $proc$./bus_interface.sv:86$145 in module bus_interface.
Removed 4 dead cases from process $proc$./blitter2.sv:0$986 in module $paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.
Marked 19 switch rules as full_case in process $proc$./blitter2.sv:0$986 in module $paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.
Marked 3 switch rules as full_case in process $proc$./blitter2.sv:279$982 in module $paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.
Marked 1 switch rules as full_case in process $proc$./blitter2.sv:72$967 in module $paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.
Removed 2 dead cases from process $proc$./video_blend.sv:0$957 in module $paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.
Marked 2 switch rules as full_case in process $proc$./video_blend.sv:0$957 in module $paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.
Marked 1 switch rules as full_case in process $proc$./video_blend.sv:114$946 in module $paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.
Marked 1 switch rules as full_case in process $proc$upduino/xosera_upd.sv:250$6 in module xosera_upd.
Removed a total of 10 dead cases.

19.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 37 redundant assignments.
Promoted 166 assignments to connections.

19.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$808'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$804'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$799'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$795'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$790'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$787'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$784'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$781'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$778'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$776'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$774'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$770'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$765'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$761'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$756'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$753'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$750'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$747'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$744'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$742'.
  Set init value: \Q = 1'0
Found init rule in `\copper.$proc$./copper.sv:208$173'.
  Set init value: \ram_rd_strobe = 1'0
Found init rule in `\bus_interface.$proc$./bus_interface.sv:0$149'.
  Set init value: \cs_r = 5'00000
  Set init value: \read_r = 2'00
  Set init value: \bytesel_r = 2'00
  Set init value: \reg_num_r[0] = 4'0000
  Set init value: \reg_num_r[1] = 4'0000
  Set init value: \data_r[0] = 8'00000000
  Set init value: \data_r[1] = 8'00000000
  Set init value: \data_r[2] = 8'00000000

19.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1386$805'.
Found async reset \R in `\SB_DFFNER.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1251$796'.
Found async reset \S in `\SB_DFFNS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1122$788'.
Found async reset \R in `\SB_DFFNR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1001$782'.
Found async reset \S in `\SB_DFFES.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:789$771'.
Found async reset \R in `\SB_DFFER.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:654$762'.
Found async reset \S in `\SB_DFFS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:525$754'.
Found async reset \R in `\SB_DFFR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:404$748'.

19.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$808'.
Creating decoders for process `\SB_DFFNES.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1386$805'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$804'.
Creating decoders for process `\SB_DFFNESS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1328$800'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$799'.
Creating decoders for process `\SB_DFFNER.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1251$796'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$795'.
Creating decoders for process `\SB_DFFNESR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1193$791'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$790'.
Creating decoders for process `\SB_DFFNS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1122$788'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$787'.
Creating decoders for process `\SB_DFFNSS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1072$785'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$784'.
Creating decoders for process `\SB_DFFNR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1001$782'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$781'.
Creating decoders for process `\SB_DFFNSR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:951$779'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$778'.
Creating decoders for process `\SB_DFFNE.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:906$777'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$776'.
Creating decoders for process `\SB_DFFN.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:868$775'.
Creating decoders for process `\SB_DFFES.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$774'.
Creating decoders for process `\SB_DFFES.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:789$771'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$770'.
Creating decoders for process `\SB_DFFESS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:731$766'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$765'.
Creating decoders for process `\SB_DFFER.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:654$762'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$761'.
Creating decoders for process `\SB_DFFESR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:596$757'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$756'.
Creating decoders for process `\SB_DFFS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:525$754'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$753'.
Creating decoders for process `\SB_DFFSS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:475$751'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$750'.
Creating decoders for process `\SB_DFFR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:404$748'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$747'.
Creating decoders for process `\SB_DFFSR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:354$745'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$744'.
Creating decoders for process `\SB_DFFE.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:309$743'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$742'.
Creating decoders for process `\SB_DFF.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$741'.
Creating decoders for process `$paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem.$proc$./colormem.sv:47$1237'.
     1/1: $0\rd_data_o[15:0]
Creating decoders for process `$paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem.$proc$./colormem.sv:41$1230'.
     1/3: $1$memwr$\bram$./colormem.sv:43$1229_EN[15:0]$1236
     2/3: $1$memwr$\bram$./colormem.sv:43$1229_DATA[15:0]$1235
     3/3: $1$memwr$\bram$./colormem.sv:43$1229_ADDR[7:0]$1234
Creating decoders for process `\xosera_main.$proc$./xosera_main.sv:417$483'.
     1/2: $0\intr_status[3:0]
     2/2: $0\bus_intr_o[0:0]
Creating decoders for process `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100.$proc$./tilemem.sv:80$1223'.
     1/1: $0\rd_data_o[15:0]
Creating decoders for process `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100.$proc$./tilemem.sv:74$1216'.
     1/3: $1$memwr$\bram$./tilemem.sv:76$1215_EN[15:0]$1222
     2/3: $1$memwr$\bram$./tilemem.sv:76$1215_DATA[15:0]$1221
     3/3: $1$memwr$\bram$./tilemem.sv:76$1215_ADDR[11:0]$1220
Creating decoders for process `\vram.$proc$./vram.sv:0$467'.
     1/1: $1\data_out[15:0]
Creating decoders for process `\vram.$proc$./vram.sv:79$466'.
Creating decoders for process `\video_playfield.$proc$./video_playfield.sv:345$417'.
     1/32: $0\pf_pixels[63:0] [63:56]
     2/32: $0\pf_pixels[63:0] [55:0]
     3/32: $0\mem_fetch_active[0:0]
     4/32: $0\pf_pixels_buf[63:0]
     5/32: $0\pf_pixels_buf_hrev[0:0]
     6/32: $0\pf_pixels_buf_full[0:0]
     7/32: $0\pf_data_word3[15:0]
     8/32: $0\pf_data_word2[15:0]
     9/32: $0\pf_data_word1[15:0]
    10/32: $0\pf_data_word0[15:0]
    11/32: $0\pf_tile_attr[15:0]
    12/32: $0\pf_words_ready[0:0]
    13/32: $0\pf_initial_buf[0:0]
    14/32: $0\fetch_addr[15:0]
    15/32: $0\tilemem_sel[0:0]
    16/32: $0\vram_sel[0:0]
    17/32: $0\pf_addr[15:0]
    18/32: $0\pf_fetch[3:0]
    19/32: $0\pf_line_start[15:0]
    20/32: $0\pf_tile_y[3:0]
    21/32: $0\pf_tile_x[2:0]
    22/32: $0\pf_v_frac_count[2:0]
    23/32: $0\pf_h_frac_count[2:0]
    24/32: $0\pf_v_count[1:0]
    25/32: $0\pf_h_count[1:0]
    26/32: $0\scanout_end_hcount[9:0]
    27/32: $0\scanout_start_hcount[9:0]
    28/32: $0\scanout[0:0]
    29/32: $0\tilemem_addr_o[12:0]
    30/32: $0\tilemem_sel_o[0:0]
    31/32: $0\vram_addr_o[15:0]
    32/32: $0\vram_sel_o[0:0]
Creating decoders for process `\video_playfield.$proc$./video_playfield.sv:0$365'.
     1/67: $1\pf_data_word0_next[15:0] [15:8]
     2/67: $13\fetch_addr_next[15:0]
     3/67: $7\tilemem_sel_next[0:0]
     4/67: $13\vram_sel_next[0:0]
     5/67: $1\pf_tile_attr_next[15:0] [15:11]
     6/67: $6\tilemem_sel_next[0:0]
     7/67: $12\vram_sel_next[0:0]
     8/67: $3\pf_data_word0_next[7:0]
     9/67: $10\pf_fetch_next[3:0]
    10/67: $2\pf_data_word0_next[7:0]
    11/67: $11\fetch_addr_next[15:0]
    12/67: $5\tilemem_sel_next[0:0]
    13/67: $11\vram_sel_next[0:0]
    14/67: $1\pf_tile_attr_next[15:0] [10:0]
    15/67: $1\pf_data_word0_next[15:0] [7:0]
    16/67: $4\tilemem_sel_next[0:0]
    17/67: $10\vram_sel_next[0:0]
    18/67: $12\fetch_addr_next[15:0]
    19/67: $9\pf_addr_next[15:0]
    20/67: $9\fetch_addr_next[15:0]
    21/67: $3\tilemem_sel_next[0:0]
    22/67: $9\vram_sel_next[0:0]
    23/67: $8\pf_fetch_next[3:0]
    24/67: $8\fetch_addr_next[15:0]
    25/67: $2\tilemem_sel_next[0:0]
    26/67: $8\vram_sel_next[0:0]
    27/67: $8\pf_addr_next[15:0]
    28/67: $2\pf_data_word3_next[15:0]
    29/67: $10\fetch_addr_next[15:0]
    30/67: $7\fetch_addr_next[15:0]
    31/67: $7\vram_sel_next[0:0]
    32/67: $7\pf_addr_next[15:0]
    33/67: $9\pf_fetch_next[3:0]
    34/67: $7\pf_fetch_next[3:0]
    35/67: $6\fetch_addr_next[15:0]
    36/67: $6\vram_sel_next[0:0]
    37/67: $6\pf_fetch_next[3:0]
    38/67: $5\fetch_addr_next[15:0]
    39/67: $5\vram_sel_next[0:0]
    40/67: $5\pf_addr_next[15:0]
    41/67: $4\pf_addr_next[15:0]
    42/67: $4\fetch_addr_next[15:0]
    43/67: $4\vram_sel_next[0:0]
    44/67: $5\pf_fetch_next[3:0]
    45/67: $3\pf_addr_next[15:0]
    46/67: $3\fetch_addr_next[15:0]
    47/67: $3\vram_sel_next[0:0]
    48/67: $4\pf_fetch_next[3:0]
    49/67: $2\fetch_addr_next[15:0]
    50/67: $2\vram_sel_next[0:0]
    51/67: $2\pf_addr_next[15:0]
    52/67: $3\pf_fetch_next[3:0]
    53/67: $2\pf_fetch_next[3:0]
    54/67: $1\pf_fetch_next[3:0]
    55/67: $1\pf_data_word3_next[15:0]
    56/67: $1\pf_data_word2_next[15:0]
    57/67: $1\pf_data_word1_next[15:0]
    58/67: $11\pf_fetch_next[3:0]
    59/67: $6\pf_addr_next[15:0]
    60/67: $1\pf_words_ready_next[0:0]
    61/67: $1\pf_initial_buf_next[0:0]
    62/67: $1\fetch_addr_next[15:0]
    63/67: $1\tilemem_sel_next[0:0]
    64/67: $1\vram_sel_next[0:0]
    65/67: $1\pf_addr_next[15:0]
    66/67: $2\calc_tile_addr$func$./video_playfield.sv:187$349.$result[15:0]$375
    67/67: $1\calc_tile_addr$func$./video_playfield.sv:187$349.$result[15:0]$373
Creating decoders for process `\video_playfield.$proc$./video_playfield.sv:0$364'.
     1/1: $1\mem_fetch_hcount[9:0]
Creating decoders for process `\video_playfield.$proc$./video_playfield.sv:0$359'.
Creating decoders for process `\video_playfield.$proc$./video_playfield.sv:0$356'.
Creating decoders for process `\video_playfield.$proc$./video_playfield.sv:0$353'.
Creating decoders for process `\video_playfield.$proc$./video_playfield.sv:0$350'.
Creating decoders for process `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010.$proc$./tilemem.sv:80$1211'.
     1/1: $0\rd_data_o[15:0]
Creating decoders for process `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010.$proc$./tilemem.sv:74$1204'.
     1/3: $1$memwr$\bram$./tilemem.sv:76$1203_EN[15:0]$1210
     2/3: $1$memwr$\bram$./tilemem.sv:76$1203_DATA[15:0]$1209
     3/3: $1$memwr$\bram$./tilemem.sv:76$1203_ADDR[9:0]$1208
Creating decoders for process `$paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010.$proc$./coppermem.sv:51$1201'.
     1/1: $0\rd_data_o[15:0]
Creating decoders for process `$paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010.$proc$./coppermem.sv:45$1194'.
     1/3: $1$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1200
     2/3: $1$memwr$\bram$./coppermem.sv:47$1193_DATA[15:0]$1199
     3/3: $1$memwr$\bram$./coppermem.sv:47$1193_ADDR[9:0]$1198
Creating decoders for process `$paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem.$proc$./colormem.sv:47$1189'.
     1/1: $0\rd_data_o[15:0]
Creating decoders for process `$paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem.$proc$./colormem.sv:41$1182'.
     1/3: $1$memwr$\bram$./colormem.sv:43$1181_EN[15:0]$1188
     2/3: $1$memwr$\bram$./colormem.sv:43$1181_DATA[15:0]$1187
     3/3: $1$memwr$\bram$./colormem.sv:43$1181_ADDR[7:0]$1186
Creating decoders for process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:209$1171'.
     1/4: $0\opt_PF_B.pb_tilemem_rd_data[15:0]
     2/4: $0\opt_PF_B.pb_tilemem_rd_save[0:0]
     3/4: $0\opt_PF_B.pb_vram_rd_data[15:0]
     4/4: $0\opt_PF_B.pb_vram_rd_save[0:0]
Creating decoders for process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:550$1168'.
     1/9: $0\v_count[9:0]
     2/9: $0\h_count[9:0]
     3/9: $0\v_state[1:0]
     4/9: $0\h_state[1:0]
     5/9: $0\dv_de_o[0:0]
     6/9: $0\vsync_o[0:0]
     7/9: $0\hsync_o[0:0]
     8/9: $0\colorB_index_o[7:0]
     9/9: $0\colorA_index_o[7:0]
Creating decoders for process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1167'.
     1/1: $1\v_count_next_state[9:0]
Creating decoders for process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1162'.
Creating decoders for process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1161'.
     1/1: $1\h_count_next_state[9:0]
Creating decoders for process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1157'.
Creating decoders for process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1154'.
     1/3: $2\v_count_next[9:0]
     2/3: $1\v_count_next[9:0]
     3/3: $1\h_count_next[9:0]
Creating decoders for process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1149'.
Creating decoders for process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1144'.
Creating decoders for process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1140'.
Creating decoders for process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1136'.
Creating decoders for process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1134'.
Creating decoders for process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1132'.
Creating decoders for process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:470$1129'.
     1/1: $0\vgen_reg_data_o[15:0]
Creating decoders for process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
     1/46: $0\intr_signal_o[3:0] [3]
     2/46: $0\intr_signal_o[3:0] [2:0]
     3/46: $0\copp_reg_data_o[15:0] [9:0]
     4/46: $0\copp_reg_data_o[15:0] [15]
     5/46: $0\pa_gfx_ctrl_set[0:0]
     6/46: $0\pa_line_start_set[0:0]
     7/46: $0\copp_reg_data_o[15:0] [14:10]
     8/46: $0\line_set_addr[15:0]
     9/46: $0\pb_gfx_ctrl_set[0:0]
    10/46: $0\pb_line_start_set[0:0]
    11/46: $0\pb_fine_vscroll[5:0]
    12/46: $0\pb_fine_hscroll[4:0]
    13/46: $0\pb_v_frac_repeat[2:0]
    14/46: $0\pb_h_frac_repeat[2:0]
    15/46: $0\pb_v_repeat[1:0]
    16/46: $0\pb_h_repeat[1:0]
    17/46: $0\pb_tile_height[3:0]
    18/46: $0\pb_tile_in_vram[0:0]
    19/46: $0\pb_disp_in_tile[0:0]
    20/46: $0\pb_tile_bank[5:0]
    21/46: $0\pb_bitmap[0:0]
    22/46: $0\pb_bpp[1:0]
    23/46: $0\pb_colorbase[7:0]
    24/46: $0\pb_line_len[15:0]
    25/46: $0\pb_start_addr[15:0]
    26/46: $0\pb_blank[0:0]
    27/46: $0\pa_fine_vscroll[5:0]
    28/46: $0\pa_fine_hscroll[4:0]
    29/46: $0\pa_v_frac_repeat[2:0]
    30/46: $0\pa_h_frac_repeat[2:0]
    31/46: $0\pa_v_repeat[1:0]
    32/46: $0\pa_h_repeat[1:0]
    33/46: $0\pa_tile_height[3:0]
    34/46: $0\pa_tile_in_vram[0:0]
    35/46: $0\pa_disp_in_tile[0:0]
    36/46: $0\pa_tile_bank[5:0]
    37/46: $0\pa_bitmap[0:0]
    38/46: $0\pa_bpp[1:0]
    39/46: $0\pa_colorbase[7:0]
    40/46: $0\pa_line_len[15:0]
    41/46: $0\pa_start_addr[15:0]
    42/46: $0\pa_blank[0:0]
    43/46: $0\vid_right[9:0]
    44/46: $0\vid_left[9:0]
    45/46: $0\border_color[7:0]
    46/46: $0\copp_reg_wr_o[0:0]
Creating decoders for process `\reg_interface.$proc$./reg_interface.sv:201$224'.
     1/35: $0\reg_rw_addr[15:0] [15:8]
     2/35: $0\reg_rw_addr[15:0] [7:0]
     3/35: $0\reg_rw_incr[15:0] [7:0]
     4/35: $0\reg_wr_addr[15:0] [7:0]
     5/35: $0\reg_wr_incr[15:0] [7:0]
     6/35: $0\reg_rd_addr[15:0] [7:0]
     7/35: $0\reg_rd_incr[15:0] [7:0]
     8/35: $0\reg_xr_addr[15:0] [7:0]
     9/35: $0\timer_latch_val[7:0]
    10/35: $0\reg_data_even[7:0]
    11/35: $0\reg_xr_data_even[7:0]
    12/35: $0\reg_wr_addr[15:0] [15:8]
    13/35: $0\vram_rw_wr[0:0]
    14/35: $0\vram_rw_rd[0:0]
    15/35: $0\vram_rd[0:0]
    16/35: $0\xr_rd[0:0]
    17/35: $0\reg_rw_rd_inc[0:0]
    18/35: $0\reg_rw_data[15:0]
    19/35: $0\reg_rw_incr[15:0] [15:8]
    20/35: $0\reconfig_o[0:0]
    21/35: $0\reg_wr_incr[15:0] [15:8]
    22/35: $0\reg_rd_addr[15:0] [15:8]
    23/35: $0\reg_rd_data[15:0]
    24/35: $0\reg_rd_incr[15:0] [15:8]
    25/35: $0\reg_xr_addr[15:0] [15:8]
    26/35: $0\reg_xr_data[15:0]
    27/35: $0\intr_clear_o[3:0]
    28/35: $0\regs_data_o[15:0]
    29/35: $0\regs_addr_o[15:0]
    30/35: $0\regs_wrmask_o[3:0]
    31/35: $0\regs_wr_o[0:0]
    32/35: $0\regs_xr_sel_o[0:0]
    33/35: $0\regs_vram_sel_o[0:0]
    34/35: $0\intr_mask[3:0]
    35/35: $0\boot_select_o[1:0]
Creating decoders for process `\reg_interface.$proc$./reg_interface.sv:187$219'.
     1/2: $0\LFSR[18:0]
     2/2: $0\reg_LFSR[15:0]
Creating decoders for process `\reg_interface.$proc$./reg_interface.sv:172$215'.
     1/2: $0\reg_timer_frac[11:0]
     2/2: $0\reg_timer[15:0]
Creating decoders for process `\reg_interface.$proc$./reg_interface.sv:0$188'.
     1/1: $1\bus_data_o[7:0]
Creating decoders for process `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.$proc$./vram_arb.sv:114$1119'.
Creating decoders for process `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.$proc$./vram_arb.sv:0$1113'.
     1/20: $3\vram_data_in[15:0]
     2/20: $3\vram_wr_mask[3:0]
     3/20: $3\vram_addr[15:0]
     4/20: $3\vram_wr[0:0]
     5/20: $3\vram_sel[0:0]
     6/20: $3\blit_ack_next[0:0]
     7/20: $2\vram_data_in[15:0]
     8/20: $2\vram_wr_mask[3:0]
     9/20: $2\vram_addr[15:0]
    10/20: $2\vram_wr[0:0]
    11/20: $2\vram_sel[0:0]
    12/20: $2\regs_ack_next[0:0]
    13/20: $2\blit_ack_next[0:0]
    14/20: $1\vram_data_in[15:0]
    15/20: $1\vram_wr_mask[3:0]
    16/20: $1\vram_addr[15:0]
    17/20: $1\vram_wr[0:0]
    18/20: $1\vram_sel[0:0]
    19/20: $1\blit_ack_next[0:0]
    20/20: $1\regs_ack_next[0:0]
Creating decoders for process `\copper.$proc$./copper.sv:208$173'.
Creating decoders for process `\copper.$proc$./copper.sv:257$166'.
     1/17: $0\ram_wr_addr_out[15:0] [9]
     2/17: $0\ram_wr_addr_out[15:0] [8]
     3/17: $0\ram_wr_addr_out[15:0] [15:13]
     4/17: $0\ram_wr_addr_out[15:0] [12:10]
     5/17: $0\ram_wr_addr_out[15:0] [7:0]
     6/17: $0\copper_pc_skip[9:0]
     7/17: $0\h_reached[0:0]
     8/17: $0\v_reached[0:0]
     9/17: $0\xr_wr_en[0:0]
    10/17: $0\ram_rd_strobe[0:0]
    11/17: $0\ram_wr_data_out[15:0]
    12/17: $0\reg_reserved[4:0]
    13/17: $0\copper_en[0:0]
    14/17: $0\copper_pc[9:0]
    15/17: $0\copper_init_pc[9:0]
    16/17: $0\copper_ex_state[2:0]
    17/17: $0\r_insn[31:0]
Creating decoders for process `\copper.$proc$./copper.sv:0$162'.
Creating decoders for process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:275$1096'.
Creating decoders for process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1089'.
     1/6: $2\copp_addr[9:0]
     2/6: $2\copp_rd_en[0:0]
     3/6: $2\copp_rd_ack_next[0:0]
     4/6: $1\copp_addr[9:0]
     5/6: $1\copp_rd_en[0:0]
     6/6: $1\copp_rd_ack_next[0:0]
Creating decoders for process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1082'.
     1/6: $2\tile_addr_next[12:0]
     2/6: $2\tile_rd_en[0:0]
     3/6: $2\tile_rd_ack_next[0:0]
     4/6: $1\tile_addr_next[12:0]
     5/6: $1\tile_rd_en[0:0]
     6/6: $1\tile_rd_ack_next[0:0]
Creating decoders for process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1075'.
     1/10: $5\colorB_addr[7:0]
     2/10: $4\colorB_addr[7:0]
     3/10: $2\colorA_addr[7:0]
     4/10: $2\color_rd_en[0:0]
     5/10: $2\color_rd_ack_next[0:0]
     6/10: $3\colorB_addr[7:0]
     7/10: $2\colorB_addr[7:0]
     8/10: $1\colorA_addr[7:0]
     9/10: $1\color_rd_en[0:0]
    10/10: $1\color_rd_ack_next[0:0]
Creating decoders for process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1067'.
     1/4: $2\xreg_wr_o[0:0]
     2/4: $2\xreg_rd_ack_next[0:0]
     3/4: $1\xreg_wr_o[0:0]
     4/4: $1\xreg_rd_ack_next[0:0]
Creating decoders for process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1060'.
     1/3: $3\xr_data_o[15:0]
     2/3: $2\xr_data_o[15:0]
     3/3: $1\xr_data_o[15:0]
Creating decoders for process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1052'.
     1/8: $2\copp_wr_en[0:0]
     2/8: $2\tile_wr_en[0:0]
     3/8: $2\color_wr_en[0:0]
     4/8: $1\xr_wr_ack_next[0:0]
     5/8: $1\copp_wr_en[0:0]
     6/8: $1\tile_wr_en[0:0]
     7/8: $1\color_wr_en[0:0]
     8/8: $1\copp_wr_ack_next[0:0]
Creating decoders for process `\bus_interface.$proc$./bus_interface.sv:0$149'.
Creating decoders for process `\bus_interface.$proc$./bus_interface.sv:86$145'.
     1/13: $0\bytedata_o[7:0]
     2/13: $0\bytesel_o[0:0]
     3/13: $0\reg_num_o[3:0]
     4/13: $0\read_strobe_o[0:0]
     5/13: $0\write_strobe_o[0:0]
     6/13: $0\cs_r[4:0]
     7/13: $0\data_r[2][7:0]
     8/13: $0\data_r[1][7:0]
     9/13: $0\data_r[0][7:0]
    10/13: $0\reg_num_r[1][3:0]
    11/13: $0\reg_num_r[0][3:0]
    12/13: $0\bytesel_r[1:0]
    13/13: $0\read_r[1:0]
Creating decoders for process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
     1/65: $10\blit_state_next[2:0]
     2/65: $9\blit_state_next[2:0]
     3/65: $2\blit_done_intr_next[0:0]
     4/65: $8\blit_state_next[2:0]
     5/65: $8\blit_addr_next[15:0]
     6/65: $7\blit_wr_next[0:0]
     7/65: $7\blit_vram_sel_next[0:0]
     8/65: $7\blit_state_next[2:0]
     9/65: $7\blit_addr_next[15:0]
    10/65: $6\blit_wr_next[0:0]
    11/65: $6\blit_vram_sel_next[0:0]
    12/65: $6\blit_state_next[2:0]
    13/65: $5\blit_wr_next[0:0]
    14/65: $5\blit_vram_sel_next[0:0]
    15/65: $6\blit_addr_next[15:0]
    16/65: $5\blit_addr_next[15:0]
    17/65: $2\blit_dst_D_next[15:0]
    18/65: $2\blit_src_B_next[15:0]
    19/65: $4\shifter$func$./blitter2.sv:470$965.$result[15:0]$1022
    20/65: $3\shifter$func$./blitter2.sv:470$965.$result[15:0]$1021
    21/65: $2\shifter$func$./blitter2.sv:470$965.$result[15:0]$1020
    22/65: $5\blit_state_next[2:0]
    23/65: $4\blit_addr_next[15:0]
    24/65: $4\blit_wr_next[0:0]
    25/65: $4\blit_vram_sel_next[0:0]
    26/65: $2\blit_src_A_next[15:0]
    27/65: $4\shifter$func$./blitter2.sv:446$964.$result[15:0]$1014
    28/65: $3\shifter$func$./blitter2.sv:446$964.$result[15:0]$1013
    29/65: $2\shifter$func$./blitter2.sv:446$964.$result[15:0]$1012
    30/65: $4\blit_state_next[2:0]
    31/65: $3\blit_addr_next[15:0]
    32/65: $3\blit_wr_next[0:0]
    33/65: $3\blit_vram_sel_next[0:0]
    34/65: $3\blit_state_next[2:0]
    35/65: $2\blit_addr_next[15:0]
    36/65: $2\blit_wr_next[0:0]
    37/65: $2\blit_vram_sel_next[0:0]
    38/65: $2\blit_state_next[2:0]
    39/65: $1\blit_state_next[2:0]
    40/65: $1\shifter$func$./blitter2.sv:470$965.prev_word[15:0]$1006
    41/65: $1\shifter$func$./blitter2.sv:470$965.data_word[15:0]$1005
    42/65: $1\shifter$func$./blitter2.sv:470$965.shift_amount[1:0]$1004
    43/65: $1\shifter$func$./blitter2.sv:470$965.decr[0:0]$1003
    44/65: $1\shifter$func$./blitter2.sv:470$965.$result[15:0]$1002
    45/65: $1\shifter$func$./blitter2.sv:446$964.prev_word[15:0]$1001
    46/65: $1\shifter$func$./blitter2.sv:446$964.data_word[15:0]$1000
    47/65: $1\shifter$func$./blitter2.sv:446$964.shift_amount[1:0]$999
    48/65: $1\shifter$func$./blitter2.sv:446$964.decr[0:0]$998
    49/65: $1\shifter$func$./blitter2.sv:446$964.$result[15:0]$997
    50/65: $1\blit_done_intr_next[0:0]
    51/65: $1\blit_f_mask_next[3:0]
    52/65: $1\blit_count_next[16:0]
    53/65: $1\blit_lines_next[15:0]
    54/65: $1\last_B_next[15:0]
    55/65: $1\last_A_next[15:0]
    56/65: $1\val_B_next[15:0]
    57/65: $1\val_A_next[15:0]
    58/65: $1\blit_dst_D_next[15:0]
    59/65: $1\blit_val_C_next[15:0]
    60/65: $1\blit_src_B_next[15:0]
    61/65: $1\blit_src_A_next[15:0]
    62/65: $1\blit_addr_next[15:0]
    63/65: $1\blit_wr_next[0:0]
    64/65: $1\blit_vram_sel_next[0:0]
    65/65: $1\blit_setup[0:0]
Creating decoders for process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
     1/32: $0\blit_addr[15:0]
     2/32: $0\blit_wr[0:0]
     3/32: $0\blit_vram_sel[0:0]
     4/32: $0\blit_done_intr[0:0]
     5/32: $0\blit_f_mask[3:0]
     6/32: $0\val_B_prime[15:0]
     7/32: $0\blit_state[2:0]
     8/32: $0\val_B[15:0]
     9/32: $0\val_A[15:0]
    10/32: $0\last_B[15:0]
    11/32: $0\last_A[15:0]
    12/32: $0\blit_count[16:0]
    13/32: $0\blit_words[15:0]
    14/32: $0\blit_lines[15:0]
    15/32: $0\blit_dst_D[15:0]
    16/32: $0\blit_val_C[15:0]
    17/32: $0\blit_src_B[15:0]
    18/32: $0\blit_src_A[15:0]
    19/32: $0\blit_mod_D[15:0]
    20/32: $0\blit_mod_C[15:0]
    21/32: $0\blit_mod_B[15:0]
    22/32: $0\blit_mod_A[15:0]
    23/32: $0\blit_shift_l_mask[3:0]
    24/32: $0\blit_shift_f_mask[3:0]
    25/32: $0\blit_shift_amount[1:0]
    26/32: $0\blit_ctrl_transp_T[7:0]
    27/32: $0\blit_ctrl_transp_8b[0:0]
    28/32: $0\blit_ctrl_decrement[0:0]
    29/32: $0\blit_ctrl_C_use_B[0:0]
    30/32: $0\blit_ctrl_B_not[0:0]
    31/32: $0\blit_ctrl_B_const[0:0]
    32/32: $0\blit_ctrl_A_const[0:0]
Creating decoders for process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
     1/21: $0\xreg_blit_queued[0:0]
     2/21: $0\xreg_words[15:0]
     3/21: $0\xreg_lines[15:0]
     4/21: $0\xreg_dst_D[15:0]
     5/21: $0\xreg_mod_D[15:0]
     6/21: $0\xreg_val_C[15:0]
     7/21: $0\xreg_mod_C[15:0]
     8/21: $0\xreg_src_B[15:0]
     9/21: $0\xreg_mod_B[15:0]
    10/21: $0\xreg_src_A[15:0]
    11/21: $0\xreg_mod_A[15:0]
    12/21: $0\xreg_shift_l_mask[3:0]
    13/21: $0\xreg_shift_f_mask[3:0]
    14/21: $0\xreg_shift_amount[1:0]
    15/21: $0\xreg_ctrl_transp_T[7:0]
    16/21: $0\xreg_ctrl_transp_8b[0:0]
    17/21: $0\xreg_ctrl_decrement[0:0]
    18/21: $0\xreg_ctrl_C_use_B[0:0]
    19/21: $0\xreg_ctrl_B_not[0:0]
    20/21: $0\xreg_ctrl_B_const[0:0]
    21/21: $0\xreg_ctrl_A_const[0:0]
Creating decoders for process `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:0$957'.
     1/2: $2\blend_result[11:0]
     2/2: $1\blend_result[11:0]
Creating decoders for process `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:0$947'.
Creating decoders for process `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:114$946'.
     1/1: $0\blend_rgb_o[11:0]
Creating decoders for process `\xosera_upd.$proc$upduino/xosera_upd.sv:250$6'.
     1/1: $0\reset[0:0]
Creating decoders for process `\xosera_upd.$proc$upduino/xosera_upd.sv:145$5'.

19.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\vram.\data_out' from process `\vram.$proc$./vram.sv:0$467'.
No latch inferred for signal `\video_playfield.\pf_fetch_next' from process `\video_playfield.$proc$./video_playfield.sv:0$365'.
No latch inferred for signal `\video_playfield.\pf_addr_next' from process `\video_playfield.$proc$./video_playfield.sv:0$365'.
No latch inferred for signal `\video_playfield.\pf_tile_addr' from process `\video_playfield.$proc$./video_playfield.sv:0$365'.
No latch inferred for signal `\video_playfield.\vram_sel_next' from process `\video_playfield.$proc$./video_playfield.sv:0$365'.
No latch inferred for signal `\video_playfield.\tilemem_sel_next' from process `\video_playfield.$proc$./video_playfield.sv:0$365'.
No latch inferred for signal `\video_playfield.\fetch_addr_next' from process `\video_playfield.$proc$./video_playfield.sv:0$365'.
No latch inferred for signal `\video_playfield.\pf_initial_buf_next' from process `\video_playfield.$proc$./video_playfield.sv:0$365'.
No latch inferred for signal `\video_playfield.\pf_words_ready_next' from process `\video_playfield.$proc$./video_playfield.sv:0$365'.
No latch inferred for signal `\video_playfield.\pf_tile_attr_next' from process `\video_playfield.$proc$./video_playfield.sv:0$365'.
No latch inferred for signal `\video_playfield.\pf_data_word0_next' from process `\video_playfield.$proc$./video_playfield.sv:0$365'.
No latch inferred for signal `\video_playfield.\pf_data_word1_next' from process `\video_playfield.$proc$./video_playfield.sv:0$365'.
No latch inferred for signal `\video_playfield.\pf_data_word2_next' from process `\video_playfield.$proc$./video_playfield.sv:0$365'.
No latch inferred for signal `\video_playfield.\pf_data_word3_next' from process `\video_playfield.$proc$./video_playfield.sv:0$365'.
No latch inferred for signal `\video_playfield.\calc_tile_addr$func$./video_playfield.sv:187$349.$result' from process `\video_playfield.$proc$./video_playfield.sv:0$365'.
No latch inferred for signal `\video_playfield.\calc_tile_addr$func$./video_playfield.sv:187$349.tile_char' from process `\video_playfield.$proc$./video_playfield.sv:0$365'.
No latch inferred for signal `\video_playfield.\calc_tile_addr$func$./video_playfield.sv:187$349.tile_y' from process `\video_playfield.$proc$./video_playfield.sv:0$365'.
No latch inferred for signal `\video_playfield.\calc_tile_addr$func$./video_playfield.sv:187$349.tilebank' from process `\video_playfield.$proc$./video_playfield.sv:0$365'.
No latch inferred for signal `\video_playfield.\calc_tile_addr$func$./video_playfield.sv:187$349.bpp' from process `\video_playfield.$proc$./video_playfield.sv:0$365'.
No latch inferred for signal `\video_playfield.\calc_tile_addr$func$./video_playfield.sv:187$349.tile_8x16' from process `\video_playfield.$proc$./video_playfield.sv:0$365'.
No latch inferred for signal `\video_playfield.\calc_tile_addr$func$./video_playfield.sv:187$349.vrev' from process `\video_playfield.$proc$./video_playfield.sv:0$365'.
No latch inferred for signal `\video_playfield.\mem_fetch_hcount' from process `\video_playfield.$proc$./video_playfield.sv:0$364'.
No latch inferred for signal `\video_playfield.\mem_fetch_next' from process `\video_playfield.$proc$./video_playfield.sv:0$359'.
No latch inferred for signal `\video_playfield.\h_start_line_fetch' from process `\video_playfield.$proc$./video_playfield.sv:0$356'.
No latch inferred for signal `\video_playfield.\scanout_end' from process `\video_playfield.$proc$./video_playfield.sv:0$353'.
No latch inferred for signal `\video_playfield.\scanout_start' from process `\video_playfield.$proc$./video_playfield.sv:0$350'.
No latch inferred for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\v_count_next_state' from process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1167'.
No latch inferred for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\v_state_next' from process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1162'.
No latch inferred for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\h_count_next_state' from process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1161'.
No latch inferred for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\h_state_next' from process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1157'.
No latch inferred for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\h_count_next' from process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1154'.
No latch inferred for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\v_count_next' from process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1154'.
No latch inferred for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\last_frame_pixel' from process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1149'.
No latch inferred for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\last_visible_pixel' from process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1144'.
No latch inferred for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\h_line_last_pixel' from process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1140'.
No latch inferred for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\dv_display_ena' from process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1136'.
No latch inferred for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\vsync' from process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1134'.
No latch inferred for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\hsync' from process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1132'.
No latch inferred for signal `\reg_interface.\bus_data_o' from process `\reg_interface.$proc$./reg_interface.sv:0$188'.
No latch inferred for signal `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.\vram_sel' from process `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.$proc$./vram_arb.sv:0$1113'.
No latch inferred for signal `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.\vram_wr' from process `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.$proc$./vram_arb.sv:0$1113'.
No latch inferred for signal `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.\vram_wr_mask' from process `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.$proc$./vram_arb.sv:0$1113'.
No latch inferred for signal `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.\vram_addr' from process `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.$proc$./vram_arb.sv:0$1113'.
No latch inferred for signal `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.\vram_data_in' from process `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.$proc$./vram_arb.sv:0$1113'.
No latch inferred for signal `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.\regs_ack_next' from process `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.$proc$./vram_arb.sv:0$1113'.
No latch inferred for signal `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.\blit_ack_next' from process `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.$proc$./vram_arb.sv:0$1113'.
No latch inferred for signal `\copper.\copp_reset' from process `\copper.$proc$./copper.sv:0$162'.
No latch inferred for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\copp_rd_en' from process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1089'.
No latch inferred for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\copp_addr' from process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1089'.
No latch inferred for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\copp_rd_ack_next' from process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1089'.
No latch inferred for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\tile_rd_en' from process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1082'.
No latch inferred for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\tile_addr_next' from process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1082'.
No latch inferred for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\tile_rd_ack_next' from process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1082'.
No latch inferred for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\color_rd_en' from process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1075'.
No latch inferred for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\colorA_addr' from process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1075'.
No latch inferred for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\colorB_addr' from process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1075'.
No latch inferred for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\color_rd_ack_next' from process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1075'.
No latch inferred for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\xreg_wr_o' from process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1067'.
No latch inferred for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\xreg_addr_o' from process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1067'.
No latch inferred for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\xreg_data_o' from process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1067'.
No latch inferred for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\xreg_rd_ack_next' from process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1067'.
No latch inferred for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\xr_data_o' from process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1060'.
No latch inferred for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\color_wr_en' from process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1052'.
No latch inferred for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\tile_wr_en' from process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1052'.
No latch inferred for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\copp_wr_en' from process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1052'.
No latch inferred for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\copp_wr_ack_next' from process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1052'.
No latch inferred for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\xr_wr_ack_next' from process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1052'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_setup' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_vram_sel_next' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_wr_next' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_addr_next' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_src_A_next' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_src_B_next' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_val_C_next' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_dst_D_next' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\val_A_next' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\val_B_next' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\last_A_next' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\last_B_next' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_lines_next' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_count_next' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_f_mask_next' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_done_intr_next' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_state_next' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\shifter$func$./blitter2.sv:446$964.$result' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\shifter$func$./blitter2.sv:446$964.decr' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\shifter$func$./blitter2.sv:446$964.shift_amount' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\shifter$func$./blitter2.sv:446$964.data_word' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\shifter$func$./blitter2.sv:446$964.prev_word' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\shifter$func$./blitter2.sv:470$965.$result' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\shifter$func$./blitter2.sv:470$965.decr' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\shifter$func$./blitter2.sv:470$965.shift_amount' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\shifter$func$./blitter2.sv:470$965.data_word' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\shifter$func$./blitter2.sv:470$965.prev_word' from process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
No latch inferred for signal `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.\blend_result' from process `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:0$957'.
No latch inferred for signal `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.\r_alpha25' from process `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:0$947'.
No latch inferred for signal `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.\g_alpha25' from process `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:0$947'.
No latch inferred for signal `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.\b_alpha25' from process `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:0$947'.
No latch inferred for signal `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.\r_alpha50' from process `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:0$947'.
No latch inferred for signal `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.\g_alpha50' from process `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:0$947'.
No latch inferred for signal `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.\b_alpha50' from process `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:0$947'.

19.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1386$805'.
  created $adff cell `$procdff$5520' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1328$800'.
  created $dff cell `$procdff$5521' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1251$796'.
  created $adff cell `$procdff$5522' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1193$791'.
  created $dff cell `$procdff$5523' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1122$788'.
  created $adff cell `$procdff$5524' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1072$785'.
  created $dff cell `$procdff$5525' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1001$782'.
  created $adff cell `$procdff$5526' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:951$779'.
  created $dff cell `$procdff$5527' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:906$777'.
  created $dff cell `$procdff$5528' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:868$775'.
  created $dff cell `$procdff$5529' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:789$771'.
  created $adff cell `$procdff$5530' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:731$766'.
  created $dff cell `$procdff$5531' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:654$762'.
  created $adff cell `$procdff$5532' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:596$757'.
  created $dff cell `$procdff$5533' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:525$754'.
  created $adff cell `$procdff$5534' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:475$751'.
  created $dff cell `$procdff$5535' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:404$748'.
  created $adff cell `$procdff$5536' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:354$745'.
  created $dff cell `$procdff$5537' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:309$743'.
  created $dff cell `$procdff$5538' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$741'.
  created $dff cell `$procdff$5539' with positive edge clock.
Creating register for signal `$paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem.\rd_data_o' using process `$paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem.$proc$./colormem.sv:47$1237'.
  created $dff cell `$procdff$5540' with positive edge clock.
Creating register for signal `$paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem.$memwr$\bram$./colormem.sv:43$1229_ADDR' using process `$paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem.$proc$./colormem.sv:41$1230'.
  created $dff cell `$procdff$5541' with positive edge clock.
Creating register for signal `$paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem.$memwr$\bram$./colormem.sv:43$1229_DATA' using process `$paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem.$proc$./colormem.sv:41$1230'.
  created $dff cell `$procdff$5542' with positive edge clock.
Creating register for signal `$paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem.$memwr$\bram$./colormem.sv:43$1229_EN' using process `$paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem.$proc$./colormem.sv:41$1230'.
  created $dff cell `$procdff$5543' with positive edge clock.
Creating register for signal `\xosera_main.\bus_intr_o' using process `\xosera_main.$proc$./xosera_main.sv:417$483'.
  created $dff cell `$procdff$5544' with positive edge clock.
Creating register for signal `\xosera_main.\intr_status' using process `\xosera_main.$proc$./xosera_main.sv:417$483'.
  created $dff cell `$procdff$5545' with positive edge clock.
Creating register for signal `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100.\rd_data_o' using process `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100.$proc$./tilemem.sv:80$1223'.
  created $dff cell `$procdff$5546' with positive edge clock.
Creating register for signal `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100.$memwr$\bram$./tilemem.sv:76$1215_ADDR' using process `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100.$proc$./tilemem.sv:74$1216'.
  created $dff cell `$procdff$5547' with positive edge clock.
Creating register for signal `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100.$memwr$\bram$./tilemem.sv:76$1215_DATA' using process `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100.$proc$./tilemem.sv:74$1216'.
  created $dff cell `$procdff$5548' with positive edge clock.
Creating register for signal `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100.$memwr$\bram$./tilemem.sv:76$1215_EN' using process `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100.$proc$./tilemem.sv:74$1216'.
  created $dff cell `$procdff$5549' with positive edge clock.
Creating register for signal `\vram.\read_bank' using process `\vram.$proc$./vram.sv:79$466'.
  created $dff cell `$procdff$5550' with positive edge clock.
Creating register for signal `\video_playfield.\vram_sel_o' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5551' with positive edge clock.
Creating register for signal `\video_playfield.\vram_addr_o' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5552' with positive edge clock.
Creating register for signal `\video_playfield.\tilemem_sel_o' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5553' with positive edge clock.
Creating register for signal `\video_playfield.\tilemem_addr_o' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5554' with positive edge clock.
Creating register for signal `\video_playfield.\scanout' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5555' with positive edge clock.
Creating register for signal `\video_playfield.\scanout_start_hcount' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5556' with positive edge clock.
Creating register for signal `\video_playfield.\scanout_end_hcount' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5557' with positive edge clock.
Creating register for signal `\video_playfield.\mem_fetch_active' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5558' with positive edge clock.
Creating register for signal `\video_playfield.\pf_h_count' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5559' with positive edge clock.
Creating register for signal `\video_playfield.\pf_v_count' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5560' with positive edge clock.
Creating register for signal `\video_playfield.\pf_h_frac_count' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5561' with positive edge clock.
Creating register for signal `\video_playfield.\pf_v_frac_count' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5562' with positive edge clock.
Creating register for signal `\video_playfield.\pf_tile_x' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5563' with positive edge clock.
Creating register for signal `\video_playfield.\pf_tile_y' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5564' with positive edge clock.
Creating register for signal `\video_playfield.\pf_line_start' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5565' with positive edge clock.
Creating register for signal `\video_playfield.\pf_fetch' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5566' with positive edge clock.
Creating register for signal `\video_playfield.\pf_addr' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5567' with positive edge clock.
Creating register for signal `\video_playfield.\vram_sel' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5568' with positive edge clock.
Creating register for signal `\video_playfield.\tilemem_sel' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5569' with positive edge clock.
Creating register for signal `\video_playfield.\fetch_addr' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5570' with positive edge clock.
Creating register for signal `\video_playfield.\pf_initial_buf' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5571' with positive edge clock.
Creating register for signal `\video_playfield.\pf_words_ready' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5572' with positive edge clock.
Creating register for signal `\video_playfield.\pf_tile_attr' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5573' with positive edge clock.
Creating register for signal `\video_playfield.\pf_data_word0' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5574' with positive edge clock.
Creating register for signal `\video_playfield.\pf_data_word1' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5575' with positive edge clock.
Creating register for signal `\video_playfield.\pf_data_word2' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5576' with positive edge clock.
Creating register for signal `\video_playfield.\pf_data_word3' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5577' with positive edge clock.
Creating register for signal `\video_playfield.\pf_pixels_buf_full' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5578' with positive edge clock.
Creating register for signal `\video_playfield.\pf_pixels_buf_hrev' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5579' with positive edge clock.
Creating register for signal `\video_playfield.\pf_pixels_buf' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5580' with positive edge clock.
Creating register for signal `\video_playfield.\pf_pixels' using process `\video_playfield.$proc$./video_playfield.sv:345$417'.
  created $dff cell `$procdff$5581' with positive edge clock.
Creating register for signal `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010.\rd_data_o' using process `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010.$proc$./tilemem.sv:80$1211'.
  created $dff cell `$procdff$5582' with positive edge clock.
Creating register for signal `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010.$memwr$\bram$./tilemem.sv:76$1203_ADDR' using process `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010.$proc$./tilemem.sv:74$1204'.
  created $dff cell `$procdff$5583' with positive edge clock.
Creating register for signal `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010.$memwr$\bram$./tilemem.sv:76$1203_DATA' using process `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010.$proc$./tilemem.sv:74$1204'.
  created $dff cell `$procdff$5584' with positive edge clock.
Creating register for signal `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010.$memwr$\bram$./tilemem.sv:76$1203_EN' using process `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010.$proc$./tilemem.sv:74$1204'.
  created $dff cell `$procdff$5585' with positive edge clock.
Creating register for signal `$paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010.\rd_data_o' using process `$paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010.$proc$./coppermem.sv:51$1201'.
  created $dff cell `$procdff$5586' with positive edge clock.
Creating register for signal `$paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010.$memwr$\bram$./coppermem.sv:47$1193_ADDR' using process `$paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010.$proc$./coppermem.sv:45$1194'.
  created $dff cell `$procdff$5587' with positive edge clock.
Creating register for signal `$paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010.$memwr$\bram$./coppermem.sv:47$1193_DATA' using process `$paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010.$proc$./coppermem.sv:45$1194'.
  created $dff cell `$procdff$5588' with positive edge clock.
Creating register for signal `$paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010.$memwr$\bram$./coppermem.sv:47$1193_EN' using process `$paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010.$proc$./coppermem.sv:45$1194'.
  created $dff cell `$procdff$5589' with positive edge clock.
Creating register for signal `$paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem.\rd_data_o' using process `$paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem.$proc$./colormem.sv:47$1189'.
  created $dff cell `$procdff$5590' with positive edge clock.
Creating register for signal `$paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem.$memwr$\bram$./colormem.sv:43$1181_ADDR' using process `$paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem.$proc$./colormem.sv:41$1182'.
  created $dff cell `$procdff$5591' with positive edge clock.
Creating register for signal `$paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem.$memwr$\bram$./colormem.sv:43$1181_DATA' using process `$paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem.$proc$./colormem.sv:41$1182'.
  created $dff cell `$procdff$5592' with positive edge clock.
Creating register for signal `$paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem.$memwr$\bram$./colormem.sv:43$1181_EN' using process `$paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem.$proc$./colormem.sv:41$1182'.
  created $dff cell `$procdff$5593' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\opt_PF_B.pb_vram_rd' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:209$1171'.
  created $dff cell `$procdff$5594' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\opt_PF_B.pb_vram_rd_save' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:209$1171'.
  created $dff cell `$procdff$5595' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\opt_PF_B.pb_vram_rd_data' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:209$1171'.
  created $dff cell `$procdff$5596' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\opt_PF_B.pb_tilemem_rd' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:209$1171'.
  created $dff cell `$procdff$5597' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\opt_PF_B.pb_tilemem_rd_save' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:209$1171'.
  created $dff cell `$procdff$5598' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\opt_PF_B.pb_tilemem_rd_data' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:209$1171'.
  created $dff cell `$procdff$5599' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\vsync_o' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:550$1168'.
  created $dff cell `$procdff$5600' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\hsync_o' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:550$1168'.
  created $dff cell `$procdff$5601' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\dv_de_o' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:550$1168'.
  created $dff cell `$procdff$5602' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\colorA_index_o' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:550$1168'.
  created $dff cell `$procdff$5603' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\colorB_index_o' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:550$1168'.
  created $dff cell `$procdff$5604' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\h_state' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:550$1168'.
  created $dff cell `$procdff$5605' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\h_count' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:550$1168'.
  created $dff cell `$procdff$5606' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\v_state' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:550$1168'.
  created $dff cell `$procdff$5607' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\v_count' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:550$1168'.
  created $dff cell `$procdff$5608' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\vgen_reg_data_o' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:470$1129'.
  created $dff cell `$procdff$5609' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\intr_signal_o' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5610' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\copp_reg_wr_o' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5611' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\copp_reg_data_o' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5612' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\border_color' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5613' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\vid_left' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5614' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\vid_right' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5615' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pa_blank' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5616' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pa_start_addr' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5617' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pa_line_len' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5618' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pa_colorbase' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5619' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pa_bpp' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5620' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pa_bitmap' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5621' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pa_tile_bank' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5622' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pa_disp_in_tile' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5623' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pa_tile_in_vram' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5624' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pa_tile_height' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5625' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pa_h_repeat' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5626' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pa_v_repeat' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5627' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pa_h_frac_repeat' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5628' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pa_v_frac_repeat' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5629' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pa_fine_hscroll' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5630' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pa_fine_vscroll' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5631' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pa_line_start_set' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5632' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pa_gfx_ctrl_set' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5633' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pb_blank' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5634' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pb_start_addr' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5635' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pb_line_len' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5636' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pb_colorbase' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5637' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pb_bpp' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5638' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pb_bitmap' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5639' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pb_tile_bank' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5640' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pb_disp_in_tile' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5641' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pb_tile_in_vram' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5642' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pb_tile_height' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5643' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pb_h_repeat' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5644' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pb_v_repeat' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5645' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pb_h_frac_repeat' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5646' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pb_v_frac_repeat' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5647' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pb_fine_hscroll' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5648' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pb_fine_vscroll' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5649' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pb_line_start_set' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5650' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\pb_gfx_ctrl_set' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5651' with positive edge clock.
Creating register for signal `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.\line_set_addr' using process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
  created $dff cell `$procdff$5652' with positive edge clock.
Creating register for signal `\reg_interface.\reconfig_o' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5653' with positive edge clock.
Creating register for signal `\reg_interface.\boot_select_o' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5654' with positive edge clock.
Creating register for signal `\reg_interface.\regs_vram_sel_o' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5655' with positive edge clock.
Creating register for signal `\reg_interface.\regs_xr_sel_o' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5656' with positive edge clock.
Creating register for signal `\reg_interface.\regs_wr_o' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5657' with positive edge clock.
Creating register for signal `\reg_interface.\regs_wrmask_o' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5658' with positive edge clock.
Creating register for signal `\reg_interface.\regs_addr_o' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5659' with positive edge clock.
Creating register for signal `\reg_interface.\regs_data_o' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5660' with positive edge clock.
Creating register for signal `\reg_interface.\intr_clear_o' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5661' with positive edge clock.
Creating register for signal `\reg_interface.\reg_xr_addr' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5662' with positive edge clock.
Creating register for signal `\reg_interface.\reg_xr_data' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5663' with positive edge clock.
Creating register for signal `\reg_interface.\reg_rd_incr' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5664' with positive edge clock.
Creating register for signal `\reg_interface.\reg_rd_addr' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5665' with positive edge clock.
Creating register for signal `\reg_interface.\reg_rd_data' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5666' with positive edge clock.
Creating register for signal `\reg_interface.\reg_wr_incr' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5667' with positive edge clock.
Creating register for signal `\reg_interface.\reg_wr_addr' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5668' with positive edge clock.
Creating register for signal `\reg_interface.\reg_rw_incr' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5669' with positive edge clock.
Creating register for signal `\reg_interface.\reg_rw_addr' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5670' with positive edge clock.
Creating register for signal `\reg_interface.\reg_rw_data' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5671' with positive edge clock.
Creating register for signal `\reg_interface.\reg_rw_rd_inc' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5672' with positive edge clock.
Creating register for signal `\reg_interface.\xr_rd' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5673' with positive edge clock.
Creating register for signal `\reg_interface.\vram_rd' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5674' with positive edge clock.
Creating register for signal `\reg_interface.\vram_rw_rd' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5675' with positive edge clock.
Creating register for signal `\reg_interface.\vram_rw_wr' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5676' with positive edge clock.
Creating register for signal `\reg_interface.\intr_mask' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5677' with positive edge clock.
Creating register for signal `\reg_interface.\reg_xr_data_even' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5678' with positive edge clock.
Creating register for signal `\reg_interface.\reg_data_even' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5679' with positive edge clock.
Creating register for signal `\reg_interface.\timer_latch_val' using process `\reg_interface.$proc$./reg_interface.sv:201$224'.
  created $dff cell `$procdff$5680' with positive edge clock.
Creating register for signal `\reg_interface.\LFSR' using process `\reg_interface.$proc$./reg_interface.sv:187$219'.
  created $dff cell `$procdff$5681' with positive edge clock.
Creating register for signal `\reg_interface.\reg_LFSR' using process `\reg_interface.$proc$./reg_interface.sv:187$219'.
  created $dff cell `$procdff$5682' with positive edge clock.
Creating register for signal `\reg_interface.\reg_timer' using process `\reg_interface.$proc$./reg_interface.sv:172$215'.
  created $dff cell `$procdff$5683' with positive edge clock.
Creating register for signal `\reg_interface.\reg_timer_frac' using process `\reg_interface.$proc$./reg_interface.sv:172$215'.
  created $dff cell `$procdff$5684' with positive edge clock.
Creating register for signal `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.\regs_ack_o' using process `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.$proc$./vram_arb.sv:114$1119'.
  created $dff cell `$procdff$5685' with positive edge clock.
Creating register for signal `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.\blit_ack_o' using process `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.$proc$./vram_arb.sv:114$1119'.
  created $dff cell `$procdff$5686' with positive edge clock.
Creating register for signal `\copper.\r_insn' using process `\copper.$proc$./copper.sv:257$166'.
  created $dff cell `$procdff$5687' with positive edge clock.
Creating register for signal `\copper.\copper_ex_state' using process `\copper.$proc$./copper.sv:257$166'.
  created $dff cell `$procdff$5688' with positive edge clock.
Creating register for signal `\copper.\copper_init_pc' using process `\copper.$proc$./copper.sv:257$166'.
  created $dff cell `$procdff$5689' with positive edge clock.
Creating register for signal `\copper.\copper_pc' using process `\copper.$proc$./copper.sv:257$166'.
  created $dff cell `$procdff$5690' with positive edge clock.
Creating register for signal `\copper.\copper_en' using process `\copper.$proc$./copper.sv:257$166'.
  created $dff cell `$procdff$5691' with positive edge clock.
Creating register for signal `\copper.\reg_reserved' using process `\copper.$proc$./copper.sv:257$166'.
  created $dff cell `$procdff$5692' with positive edge clock.
Creating register for signal `\copper.\ram_rd_strobe' using process `\copper.$proc$./copper.sv:257$166'.
  created $dff cell `$procdff$5693' with positive edge clock.
Creating register for signal `\copper.\ram_wr_data_out' using process `\copper.$proc$./copper.sv:257$166'.
  created $dff cell `$procdff$5694' with positive edge clock.
Creating register for signal `\copper.\ram_wr_addr_out' using process `\copper.$proc$./copper.sv:257$166'.
  created $dff cell `$procdff$5695' with positive edge clock.
Creating register for signal `\copper.\xr_wr_en' using process `\copper.$proc$./copper.sv:257$166'.
  created $dff cell `$procdff$5696' with positive edge clock.
Creating register for signal `\copper.\v_reached' using process `\copper.$proc$./copper.sv:257$166'.
  created $dff cell `$procdff$5697' with positive edge clock.
Creating register for signal `\copper.\h_reached' using process `\copper.$proc$./copper.sv:257$166'.
  created $dff cell `$procdff$5698' with positive edge clock.
Creating register for signal `\copper.\copper_pc_skip' using process `\copper.$proc$./copper.sv:257$166'.
  created $dff cell `$procdff$5699' with positive edge clock.
Creating register for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\xr_ack_o' using process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:275$1096'.
  created $dff cell `$procdff$5700' with positive edge clock.
Creating register for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\copp_xr_ack_o' using process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:275$1096'.
  created $dff cell `$procdff$5701' with positive edge clock.
Creating register for signal `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.\tile_addr' using process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:275$1096'.
  created $dff cell `$procdff$5702' with positive edge clock.
Creating register for signal `\bus_interface.\write_strobe_o' using process `\bus_interface.$proc$./bus_interface.sv:86$145'.
  created $dff cell `$procdff$5703' with positive edge clock.
Creating register for signal `\bus_interface.\read_strobe_o' using process `\bus_interface.$proc$./bus_interface.sv:86$145'.
  created $dff cell `$procdff$5704' with positive edge clock.
Creating register for signal `\bus_interface.\reg_num_o' using process `\bus_interface.$proc$./bus_interface.sv:86$145'.
  created $dff cell `$procdff$5705' with positive edge clock.
Creating register for signal `\bus_interface.\bytesel_o' using process `\bus_interface.$proc$./bus_interface.sv:86$145'.
  created $dff cell `$procdff$5706' with positive edge clock.
Creating register for signal `\bus_interface.\bytedata_o' using process `\bus_interface.$proc$./bus_interface.sv:86$145'.
  created $dff cell `$procdff$5707' with positive edge clock.
Creating register for signal `\bus_interface.\cs_r' using process `\bus_interface.$proc$./bus_interface.sv:86$145'.
  created $dff cell `$procdff$5708' with positive edge clock.
Creating register for signal `\bus_interface.\read_r' using process `\bus_interface.$proc$./bus_interface.sv:86$145'.
  created $dff cell `$procdff$5709' with positive edge clock.
Creating register for signal `\bus_interface.\bytesel_r' using process `\bus_interface.$proc$./bus_interface.sv:86$145'.
  created $dff cell `$procdff$5710' with positive edge clock.
Creating register for signal `\bus_interface.\reg_num_r[0]' using process `\bus_interface.$proc$./bus_interface.sv:86$145'.
  created $dff cell `$procdff$5711' with positive edge clock.
Creating register for signal `\bus_interface.\reg_num_r[1]' using process `\bus_interface.$proc$./bus_interface.sv:86$145'.
  created $dff cell `$procdff$5712' with positive edge clock.
Creating register for signal `\bus_interface.\data_r[0]' using process `\bus_interface.$proc$./bus_interface.sv:86$145'.
  created $dff cell `$procdff$5713' with positive edge clock.
Creating register for signal `\bus_interface.\data_r[1]' using process `\bus_interface.$proc$./bus_interface.sv:86$145'.
  created $dff cell `$procdff$5714' with positive edge clock.
Creating register for signal `\bus_interface.\data_r[2]' using process `\bus_interface.$proc$./bus_interface.sv:86$145'.
  created $dff cell `$procdff$5715' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_ctrl_A_const' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5716' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_ctrl_B_const' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5717' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_ctrl_B_not' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5718' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_ctrl_C_use_B' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5719' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_ctrl_decrement' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5720' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_ctrl_transp_8b' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5721' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_ctrl_transp_T' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5722' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_shift_amount' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5723' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_shift_f_mask' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5724' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_shift_l_mask' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5725' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_mod_A' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5726' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_mod_B' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5727' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_mod_C' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5728' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_mod_D' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5729' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_src_A' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5730' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_src_B' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5731' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_val_C' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5732' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_dst_D' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5733' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_lines' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5734' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_words' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5735' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_count' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5736' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\last_A' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5737' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\last_B' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5738' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\val_A' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5739' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\val_B' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5740' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_state' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5741' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\val_B_prime' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5742' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_f_mask' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5743' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_done_intr' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5744' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_vram_sel' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5745' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_wr' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5746' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\blit_addr' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
  created $dff cell `$procdff$5747' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_ctrl_A_const' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5748' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_ctrl_B_const' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5749' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_ctrl_B_not' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5750' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_ctrl_C_use_B' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5751' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_ctrl_decrement' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5752' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_ctrl_transp_8b' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5753' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_ctrl_transp_T' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5754' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_shift_amount' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5755' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_shift_f_mask' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5756' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_shift_l_mask' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5757' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_mod_A' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5758' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_src_A' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5759' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_mod_B' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5760' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_src_B' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5761' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_mod_C' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5762' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_val_C' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5763' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_mod_D' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5764' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_dst_D' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5765' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_lines' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5766' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_words' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5767' with positive edge clock.
Creating register for signal `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.\xreg_blit_queued' using process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
  created $dff cell `$procdff$5768' with positive edge clock.
Creating register for signal `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.\vsync_o' using process `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:114$946'.
  created $dff cell `$procdff$5769' with positive edge clock.
Creating register for signal `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.\hsync_o' using process `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:114$946'.
  created $dff cell `$procdff$5770' with positive edge clock.
Creating register for signal `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.\dv_de_o' using process `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:114$946'.
  created $dff cell `$procdff$5771' with positive edge clock.
Creating register for signal `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.\blend_rgb_o' using process `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:114$946'.
  created $dff cell `$procdff$5772' with positive edge clock.
Creating register for signal `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.\dv_de_1' using process `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:114$946'.
  created $dff cell `$procdff$5773' with positive edge clock.
Creating register for signal `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.\hsync_1' using process `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:114$946'.
  created $dff cell `$procdff$5774' with positive edge clock.
Creating register for signal `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.\vsync_1' using process `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:114$946'.
  created $dff cell `$procdff$5775' with positive edge clock.
Creating register for signal `\xosera_upd.\reset' using process `\xosera_upd.$proc$upduino/xosera_upd.sv:250$6'.
  created $dff cell `$procdff$5776' with positive edge clock.
Creating register for signal `\xosera_upd.\bus_intr_r' using process `\xosera_upd.$proc$upduino/xosera_upd.sv:145$5'.
  created $dff cell `$procdff$5777' with positive edge clock.
Creating register for signal `\xosera_upd.\reconfig_r' using process `\xosera_upd.$proc$upduino/xosera_upd.sv:145$5'.
  created $dff cell `$procdff$5778' with positive edge clock.
Creating register for signal `\xosera_upd.\boot_select_r' using process `\xosera_upd.$proc$upduino/xosera_upd.sv:145$5'.
  created $dff cell `$procdff$5779' with positive edge clock.
Creating register for signal `\xosera_upd.\bus_data_out_r' using process `\xosera_upd.$proc$upduino/xosera_upd.sv:145$5'.
  created $dff cell `$procdff$5780' with positive edge clock.

19.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

19.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$808'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1386$805'.
Removing empty process `SB_DFFNES.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1386$805'.
Removing empty process `SB_DFFNESS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$804'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1328$800'.
Removing empty process `SB_DFFNESS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1328$800'.
Removing empty process `SB_DFFNER.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$799'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1251$796'.
Removing empty process `SB_DFFNER.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1251$796'.
Removing empty process `SB_DFFNESR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$795'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1193$791'.
Removing empty process `SB_DFFNESR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1193$791'.
Removing empty process `SB_DFFNS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$790'.
Removing empty process `SB_DFFNS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1122$788'.
Removing empty process `SB_DFFNSS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$787'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1072$785'.
Removing empty process `SB_DFFNSS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1072$785'.
Removing empty process `SB_DFFNR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$784'.
Removing empty process `SB_DFFNR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1001$782'.
Removing empty process `SB_DFFNSR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$781'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:951$779'.
Removing empty process `SB_DFFNSR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:951$779'.
Removing empty process `SB_DFFNE.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$778'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:906$777'.
Removing empty process `SB_DFFNE.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:906$777'.
Removing empty process `SB_DFFN.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$776'.
Removing empty process `SB_DFFN.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:868$775'.
Removing empty process `SB_DFFES.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$774'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:789$771'.
Removing empty process `SB_DFFES.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:789$771'.
Removing empty process `SB_DFFESS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$770'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:731$766'.
Removing empty process `SB_DFFESS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:731$766'.
Removing empty process `SB_DFFER.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$765'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:654$762'.
Removing empty process `SB_DFFER.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:654$762'.
Removing empty process `SB_DFFESR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$761'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:596$757'.
Removing empty process `SB_DFFESR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:596$757'.
Removing empty process `SB_DFFS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$756'.
Removing empty process `SB_DFFS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:525$754'.
Removing empty process `SB_DFFSS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$753'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:475$751'.
Removing empty process `SB_DFFSS.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:475$751'.
Removing empty process `SB_DFFR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$750'.
Removing empty process `SB_DFFR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:404$748'.
Removing empty process `SB_DFFSR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$747'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:354$745'.
Removing empty process `SB_DFFSR.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:354$745'.
Removing empty process `SB_DFFE.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$744'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:309$743'.
Removing empty process `SB_DFFE.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:309$743'.
Removing empty process `SB_DFF.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$742'.
Removing empty process `SB_DFF.$proc$/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$741'.
Found and cleaned up 1 empty switch in `$paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem.$proc$./colormem.sv:47$1237'.
Removing empty process `$paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem.$proc$./colormem.sv:47$1237'.
Found and cleaned up 1 empty switch in `$paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem.$proc$./colormem.sv:41$1230'.
Removing empty process `$paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem.$proc$./colormem.sv:41$1230'.
Found and cleaned up 2 empty switches in `\xosera_main.$proc$./xosera_main.sv:417$483'.
Removing empty process `xosera_main.$proc$./xosera_main.sv:417$483'.
Found and cleaned up 1 empty switch in `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100.$proc$./tilemem.sv:80$1223'.
Removing empty process `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100.$proc$./tilemem.sv:80$1223'.
Found and cleaned up 1 empty switch in `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100.$proc$./tilemem.sv:74$1216'.
Removing empty process `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100.$proc$./tilemem.sv:74$1216'.
Found and cleaned up 1 empty switch in `\vram.$proc$./vram.sv:0$467'.
Removing empty process `vram.$proc$./vram.sv:0$467'.
Removing empty process `vram.$proc$./vram.sv:79$466'.
Found and cleaned up 20 empty switches in `\video_playfield.$proc$./video_playfield.sv:345$417'.
Removing empty process `video_playfield.$proc$./video_playfield.sv:345$417'.
Found and cleaned up 19 empty switches in `\video_playfield.$proc$./video_playfield.sv:0$365'.
Removing empty process `video_playfield.$proc$./video_playfield.sv:0$365'.
Found and cleaned up 1 empty switch in `\video_playfield.$proc$./video_playfield.sv:0$364'.
Removing empty process `video_playfield.$proc$./video_playfield.sv:0$364'.
Removing empty process `video_playfield.$proc$./video_playfield.sv:0$359'.
Removing empty process `video_playfield.$proc$./video_playfield.sv:0$356'.
Removing empty process `video_playfield.$proc$./video_playfield.sv:0$353'.
Removing empty process `video_playfield.$proc$./video_playfield.sv:0$350'.
Found and cleaned up 1 empty switch in `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010.$proc$./tilemem.sv:80$1211'.
Removing empty process `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010.$proc$./tilemem.sv:80$1211'.
Found and cleaned up 1 empty switch in `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010.$proc$./tilemem.sv:74$1204'.
Removing empty process `$paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010.$proc$./tilemem.sv:74$1204'.
Found and cleaned up 1 empty switch in `$paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010.$proc$./coppermem.sv:51$1201'.
Removing empty process `$paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010.$proc$./coppermem.sv:51$1201'.
Found and cleaned up 1 empty switch in `$paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010.$proc$./coppermem.sv:45$1194'.
Removing empty process `$paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010.$proc$./coppermem.sv:45$1194'.
Found and cleaned up 1 empty switch in `$paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem.$proc$./colormem.sv:47$1189'.
Removing empty process `$paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem.$proc$./colormem.sv:47$1189'.
Found and cleaned up 1 empty switch in `$paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem.$proc$./colormem.sv:41$1182'.
Removing empty process `$paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem.$proc$./colormem.sv:41$1182'.
Found and cleaned up 4 empty switches in `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:209$1171'.
Removing empty process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:209$1171'.
Found and cleaned up 1 empty switch in `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:550$1168'.
Removing empty process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:550$1168'.
Found and cleaned up 1 empty switch in `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1167'.
Removing empty process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1167'.
Removing empty process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1162'.
Found and cleaned up 1 empty switch in `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1161'.
Removing empty process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1161'.
Removing empty process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1157'.
Found and cleaned up 2 empty switches in `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1154'.
Removing empty process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1154'.
Removing empty process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1149'.
Removing empty process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1144'.
Removing empty process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1140'.
Removing empty process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1136'.
Removing empty process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1134'.
Removing empty process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:0$1132'.
Found and cleaned up 1 empty switch in `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:470$1129'.
Removing empty process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:470$1129'.
Found and cleaned up 4 empty switches in `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
Removing empty process `$paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./video_gen.sv:301$1128'.
Found and cleaned up 18 empty switches in `\reg_interface.$proc$./reg_interface.sv:201$224'.
Removing empty process `reg_interface.$proc$./reg_interface.sv:201$224'.
Found and cleaned up 2 empty switches in `\reg_interface.$proc$./reg_interface.sv:187$219'.
Removing empty process `reg_interface.$proc$./reg_interface.sv:187$219'.
Found and cleaned up 2 empty switches in `\reg_interface.$proc$./reg_interface.sv:172$215'.
Removing empty process `reg_interface.$proc$./reg_interface.sv:172$215'.
Found and cleaned up 1 empty switch in `\reg_interface.$proc$./reg_interface.sv:0$188'.
Removing empty process `reg_interface.$proc$./reg_interface.sv:0$188'.
Removing empty process `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.$proc$./vram_arb.sv:114$1119'.
Found and cleaned up 3 empty switches in `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.$proc$./vram_arb.sv:0$1113'.
Removing empty process `$paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.$proc$./vram_arb.sv:0$1113'.
Removing empty process `copper.$proc$./copper.sv:208$173'.
Found and cleaned up 20 empty switches in `\copper.$proc$./copper.sv:257$166'.
Removing empty process `copper.$proc$./copper.sv:257$166'.
Removing empty process `copper.$proc$./copper.sv:0$162'.
Removing empty process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:275$1096'.
Found and cleaned up 2 empty switches in `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1089'.
Removing empty process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1089'.
Found and cleaned up 2 empty switches in `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1082'.
Removing empty process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1082'.
Found and cleaned up 2 empty switches in `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1075'.
Removing empty process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1075'.
Found and cleaned up 2 empty switches in `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1067'.
Removing empty process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1067'.
Found and cleaned up 3 empty switches in `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1060'.
Removing empty process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1060'.
Found and cleaned up 2 empty switches in `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1052'.
Removing empty process `$paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.$proc$./xrmem_arb.sv:0$1052'.
Removing empty process `bus_interface.$proc$./bus_interface.sv:0$149'.
Found and cleaned up 3 empty switches in `\bus_interface.$proc$./bus_interface.sv:86$145'.
Removing empty process `bus_interface.$proc$./bus_interface.sv:86$145'.
Found and cleaned up 19 empty switches in `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
Removing empty process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:0$986'.
Found and cleaned up 5 empty switches in `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
Removing empty process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:279$982'.
Found and cleaned up 4 empty switches in `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
Removing empty process `$paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.$proc$./blitter2.sv:72$967'.
Found and cleaned up 2 empty switches in `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:0$957'.
Removing empty process `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:0$957'.
Removing empty process `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:0$947'.
Found and cleaned up 1 empty switch in `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:114$946'.
Removing empty process `$paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.$proc$./video_blend.sv:114$946'.
Found and cleaned up 1 empty switch in `\xosera_upd.$proc$upduino/xosera_upd.sv:250$6'.
Removing empty process `xosera_upd.$proc$upduino/xosera_upd.sv:250$6'.
Removing empty process `xosera_upd.$proc$upduino/xosera_upd.sv:145$5'.
Cleaned up 179 empty switches.

19.3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem.
Optimizing module xosera_main.
<suppressed ~2 debug messages>
Optimizing module $paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100.
Optimizing module vram.
<suppressed ~2 debug messages>
Optimizing module video_playfield.
<suppressed ~63 debug messages>
Optimizing module $paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010.
Optimizing module $paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010.
Optimizing module $paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem.
Optimizing module $paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.
<suppressed ~10 debug messages>
Optimizing module reg_interface.
<suppressed ~19 debug messages>
Optimizing module $paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.
Optimizing module copper.
<suppressed ~4 debug messages>
Optimizing module $paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.
<suppressed ~6 debug messages>
Optimizing module bus_interface.
<suppressed ~5 debug messages>
Optimizing module $paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.
<suppressed ~39 debug messages>
Optimizing module $paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.
<suppressed ~4 debug messages>
Optimizing module xosera_upd.
<suppressed ~3 debug messages>

19.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod$39a583a29b86befdc1f0fc874c8a8dd7b377c52c\colormem.
Deleting now unused module xosera_main.
Deleting now unused module $paramod\tilemem\AWIDTH=s32'00000000000000000000000000001100.
Deleting now unused module vram.
Deleting now unused module video_playfield.
Deleting now unused module $paramod\tilemem\AWIDTH=s32'00000000000000000000000000001010.
Deleting now unused module $paramod\coppermem\AWIDTH=s32'00000000000000000000000000001010.
Deleting now unused module $paramod$7d7622cd8fb28e4da7c254f4202132c23ebfbfb6\colormem.
Deleting now unused module $paramod\video_gen\EN_VID_PF_B=s32'00000000000000000000000000000001.
Deleting now unused module reg_interface.
Deleting now unused module $paramod\vram_arb\EN_BLIT=s32'00000000000000000000000000000001.
Deleting now unused module copper.
Deleting now unused module $paramod\xrmem_arb\EN_VID_PF_B=s32'00000000000000000000000000000001.
Deleting now unused module bus_interface.
Deleting now unused module $paramod$9315dc2366d5ae9b2da7d35c3b43ffbc390d0167\blitter2.
Deleting now unused module $paramod$14605601726255428ed3715ce177dbafcaf90160\video_blend.
<suppressed ~18 debug messages>

19.5. Executing TRIBUF pass.

19.6. Executing DEMINOUT pass (demote inout ports to input or output).

19.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.
<suppressed ~17 debug messages>

19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..
Removed 99 unused cells and 1946 unused wires.
<suppressed ~109 debug messages>

19.9. Executing CHECK pass (checking for obvious problems).
Checking module xosera_upd...
Found and reported 0 problems.

19.10. Executing OPT pass (performing simple optimizations).

19.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.

19.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
<suppressed ~1593 debug messages>
Removed a total of 531 cells.

19.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xosera_upd..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\xosera_main.\video_gen.$ternary$./video_gen.sv:156$1123: \xosera_main.video_gen.video_pf_a.vram_sel_o -> 1'1
      Replacing known input bits on port B of cell $flatten\xosera_main.\video_gen.$ternary$./video_gen.sv:158$1125: \xosera_main.video_gen.video_pf_a.tilemem_sel_o -> 1'1
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$procmux$5507.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.$procmux$2591.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4496.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4498.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4504.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4510.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4518.
    dead port 1/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4521.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4523.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1618.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1625.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1632.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4531.
    dead port 1/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1651.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1653.
    dead port 1/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4534.
    dead port 1/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1662.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1664.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4536.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1673.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1675.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1683.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1691.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4544.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1699.
    dead port 1/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4547.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1707.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4549.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1715.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4556.
    dead port 1/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4559.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4561.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1739.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1748.
    dead port 1/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1757.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1759.
    dead port 1/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4569.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1773.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1775.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1789.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1791.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4571.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1805.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1807.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1821.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1823.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1836.
    dead port 1/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4579.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1849.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4581.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1862.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1875.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1888.
    dead port 1/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4589.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1901.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4591.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1910.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1926.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1942.
    dead port 1/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4599.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1958.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4601.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1972.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1974.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1990.
    dead port 1/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2008.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2010.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4608.
    dead port 1/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2028.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2030.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2047.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2064.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4615.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2081.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2098.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2116.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2134.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4622.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2152.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2172.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2174.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2194.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2196.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2216.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2218.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4629.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2238.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2240.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2259.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2278.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4636.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2297.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2316.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2337.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2339.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2359.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4643.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4651.
    dead port 1/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4662.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4664.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2403.
    dead port 1/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2421.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2423.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4675.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4677.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4685.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4694.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4703.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4712.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4720.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4729.
    dead port 1/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4741.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4743.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2496.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4755.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4757.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4766.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4777.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4779.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4790.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4792.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4803.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4805.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4815.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4817.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1618.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1625.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4827.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1632.
    dead port 1/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1651.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1653.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4837.
    dead port 1/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1662.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1664.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1673.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1675.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1683.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4847.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1691.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1699.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1707.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4857.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1715.
    dead port 2/2 on $mux $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4869.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1739.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1748.
    dead port 1/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1757.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1759.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1773.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1775.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1789.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1791.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1805.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1807.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1821.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1823.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1836.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1849.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1862.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1875.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1888.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1901.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1910.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1926.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1942.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1958.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1972.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1974.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1990.
    dead port 1/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2008.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2010.
    dead port 1/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2028.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2030.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2047.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2064.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2081.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2098.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2116.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2134.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2152.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2172.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2174.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2194.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2196.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2216.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2218.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2238.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2240.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2259.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2278.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2297.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2316.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2337.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2339.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2359.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2403.
    dead port 1/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2421.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2423.
    dead port 2/2 on $mux $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2496.
    dead port 1/2 on $mux $flatten\xosera_main.\vram_arb.$procmux$3908.
    dead port 1/2 on $mux $flatten\xosera_main.\vram_arb.$procmux$3911.
    dead port 1/2 on $mux $flatten\xosera_main.\vram_arb.$procmux$3917.
    dead port 1/2 on $mux $flatten\xosera_main.\vram_arb.$procmux$3920.
    dead port 1/2 on $mux $flatten\xosera_main.\vram_arb.$procmux$3926.
    dead port 1/2 on $mux $flatten\xosera_main.\vram_arb.$procmux$3929.
    dead port 1/2 on $mux $flatten\xosera_main.\vram_arb.$procmux$3935.
    dead port 1/2 on $mux $flatten\xosera_main.\vram_arb.$procmux$3938.
    dead port 1/2 on $mux $flatten\xosera_main.\vram_arb.$procmux$3953.
    dead port 1/2 on $mux $flatten\xosera_main.\vram_arb.$procmux$3956.
    dead port 1/2 on $mux $flatten\xosera_main.\vram_arb.$procmux$3962.
    dead port 1/2 on $mux $flatten\xosera_main.\vram_arb.$procmux$3968.
    dead port 1/2 on $mux $flatten\xosera_main.\vram_arb.$procmux$3974.
    dead port 1/2 on $mux $flatten\xosera_main.\vram_arb.$procmux$3980.
    dead port 1/2 on $mux $flatten\xosera_main.\vram_arb.$procmux$3992.
    dead port 1/2 on $mux $flatten\xosera_main.\vram_arb.$procmux$3998.
    dead port 1/2 on $mux $flatten\xosera_main.\xrmem_arb.$procmux$4296.
    dead port 1/2 on $mux $flatten\xosera_main.\xrmem_arb.$procmux$4302.
    dead port 1/2 on $mux $flatten\xosera_main.\xrmem_arb.$procmux$4308.
    dead port 1/2 on $mux $flatten\xosera_main.\xrmem_arb.$procmux$4323.
    dead port 1/2 on $mux $flatten\xosera_main.\xrmem_arb.$procmux$4329.
    dead port 1/2 on $mux $flatten\xosera_main.\xrmem_arb.$procmux$4335.
    dead port 2/2 on $mux $flatten\xosera_main.\xrmem_arb.$procmux$4347.
    dead port 1/2 on $mux $flatten\xosera_main.\xrmem_arb.$procmux$4350.
    dead port 1/2 on $mux $flatten\xosera_main.\xrmem_arb.$procmux$4356.
    dead port 1/2 on $mux $flatten\xosera_main.\xrmem_arb.$procmux$4362.
    dead port 1/2 on $mux $flatten\xosera_main.\xrmem_arb.$procmux$4368.
    dead port 1/2 on $mux $flatten\xosera_main.\xrmem_arb.$procmux$4374.
    dead port 2/2 on $mux $flatten\xosera_main.\xrmem_arb.$procmux$4377.
    dead port 1/2 on $mux $flatten\xosera_main.\xrmem_arb.$procmux$4395.
    dead port 1/2 on $mux $flatten\xosera_main.\xrmem_arb.$procmux$4401.
Removed 230 multiplexer ports.
<suppressed ~356 debug messages>

19.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xosera_upd.
    New ctrl vector for $pmux cell $flatten\xosera_main.\reg_interface.$procmux$3499: $auto$opt_reduce.cc:134:opt_mux$5787
    New ctrl vector for $pmux cell $flatten\xosera_main.\reg_interface.$procmux$3571: $auto$opt_reduce.cc:134:opt_mux$5789
    New ctrl vector for $pmux cell $flatten\xosera_main.\copper.$procmux$4036: { $flatten\xosera_main.\copper.$procmux$4026_CMP $auto$opt_reduce.cc:134:opt_mux$5791 }
    New ctrl vector for $pmux cell $flatten\xosera_main.\reg_interface.$procmux$3752: { $flatten\xosera_main.\reg_interface.$procmux$3520_CMP $auto$opt_reduce.cc:134:opt_mux$5793 }
    New ctrl vector for $pmux cell $flatten\xosera_main.\reg_interface.$procmux$3796: $auto$opt_reduce.cc:134:opt_mux$5795
    New ctrl vector for $pmux cell $flatten\xosera_main.\reg_interface.$procmux$3819: $auto$opt_reduce.cc:134:opt_mux$5797
    New ctrl vector for $pmux cell $flatten\xosera_main.\reg_interface.$procmux$3829: $auto$opt_reduce.cc:134:opt_mux$5799
    New ctrl vector for $pmux cell $flatten\xosera_main.\video_gen.$procmux$2768: $auto$opt_reduce.cc:134:opt_mux$5801
    New ctrl vector for $pmux cell $flatten\xosera_main.\copper.$procmux$4064: { $flatten\xosera_main.\copper.$procmux$4025_CMP $auto$opt_reduce.cc:134:opt_mux$5803 }
    New ctrl vector for $mux cell $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4596: { }
    New ctrl vector for $pmux cell $flatten\xosera_main.\copper.$procmux$4078: $auto$opt_reduce.cc:134:opt_mux$5805
    New ctrl vector for $pmux cell $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2432: $auto$opt_reduce.cc:134:opt_mux$5807
    New ctrl vector for $pmux cell $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2442: $auto$opt_reduce.cc:134:opt_mux$5809
    New ctrl vector for $pmux cell $flatten\xosera_main.\copper.$procmux$4121: $auto$opt_reduce.cc:134:opt_mux$5811
    New ctrl vector for $mux cell $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4855: { }
    New ctrl vector for $pmux cell $flatten\xosera_main.\copper.$procmux$4238: { $flatten\xosera_main.\copper.$procmux$4160_CMP $auto$opt_reduce.cc:134:opt_mux$5813 }
    New ctrl vector for $pmux cell $flatten\xosera_main.\copper.$procmux$4134: { $flatten\xosera_main.\copper.$procmux$4160_CMP $auto$opt_reduce.cc:134:opt_mux$5815 }
    New ctrl vector for $pmux cell $flatten\xosera_main.\copper.$procmux$4022: { $auto$opt_reduce.cc:134:opt_mux$5819 $auto$opt_reduce.cc:134:opt_mux$5817 }
    New ctrl vector for $pmux cell $flatten\xosera_main.\copper.$procmux$4175: $auto$opt_reduce.cc:134:opt_mux$5821
    New ctrl vector for $pmux cell $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5005: { $auto$opt_reduce.cc:134:opt_mux$5823 $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4524_CMP }
    New ctrl vector for $pmux cell $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2432: $auto$opt_reduce.cc:134:opt_mux$5825
    New ctrl vector for $pmux cell $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2442: $auto$opt_reduce.cc:134:opt_mux$5827
    Consolidated identical input bits for $mux cell $flatten\xosera_main.\xrmem_arb.\colormem.$procmux$1288:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\xosera_main.\xrmem_arb.\colormem.$0$memwr$\bram$./colormem.sv:43$1229_EN[15:0]$1233
      New ports: A=1'0, B=1'1, Y=$flatten\xosera_main.\xrmem_arb.\colormem.$0$memwr$\bram$./colormem.sv:43$1229_EN[15:0]$1233 [0]
      New connections: $flatten\xosera_main.\xrmem_arb.\colormem.$0$memwr$\bram$./colormem.sv:43$1229_EN[15:0]$1233 [15:1] = { $flatten\xosera_main.\xrmem_arb.\colormem.$0$memwr$\bram$./colormem.sv:43$1229_EN[15:0]$1233 [0] $flatten\xosera_main.\xrmem_arb.\colormem.$0$memwr$\bram$./colormem.sv:43$1229_EN[15:0]$1233 [0] $flatten\xosera_main.\xrmem_arb.\colormem.$0$memwr$\bram$./colormem.sv:43$1229_EN[15:0]$1233 [0] $flatten\xosera_main.\xrmem_arb.\colormem.$0$memwr$\bram$./colormem.sv:43$1229_EN[15:0]$1233 [0] $flatten\xosera_main.\xrmem_arb.\colormem.$0$memwr$\bram$./colormem.sv:43$1229_EN[15:0]$1233 [0] $flatten\xosera_main.\xrmem_arb.\colormem.$0$memwr$\bram$./colormem.sv:43$1229_EN[15:0]$1233 [0] $flatten\xosera_main.\xrmem_arb.\colormem.$0$memwr$\bram$./colormem.sv:43$1229_EN[15:0]$1233 [0] $flatten\xosera_main.\xrmem_arb.\colormem.$0$memwr$\bram$./colormem.sv:43$1229_EN[15:0]$1233 [0] $flatten\xosera_main.\xrmem_arb.\colormem.$0$memwr$\bram$./colormem.sv:43$1229_EN[15:0]$1233 [0] $flatten\xosera_main.\xrmem_arb.\colormem.$0$memwr$\bram$./colormem.sv:43$1229_EN[15:0]$1233 [0] $flatten\xosera_main.\xrmem_arb.\colormem.$0$memwr$\bram$./colormem.sv:43$1229_EN[15:0]$1233 [0] $flatten\xosera_main.\xrmem_arb.\colormem.$0$memwr$\bram$./colormem.sv:43$1229_EN[15:0]$1233 [0] $flatten\xosera_main.\xrmem_arb.\colormem.$0$memwr$\bram$./colormem.sv:43$1229_EN[15:0]$1233 [0] $flatten\xosera_main.\xrmem_arb.\colormem.$0$memwr$\bram$./colormem.sv:43$1229_EN[15:0]$1233 [0] $flatten\xosera_main.\xrmem_arb.\colormem.$0$memwr$\bram$./colormem.sv:43$1229_EN[15:0]$1233 [0] }
    Consolidated identical input bits for $mux cell $flatten\xosera_main.\xrmem_arb.\coppermem_e.$procmux$2519:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\xosera_main.\xrmem_arb.\coppermem_e.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197
      New ports: A=1'0, B=1'1, Y=$flatten\xosera_main.\xrmem_arb.\coppermem_e.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0]
      New connections: $flatten\xosera_main.\xrmem_arb.\coppermem_e.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [15:1] = { $flatten\xosera_main.\xrmem_arb.\coppermem_e.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_e.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_e.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_e.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_e.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_e.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_e.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_e.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_e.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_e.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_e.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_e.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_e.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_e.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_e.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] }
    Consolidated identical input bits for $mux cell $flatten\xosera_main.\xrmem_arb.\coppermem_o.$procmux$2519:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\xosera_main.\xrmem_arb.\coppermem_o.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197
      New ports: A=1'0, B=1'1, Y=$flatten\xosera_main.\xrmem_arb.\coppermem_o.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0]
      New connections: $flatten\xosera_main.\xrmem_arb.\coppermem_o.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [15:1] = { $flatten\xosera_main.\xrmem_arb.\coppermem_o.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_o.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_o.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_o.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_o.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_o.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_o.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_o.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_o.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_o.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_o.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_o.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_o.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_o.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] $flatten\xosera_main.\xrmem_arb.\coppermem_o.$0$memwr$\bram$./coppermem.sv:47$1193_EN[15:0]$1197 [0] }
    Consolidated identical input bits for $mux cell $flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$procmux$2530:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$0$memwr$\bram$./colormem.sv:43$1181_EN[15:0]$1185
      New ports: A=1'0, B=1'1, Y=$flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$0$memwr$\bram$./colormem.sv:43$1181_EN[15:0]$1185 [0]
      New connections: $flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$0$memwr$\bram$./colormem.sv:43$1181_EN[15:0]$1185 [15:1] = { $flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$0$memwr$\bram$./colormem.sv:43$1181_EN[15:0]$1185 [0] $flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$0$memwr$\bram$./colormem.sv:43$1181_EN[15:0]$1185 [0] $flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$0$memwr$\bram$./colormem.sv:43$1181_EN[15:0]$1185 [0] $flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$0$memwr$\bram$./colormem.sv:43$1181_EN[15:0]$1185 [0] $flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$0$memwr$\bram$./colormem.sv:43$1181_EN[15:0]$1185 [0] $flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$0$memwr$\bram$./colormem.sv:43$1181_EN[15:0]$1185 [0] $flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$0$memwr$\bram$./colormem.sv:43$1181_EN[15:0]$1185 [0] $flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$0$memwr$\bram$./colormem.sv:43$1181_EN[15:0]$1185 [0] $flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$0$memwr$\bram$./colormem.sv:43$1181_EN[15:0]$1185 [0] $flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$0$memwr$\bram$./colormem.sv:43$1181_EN[15:0]$1185 [0] $flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$0$memwr$\bram$./colormem.sv:43$1181_EN[15:0]$1185 [0] $flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$0$memwr$\bram$./colormem.sv:43$1181_EN[15:0]$1185 [0] $flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$0$memwr$\bram$./colormem.sv:43$1181_EN[15:0]$1185 [0] $flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$0$memwr$\bram$./colormem.sv:43$1181_EN[15:0]$1185 [0] $flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$0$memwr$\bram$./colormem.sv:43$1181_EN[15:0]$1185 [0] }
    Consolidated identical input bits for $mux cell $flatten\xosera_main.\xrmem_arb.\tile2mem.$procmux$2508:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\xosera_main.\xrmem_arb.\tile2mem.$0$memwr$\bram$./tilemem.sv:76$1203_EN[15:0]$1207
      New ports: A=1'0, B=1'1, Y=$flatten\xosera_main.\xrmem_arb.\tile2mem.$0$memwr$\bram$./tilemem.sv:76$1203_EN[15:0]$1207 [0]
      New connections: $flatten\xosera_main.\xrmem_arb.\tile2mem.$0$memwr$\bram$./tilemem.sv:76$1203_EN[15:0]$1207 [15:1] = { $flatten\xosera_main.\xrmem_arb.\tile2mem.$0$memwr$\bram$./tilemem.sv:76$1203_EN[15:0]$1207 [0] $flatten\xosera_main.\xrmem_arb.\tile2mem.$0$memwr$\bram$./tilemem.sv:76$1203_EN[15:0]$1207 [0] $flatten\xosera_main.\xrmem_arb.\tile2mem.$0$memwr$\bram$./tilemem.sv:76$1203_EN[15:0]$1207 [0] $flatten\xosera_main.\xrmem_arb.\tile2mem.$0$memwr$\bram$./tilemem.sv:76$1203_EN[15:0]$1207 [0] $flatten\xosera_main.\xrmem_arb.\tile2mem.$0$memwr$\bram$./tilemem.sv:76$1203_EN[15:0]$1207 [0] $flatten\xosera_main.\xrmem_arb.\tile2mem.$0$memwr$\bram$./tilemem.sv:76$1203_EN[15:0]$1207 [0] $flatten\xosera_main.\xrmem_arb.\tile2mem.$0$memwr$\bram$./tilemem.sv:76$1203_EN[15:0]$1207 [0] $flatten\xosera_main.\xrmem_arb.\tile2mem.$0$memwr$\bram$./tilemem.sv:76$1203_EN[15:0]$1207 [0] $flatten\xosera_main.\xrmem_arb.\tile2mem.$0$memwr$\bram$./tilemem.sv:76$1203_EN[15:0]$1207 [0] $flatten\xosera_main.\xrmem_arb.\tile2mem.$0$memwr$\bram$./tilemem.sv:76$1203_EN[15:0]$1207 [0] $flatten\xosera_main.\xrmem_arb.\tile2mem.$0$memwr$\bram$./tilemem.sv:76$1203_EN[15:0]$1207 [0] $flatten\xosera_main.\xrmem_arb.\tile2mem.$0$memwr$\bram$./tilemem.sv:76$1203_EN[15:0]$1207 [0] $flatten\xosera_main.\xrmem_arb.\tile2mem.$0$memwr$\bram$./tilemem.sv:76$1203_EN[15:0]$1207 [0] $flatten\xosera_main.\xrmem_arb.\tile2mem.$0$memwr$\bram$./tilemem.sv:76$1203_EN[15:0]$1207 [0] $flatten\xosera_main.\xrmem_arb.\tile2mem.$0$memwr$\bram$./tilemem.sv:76$1203_EN[15:0]$1207 [0] }
    Consolidated identical input bits for $mux cell $flatten\xosera_main.\xrmem_arb.\tilemem.$procmux$1308:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$flatten\xosera_main.\xrmem_arb.\tilemem.$0$memwr$\bram$./tilemem.sv:76$1215_EN[15:0]$1219
      New ports: A=1'0, B=1'1, Y=$flatten\xosera_main.\xrmem_arb.\tilemem.$0$memwr$\bram$./tilemem.sv:76$1215_EN[15:0]$1219 [0]
      New connections: $flatten\xosera_main.\xrmem_arb.\tilemem.$0$memwr$\bram$./tilemem.sv:76$1215_EN[15:0]$1219 [15:1] = { $flatten\xosera_main.\xrmem_arb.\tilemem.$0$memwr$\bram$./tilemem.sv:76$1215_EN[15:0]$1219 [0] $flatten\xosera_main.\xrmem_arb.\tilemem.$0$memwr$\bram$./tilemem.sv:76$1215_EN[15:0]$1219 [0] $flatten\xosera_main.\xrmem_arb.\tilemem.$0$memwr$\bram$./tilemem.sv:76$1215_EN[15:0]$1219 [0] $flatten\xosera_main.\xrmem_arb.\tilemem.$0$memwr$\bram$./tilemem.sv:76$1215_EN[15:0]$1219 [0] $flatten\xosera_main.\xrmem_arb.\tilemem.$0$memwr$\bram$./tilemem.sv:76$1215_EN[15:0]$1219 [0] $flatten\xosera_main.\xrmem_arb.\tilemem.$0$memwr$\bram$./tilemem.sv:76$1215_EN[15:0]$1219 [0] $flatten\xosera_main.\xrmem_arb.\tilemem.$0$memwr$\bram$./tilemem.sv:76$1215_EN[15:0]$1219 [0] $flatten\xosera_main.\xrmem_arb.\tilemem.$0$memwr$\bram$./tilemem.sv:76$1215_EN[15:0]$1219 [0] $flatten\xosera_main.\xrmem_arb.\tilemem.$0$memwr$\bram$./tilemem.sv:76$1215_EN[15:0]$1219 [0] $flatten\xosera_main.\xrmem_arb.\tilemem.$0$memwr$\bram$./tilemem.sv:76$1215_EN[15:0]$1219 [0] $flatten\xosera_main.\xrmem_arb.\tilemem.$0$memwr$\bram$./tilemem.sv:76$1215_EN[15:0]$1219 [0] $flatten\xosera_main.\xrmem_arb.\tilemem.$0$memwr$\bram$./tilemem.sv:76$1215_EN[15:0]$1219 [0] $flatten\xosera_main.\xrmem_arb.\tilemem.$0$memwr$\bram$./tilemem.sv:76$1215_EN[15:0]$1219 [0] $flatten\xosera_main.\xrmem_arb.\tilemem.$0$memwr$\bram$./tilemem.sv:76$1215_EN[15:0]$1219 [0] $flatten\xosera_main.\xrmem_arb.\tilemem.$0$memwr$\bram$./tilemem.sv:76$1215_EN[15:0]$1219 [0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$5786: { $flatten\xosera_main.\reg_interface.$eq$./reg_interface.sv:408$240_Y $flatten\xosera_main.\reg_interface.$eq$./reg_interface.sv:408$239_Y $flatten\xosera_main.\reg_interface.$eq$./reg_interface.sv:402$237_Y $flatten\xosera_main.\reg_interface.$eq$./reg_interface.sv:402$236_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$5792: { $flatten\xosera_main.\reg_interface.$eq$./reg_interface.sv:408$240_Y $flatten\xosera_main.\reg_interface.$eq$./reg_interface.sv:408$239_Y $flatten\xosera_main.\reg_interface.$eq$./reg_interface.sv:402$237_Y $flatten\xosera_main.\reg_interface.$eq$./reg_interface.sv:402$236_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$5794: { $flatten\xosera_main.\reg_interface.$procmux$3520_CMP $flatten\xosera_main.\reg_interface.$eq$./reg_interface.sv:408$240_Y $flatten\xosera_main.\reg_interface.$eq$./reg_interface.sv:408$239_Y $flatten\xosera_main.\reg_interface.$eq$./reg_interface.sv:402$237_Y $flatten\xosera_main.\reg_interface.$eq$./reg_interface.sv:402$236_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$5798: { $flatten\xosera_main.\reg_interface.$procmux$3446_CMP $flatten\xosera_main.\reg_interface.$procmux$3365_CMP $flatten\xosera_main.\reg_interface.$eq$./reg_interface.sv:408$240_Y $flatten\xosera_main.\reg_interface.$eq$./reg_interface.sv:408$239_Y $flatten\xosera_main.\reg_interface.$eq$./reg_interface.sv:402$237_Y $flatten\xosera_main.\reg_interface.$eq$./reg_interface.sv:402$236_Y }
  Optimizing cells in module \xosera_upd.
Performed a total of 32 changes.

19.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
<suppressed ~114 debug messages>
Removed a total of 38 cells.

19.10.6. Executing OPT_DFF pass (perform DFF optimizations).

19.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..
Removed 0 unused cells and 784 unused wires.
<suppressed ~1 debug messages>

19.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.

19.10.9. Rerunning OPT passes. (Maybe there is more to do..)

19.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xosera_upd..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~362 debug messages>

19.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xosera_upd.
    New ctrl vector for $pmux cell $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2447: { $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2117_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1612_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1642_CMP $auto$opt_reduce.cc:134:opt_mux$5829 $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2367_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1740_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1611_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1619_CMP }
    New ctrl vector for $pmux cell $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2485: { $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2117_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1612_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1642_CMP $auto$opt_reduce.cc:134:opt_mux$5831 }
    New ctrl vector for $pmux cell $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2447: { $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2117_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1612_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1642_CMP $auto$opt_reduce.cc:134:opt_mux$5833 $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2367_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1740_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1611_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1619_CMP }
    New ctrl vector for $pmux cell $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2485: { $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2117_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1612_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1642_CMP $auto$opt_reduce.cc:134:opt_mux$5835 }
  Optimizing cells in module \xosera_upd.
Performed a total of 4 changes.

19.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

19.10.13. Executing OPT_DFF pass (perform DFF optimizations).

19.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

19.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.

19.10.16. Rerunning OPT passes. (Maybe there is more to do..)

19.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xosera_upd..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~362 debug messages>

19.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xosera_upd.
Performed a total of 0 changes.

19.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
Removed a total of 0 cells.

19.10.20. Executing OPT_DFF pass (perform DFF optimizations).

19.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..

19.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.

19.10.23. Finished OPT passes. (There is nothing left to do.)

19.11. Executing FSM pass (extract and optimize FSM).

19.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register xosera_upd.xosera_main.copper.copper_ex_state.
Not marking xosera_upd.xosera_main.opt_EN_BLIT.blitter.blit_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register xosera_upd.xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch.
Found FSM state register xosera_upd.xosera_main.video_gen.video_pf_a.pf_fetch.

19.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\xosera_main.copper.copper_ex_state' from module `\xosera_upd'.
  found $dff cell for state register: $flatten\xosera_main.\copper.$procdff$5688
  root of input selection tree: $flatten\xosera_main.\copper.$0\copper_ex_state[2:0]
  found reset state: 3'000 (guessed from mux tree)
  found ctrl input: \reset
  found ctrl input: \xosera_main.copper.copp_reset
  found ctrl input: $flatten\xosera_main.\copper.$procmux$4028_CMP
  found ctrl input: $flatten\xosera_main.\copper.$procmux$4093_CMP
  found ctrl input: $flatten\xosera_main.\copper.$procmux$4268_CMP
  found ctrl input: $flatten\xosera_main.\copper.$procmux$4226_CMP
  found ctrl input: $flatten\xosera_main.\copper.$procmux$4167_CMP
  found ctrl input: $auto$opt_reduce.cc:134:opt_mux$5813
  found ctrl input: $flatten\xosera_main.\copper.$procmux$4160_CMP
  found state code: 3'001
  found ctrl input: \xosera_main.copper.r_insn [0]
  found ctrl input: \xosera_main.copper.r_insn [1]
  found ctrl input: $flatten\xosera_main.\copper.$logic_and$./copper.sv:382$171_Y
  found state code: 3'011
  found ctrl input: \xosera_main.copper.v_reached
  found ctrl input: \xosera_main.copper.h_reached
  found state code: 3'100
  found ctrl input: \xosera_main.copper.copper_en
  found state code: 3'000
  found state code: 3'010
  found ctrl output: $flatten\xosera_main.\copper.$procmux$4028_CMP
  found ctrl output: $flatten\xosera_main.\copper.$procmux$4093_CMP
  found ctrl output: $flatten\xosera_main.\copper.$procmux$4167_CMP
  found ctrl output: $flatten\xosera_main.\copper.$procmux$4226_CMP
  found ctrl output: $flatten\xosera_main.\copper.$procmux$4268_CMP
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_mux$5813 $flatten\xosera_main.\copper.$procmux$4160_CMP $flatten\xosera_main.\copper.$logic_and$./copper.sv:382$171_Y \xosera_main.copper.h_reached \xosera_main.copper.v_reached \xosera_main.copper.copp_reset \xosera_main.copper.copper_en \xosera_main.copper.r_insn [1:0] \reset }
  ctrl outputs: { $flatten\xosera_main.\copper.$procmux$4268_CMP $flatten\xosera_main.\copper.$procmux$4226_CMP $flatten\xosera_main.\copper.$procmux$4167_CMP $flatten\xosera_main.\copper.$procmux$4093_CMP $flatten\xosera_main.\copper.$procmux$4028_CMP $flatten\xosera_main.\copper.$0\copper_ex_state[2:0] }
  transition:      3'000 10'-----00--0 ->      3'000 8'00100000
  transition:      3'000 10'-----01--0 ->      3'001 8'00100001
  transition:      3'000 10'-----1---0 ->      3'000 8'00100000
  transition:      3'000 10'---------1 ->      3'000 8'00100000
  transition:      3'100 10'00---0---0 ->      3'100 8'00001100
  transition:      3'100 10'-10--0-000 ->      3'011 8'00001011
  transition:      3'100 10'-11--0-000 ->      3'001 8'00001001
  transition:      3'100 10'-1--00-100 ->      3'011 8'00001011
  transition:      3'100 10'-1--10-100 ->      3'001 8'00001001
  transition:      3'100 10'-1-0-0-010 ->      3'011 8'00001011
  transition:      3'100 10'-1-1-0-010 ->      3'001 8'00001001
  transition:      3'100 10'-1---0-110 ->      3'100 8'00001100
  transition:      3'100 10'1----0---0 ->      3'001 8'00001001
  transition:      3'100 10'-----1---0 ->      3'000 8'00001000
  transition:      3'100 10'---------1 ->      3'000 8'00001000
  transition:      3'010 10'-----0---0 ->      3'011 8'10000011
  transition:      3'010 10'-----1---0 ->      3'000 8'10000000
  transition:      3'010 10'---------1 ->      3'000 8'10000000
  transition:      3'001 10'-----00--0 ->      3'000 8'01000000
  transition:      3'001 10'-----01--0 ->      3'010 8'01000010
  transition:      3'001 10'-----1---0 ->      3'000 8'01000000
  transition:      3'001 10'---------1 ->      3'000 8'01000000
  transition:      3'011 10'-----0---0 ->      3'100 8'00010100
  transition:      3'011 10'-----1---0 ->      3'000 8'00010000
  transition:      3'011 10'---------1 ->      3'000 8'00010000
Extracting FSM `\xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch' from module `\xosera_upd'.
  found $dff cell for state register: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5566
  root of input selection tree: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$0\pf_fetch[3:0]
  found reset state: 4'0000 (guessed from mux tree)
  found ctrl input: \reset
  found ctrl input: \xosera_main.video_gen.opt_PF_B.video_pf_b.stall_i
  found ctrl input: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2363_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1619_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1611_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1740_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2367_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1641_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2369_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1776_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2371_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2372_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1642_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1612_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2117_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2175_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2340_CMP
  found state code: 4'0000
  found state code: 4'0111
  found ctrl input: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$eq$./video_playfield.sv:244$393_Y
  found state code: 4'1110
  found ctrl input: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$eq$./video_playfield.sv:229$390_Y
  found state code: 4'1101
  found state code: 4'1100
  found state code: 4'1011
  found state code: 4'1010
  found state code: 4'1001
  found ctrl input: \xosera_main.video_gen.opt_PF_B.video_pf_b.mem_fetch_active
  found ctrl input: \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_pixels_buf_full
  found state code: 4'1000
  found state code: 4'0001
  found state code: 4'0110
  found state code: 4'0101
  found state code: 4'0100
  found state code: 4'0011
  found state code: 4'0010
  found ctrl input: \xosera_main.video_gen.pb_bitmap
  found ctrl output: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2372_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2371_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2369_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2367_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2363_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2340_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2175_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2117_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1776_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1740_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1642_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1641_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1619_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1612_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1611_CMP
  ctrl inputs: { \xosera_main.video_gen.opt_PF_B.video_pf_b.stall_i \xosera_main.video_gen.opt_PF_B.video_pf_b.mem_fetch_active \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_pixels_buf_full $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$eq$./video_playfield.sv:229$390_Y $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$eq$./video_playfield.sv:244$393_Y \xosera_main.video_gen.pb_bitmap \reset }
  ctrl outputs: { $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$0\pf_fetch[3:0] $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1611_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1612_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1619_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1641_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1642_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1740_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1776_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2117_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2175_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2340_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2363_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2367_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2369_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2371_CMP $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2372_CMP }
  transition:     4'0000 7'00----0 ->     4'0000 19'0000000000000100000
  transition:     4'0000 7'01---00 ->     4'0111 19'0111000000000100000
  transition:     4'0000 7'01---10 ->     4'0001 19'0001000000000100000
  transition:     4'0000 7'1-----0 ->     4'0000 19'0000000000000100000
  transition:     4'0000 7'------1 ->     4'0000 19'0000000000000100000
  transition:     4'1000 7'0-----0 ->     4'1001 19'1001000000000000100
  transition:     4'1000 7'1-----0 ->     4'1000 19'1000000000000000100
  transition:     4'1000 7'------1 ->     4'0000 19'0000000000000000100
  transition:     4'0100 7'0---0-0 ->     4'0101 19'0101000010000000000
  transition:     4'0100 7'0---1-0 ->     4'0001 19'0001000010000000000
  transition:     4'0100 7'1-----0 ->     4'0100 19'0100000010000000000
  transition:     4'0100 7'------1 ->     4'0000 19'0000000010000000000
  transition:     4'1100 7'0--0--0 ->     4'1101 19'1101100000000000000
  transition:     4'1100 7'0--1--0 ->     4'0111 19'0111100000000000000
  transition:     4'1100 7'1-----0 ->     4'1100 19'1100100000000000000
  transition:     4'1100 7'------1 ->     4'0000 19'0000100000000000000
  transition:     4'0010 7'0-----0 ->     4'0011 19'0011000000010000000
  transition:     4'0010 7'1-----0 ->     4'0010 19'0010000000010000000
  transition:     4'0010 7'------1 ->     4'0000 19'0000000000010000000
  transition:     4'1010 7'0-----0 ->     4'1011 19'1011000000000001000
  transition:     4'1010 7'1-----0 ->     4'1010 19'1010000000000001000
  transition:     4'1010 7'------1 ->     4'0000 19'0000000000000001000
  transition:     4'0110 7'0-----0 ->     4'0001 19'0001000000000000010
  transition:     4'0110 7'1-----0 ->     4'0110 19'0110000000000000010
  transition:     4'0110 7'------1 ->     4'0000 19'0000000000000000010
  transition:     4'1110 7'0-----0 ->     4'0111 19'0111000000000010000
  transition:     4'1110 7'1-----0 ->     4'1110 19'1110000000000010000
  transition:     4'1110 7'------1 ->     4'0000 19'0000000000000010000
  transition:     4'0001 7'00----0 ->     4'0000 19'0000000000001000000
  transition:     4'0001 7'010---0 ->     4'0010 19'0010000000001000000
  transition:     4'0001 7'011---0 ->     4'0001 19'0001000000001000000
  transition:     4'0001 7'1-----0 ->     4'0001 19'0001000000001000000
  transition:     4'0001 7'------1 ->     4'0000 19'0000000000001000000
  transition:     4'1001 7'0-----0 ->     4'1010 19'1010000100000000000
  transition:     4'1001 7'1-----0 ->     4'1001 19'1001000100000000000
  transition:     4'1001 7'------1 ->     4'0000 19'0000000100000000000
  transition:     4'0101 7'0-----0 ->     4'0110 19'0110000000000000001
  transition:     4'0101 7'1-----0 ->     4'0101 19'0101000000000000001
  transition:     4'0101 7'------1 ->     4'0000 19'0000000000000000001
  transition:     4'1101 7'0---0-0 ->     4'1110 19'1110001000000000000
  transition:     4'1101 7'0---1-0 ->     4'0111 19'0111001000000000000
  transition:     4'1101 7'1-----0 ->     4'1101 19'1101001000000000000
  transition:     4'1101 7'------1 ->     4'0000 19'0000001000000000000
  transition:     4'0011 7'0--0--0 ->     4'0100 19'0100010000000000000
  transition:     4'0011 7'0--1--0 ->     4'0001 19'0001010000000000000
  transition:     4'0011 7'1-----0 ->     4'0011 19'0011010000000000000
  transition:     4'0011 7'------1 ->     4'0000 19'0000010000000000000
  transition:     4'1011 7'0-----0 ->     4'1100 19'1100000001000000000
  transition:     4'1011 7'1-----0 ->     4'1011 19'1011000001000000000
  transition:     4'1011 7'------1 ->     4'0000 19'0000000001000000000
  transition:     4'0111 7'00----0 ->     4'0000 19'0000000000100000000
  transition:     4'0111 7'010---0 ->     4'1000 19'1000000000100000000
  transition:     4'0111 7'011---0 ->     4'0111 19'0111000000100000000
  transition:     4'0111 7'1-----0 ->     4'0111 19'0111000000100000000
  transition:     4'0111 7'------1 ->     4'0000 19'0000000000100000000
Extracting FSM `\xosera_main.video_gen.video_pf_a.pf_fetch' from module `\xosera_upd'.
  found $dff cell for state register: $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5566
  root of input selection tree: $flatten\xosera_main.\video_gen.\video_pf_a.$0\pf_fetch[3:0]
  found reset state: 4'0000 (guessed from mux tree)
  found ctrl input: \reset
  found ctrl input: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2363_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1619_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1611_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1740_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2367_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1641_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2369_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1776_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2371_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2372_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1642_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1612_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2117_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2175_CMP
  found ctrl input: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2340_CMP
  found state code: 4'0000
  found state code: 4'0111
  found ctrl input: $flatten\xosera_main.\video_gen.\video_pf_a.$eq$./video_playfield.sv:244$393_Y
  found state code: 4'1110
  found ctrl input: $flatten\xosera_main.\video_gen.\video_pf_a.$eq$./video_playfield.sv:229$390_Y
  found state code: 4'1101
  found state code: 4'1100
  found state code: 4'1011
  found state code: 4'1010
  found state code: 4'1001
  found ctrl input: \xosera_main.video_gen.video_pf_a.mem_fetch_active
  found ctrl input: \xosera_main.video_gen.video_pf_a.pf_pixels_buf_full
  found state code: 4'1000
  found state code: 4'0001
  found state code: 4'0110
  found state code: 4'0101
  found state code: 4'0100
  found state code: 4'0011
  found state code: 4'0010
  found ctrl input: \xosera_main.video_gen.pa_bitmap
  found ctrl output: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2372_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2371_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2369_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2367_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2363_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2340_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2175_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2117_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1776_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1740_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1642_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1641_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1619_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1612_CMP
  found ctrl output: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1611_CMP
  ctrl inputs: { \xosera_main.video_gen.video_pf_a.mem_fetch_active \xosera_main.video_gen.video_pf_a.pf_pixels_buf_full $flatten\xosera_main.\video_gen.\video_pf_a.$eq$./video_playfield.sv:229$390_Y $flatten\xosera_main.\video_gen.\video_pf_a.$eq$./video_playfield.sv:244$393_Y \xosera_main.video_gen.pa_bitmap \reset }
  ctrl outputs: { $flatten\xosera_main.\video_gen.\video_pf_a.$0\pf_fetch[3:0] $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1611_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1612_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1619_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1641_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1642_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1740_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1776_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2117_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2175_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2340_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2363_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2367_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2369_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2371_CMP $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2372_CMP }
  transition:     4'0000 6'0----0 ->     4'0000 19'0000000000000100000
  transition:     4'0000 6'1---00 ->     4'0111 19'0111000000000100000
  transition:     4'0000 6'1---10 ->     4'0001 19'0001000000000100000
  transition:     4'0000 6'-----1 ->     4'0000 19'0000000000000100000
  transition:     4'1000 6'-----0 ->     4'1001 19'1001000000000000100
  transition:     4'1000 6'-----1 ->     4'0000 19'0000000000000000100
  transition:     4'0100 6'---0-0 ->     4'0101 19'0101000010000000000
  transition:     4'0100 6'---1-0 ->     4'0001 19'0001000010000000000
  transition:     4'0100 6'-----1 ->     4'0000 19'0000000010000000000
  transition:     4'1100 6'--0--0 ->     4'1101 19'1101100000000000000
  transition:     4'1100 6'--1--0 ->     4'0111 19'0111100000000000000
  transition:     4'1100 6'-----1 ->     4'0000 19'0000100000000000000
  transition:     4'0010 6'-----0 ->     4'0011 19'0011000000010000000
  transition:     4'0010 6'-----1 ->     4'0000 19'0000000000010000000
  transition:     4'1010 6'-----0 ->     4'1011 19'1011000000000001000
  transition:     4'1010 6'-----1 ->     4'0000 19'0000000000000001000
  transition:     4'0110 6'-----0 ->     4'0001 19'0001000000000000010
  transition:     4'0110 6'-----1 ->     4'0000 19'0000000000000000010
  transition:     4'1110 6'-----0 ->     4'0111 19'0111000000000010000
  transition:     4'1110 6'-----1 ->     4'0000 19'0000000000000010000
  transition:     4'0001 6'0----0 ->     4'0000 19'0000000000001000000
  transition:     4'0001 6'10---0 ->     4'0010 19'0010000000001000000
  transition:     4'0001 6'11---0 ->     4'0001 19'0001000000001000000
  transition:     4'0001 6'-----1 ->     4'0000 19'0000000000001000000
  transition:     4'1001 6'-----0 ->     4'1010 19'1010000100000000000
  transition:     4'1001 6'-----1 ->     4'0000 19'0000000100000000000
  transition:     4'0101 6'-----0 ->     4'0110 19'0110000000000000001
  transition:     4'0101 6'-----1 ->     4'0000 19'0000000000000000001
  transition:     4'1101 6'---0-0 ->     4'1110 19'1110001000000000000
  transition:     4'1101 6'---1-0 ->     4'0111 19'0111001000000000000
  transition:     4'1101 6'-----1 ->     4'0000 19'0000001000000000000
  transition:     4'0011 6'--0--0 ->     4'0100 19'0100010000000000000
  transition:     4'0011 6'--1--0 ->     4'0001 19'0001010000000000000
  transition:     4'0011 6'-----1 ->     4'0000 19'0000010000000000000
  transition:     4'1011 6'-----0 ->     4'1100 19'1100000001000000000
  transition:     4'1011 6'-----1 ->     4'0000 19'0000000001000000000
  transition:     4'0111 6'0----0 ->     4'0000 19'0000000000100000000
  transition:     4'0111 6'10---0 ->     4'1000 19'1000000000100000000
  transition:     4'0111 6'11---0 ->     4'0111 19'0111000000100000000
  transition:     4'0111 6'-----1 ->     4'0000 19'0000000000100000000

19.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\xosera_main.video_gen.video_pf_a.pf_fetch$5860' from module `\xosera_upd'.
Optimizing FSM `$fsm$\xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch$5843' from module `\xosera_upd'.
Optimizing FSM `$fsm$\xosera_main.copper.copper_ex_state$5836' from module `\xosera_upd'.

19.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..
Removed 75 unused cells and 75 unused wires.
<suppressed ~78 debug messages>

19.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\xosera_main.copper.copper_ex_state$5836' from module `\xosera_upd'.
  Removing unused output signal $flatten\xosera_main.\copper.$0\copper_ex_state[2:0] [0].
  Removing unused output signal $flatten\xosera_main.\copper.$0\copper_ex_state[2:0] [1].
  Removing unused output signal $flatten\xosera_main.\copper.$0\copper_ex_state[2:0] [2].
Optimizing FSM `$fsm$\xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch$5843' from module `\xosera_upd'.
  Removing unused output signal $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2340_CMP.
  Removing unused output signal $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$0\pf_fetch[3:0] [0].
  Removing unused output signal $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$0\pf_fetch[3:0] [1].
  Removing unused output signal $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$0\pf_fetch[3:0] [2].
  Removing unused output signal $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$0\pf_fetch[3:0] [3].
Optimizing FSM `$fsm$\xosera_main.video_gen.video_pf_a.pf_fetch$5860' from module `\xosera_upd'.
  Removing unused output signal $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2340_CMP.
  Removing unused output signal $flatten\xosera_main.\video_gen.\video_pf_a.$0\pf_fetch[3:0] [0].
  Removing unused output signal $flatten\xosera_main.\video_gen.\video_pf_a.$0\pf_fetch[3:0] [1].
  Removing unused output signal $flatten\xosera_main.\video_gen.\video_pf_a.$0\pf_fetch[3:0] [2].
  Removing unused output signal $flatten\xosera_main.\video_gen.\video_pf_a.$0\pf_fetch[3:0] [3].

19.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\xosera_main.copper.copper_ex_state$5836' from module `\xosera_upd' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> ----1
  100 -> ---1-
  010 -> --1--
  001 -> -1---
  011 -> 1----
Recoding FSM `$fsm$\xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch$5843' from module `\xosera_upd' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> --------------1
  1000 -> -------------1-
  0100 -> ------------1--
  1100 -> -----------1---
  0010 -> ----------1----
  1010 -> ---------1-----
  0110 -> --------1------
  1110 -> -------1-------
  0001 -> ------1--------
  1001 -> -----1---------
  0101 -> ----1----------
  1101 -> ---1-----------
  0011 -> --1------------
  1011 -> -1-------------
  0111 -> 1--------------
Recoding FSM `$fsm$\xosera_main.video_gen.video_pf_a.pf_fetch$5860' from module `\xosera_upd' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> --------------1
  1000 -> -------------1-
  0100 -> ------------1--
  1100 -> -----------1---
  0010 -> ----------1----
  1010 -> ---------1-----
  0110 -> --------1------
  1110 -> -------1-------
  0001 -> ------1--------
  1001 -> -----1---------
  0101 -> ----1----------
  1101 -> ---1-----------
  0011 -> --1------------
  1011 -> -1-------------
  0111 -> 1--------------

19.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\xosera_main.copper.copper_ex_state$5836' from module `xosera_upd':
-------------------------------------

  Information on FSM $fsm$\xosera_main.copper.copper_ex_state$5836 (\xosera_main.copper.copper_ex_state):

  Number of input signals:   10
  Number of output signals:   5
  Number of state bits:       5

  Input signals:
    0: \reset
    1: \xosera_main.copper.r_insn [0]
    2: \xosera_main.copper.r_insn [1]
    3: \xosera_main.copper.copper_en
    4: \xosera_main.copper.copp_reset
    5: \xosera_main.copper.v_reached
    6: \xosera_main.copper.h_reached
    7: $flatten\xosera_main.\copper.$logic_and$./copper.sv:382$171_Y
    8: $flatten\xosera_main.\copper.$procmux$4160_CMP
    9: $auto$opt_reduce.cc:134:opt_mux$5813

  Output signals:
    0: $flatten\xosera_main.\copper.$procmux$4028_CMP
    1: $flatten\xosera_main.\copper.$procmux$4093_CMP
    2: $flatten\xosera_main.\copper.$procmux$4167_CMP
    3: $flatten\xosera_main.\copper.$procmux$4226_CMP
    4: $flatten\xosera_main.\copper.$procmux$4268_CMP

  State encoding:
    0:    5'----1  <RESET STATE>
    1:    5'---1-
    2:    5'--1--
    3:    5'-1---
    4:    5'1----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-----00--0   ->     0 5'00100
      1:     0 10'-----1---0   ->     0 5'00100
      2:     0 10'---------1   ->     0 5'00100
      3:     0 10'-----01--0   ->     3 5'00100
      4:     1 10'-----1---0   ->     0 5'00001
      5:     1 10'---------1   ->     0 5'00001
      6:     1 10'-1---0-110   ->     1 5'00001
      7:     1 10'00---0---0   ->     1 5'00001
      8:     1 10'-11--0-000   ->     3 5'00001
      9:     1 10'-1--10-100   ->     3 5'00001
     10:     1 10'-1-1-0-010   ->     3 5'00001
     11:     1 10'1----0---0   ->     3 5'00001
     12:     1 10'-10--0-000   ->     4 5'00001
     13:     1 10'-1--00-100   ->     4 5'00001
     14:     1 10'-1-0-0-010   ->     4 5'00001
     15:     2 10'-----1---0   ->     0 5'10000
     16:     2 10'---------1   ->     0 5'10000
     17:     2 10'-----0---0   ->     4 5'10000
     18:     3 10'-----00--0   ->     0 5'01000
     19:     3 10'-----1---0   ->     0 5'01000
     20:     3 10'---------1   ->     0 5'01000
     21:     3 10'-----01--0   ->     2 5'01000
     22:     4 10'-----1---0   ->     0 5'00010
     23:     4 10'---------1   ->     0 5'00010
     24:     4 10'-----0---0   ->     1 5'00010

-------------------------------------

FSM `$fsm$\xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch$5843' from module `xosera_upd':
-------------------------------------

  Information on FSM $fsm$\xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch$5843 (\xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch):

  Number of input signals:    7
  Number of output signals:  14
  Number of state bits:      15

  Input signals:
    0: \reset
    1: \xosera_main.video_gen.pb_bitmap
    2: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$eq$./video_playfield.sv:244$393_Y
    3: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$eq$./video_playfield.sv:229$390_Y
    4: \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_pixels_buf_full
    5: \xosera_main.video_gen.opt_PF_B.video_pf_b.mem_fetch_active
    6: \xosera_main.video_gen.opt_PF_B.video_pf_b.stall_i

  Output signals:
    0: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2372_CMP
    1: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2371_CMP
    2: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2369_CMP
    3: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2367_CMP
    4: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2363_CMP
    5: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2175_CMP
    6: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2117_CMP
    7: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1776_CMP
    8: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1740_CMP
    9: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1642_CMP
   10: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1641_CMP
   11: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1619_CMP
   12: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1612_CMP
   13: $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1611_CMP

  State encoding:
    0: 15'--------------1  <RESET STATE>
    1: 15'-------------1-
    2: 15'------------1--
    3: 15'-----------1---
    4: 15'----------1----
    5: 15'---------1-----
    6: 15'--------1------
    7: 15'-------1-------
    8: 15'------1--------
    9: 15'-----1---------
   10: 15'----1----------
   11: 15'---1-----------
   12: 15'--1------------
   13: 15'-1-------------
   14: 15'1--------------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 7'00----0   ->     0 14'00000000000000
      1:     0 7'1-----0   ->     0 14'00000000000000
      2:     0 7'------1   ->     0 14'00000000000000
      3:     0 7'01---10   ->     8 14'00000000000000
      4:     0 7'01---00   ->    14 14'00000000000000
      5:     1 7'------1   ->     0 14'00000000000100
      6:     1 7'1-----0   ->     1 14'00000000000100
      7:     1 7'0-----0   ->     9 14'00000000000100
      8:     2 7'------1   ->     0 14'00001000000000
      9:     2 7'1-----0   ->     2 14'00001000000000
     10:     2 7'0---1-0   ->     8 14'00001000000000
     11:     2 7'0---0-0   ->    10 14'00001000000000
     12:     3 7'------1   ->     0 14'10000000000000
     13:     3 7'1-----0   ->     3 14'10000000000000
     14:     3 7'0--0--0   ->    11 14'10000000000000
     15:     3 7'0--1--0   ->    14 14'10000000000000
     16:     4 7'------1   ->     0 14'00000001000000
     17:     4 7'1-----0   ->     4 14'00000001000000
     18:     4 7'0-----0   ->    12 14'00000001000000
     19:     5 7'------1   ->     0 14'00000000001000
     20:     5 7'1-----0   ->     5 14'00000000001000
     21:     5 7'0-----0   ->    13 14'00000000001000
     22:     6 7'------1   ->     0 14'00000000000010
     23:     6 7'1-----0   ->     6 14'00000000000010
     24:     6 7'0-----0   ->     8 14'00000000000010
     25:     7 7'------1   ->     0 14'00000000010000
     26:     7 7'1-----0   ->     7 14'00000000010000
     27:     7 7'0-----0   ->    14 14'00000000010000
     28:     8 7'00----0   ->     0 14'00000000100000
     29:     8 7'------1   ->     0 14'00000000100000
     30:     8 7'010---0   ->     4 14'00000000100000
     31:     8 7'011---0   ->     8 14'00000000100000
     32:     8 7'1-----0   ->     8 14'00000000100000
     33:     9 7'------1   ->     0 14'00010000000000
     34:     9 7'0-----0   ->     5 14'00010000000000
     35:     9 7'1-----0   ->     9 14'00010000000000
     36:    10 7'------1   ->     0 14'00000000000001
     37:    10 7'0-----0   ->     6 14'00000000000001
     38:    10 7'1-----0   ->    10 14'00000000000001
     39:    11 7'------1   ->     0 14'00100000000000
     40:    11 7'0---0-0   ->     7 14'00100000000000
     41:    11 7'1-----0   ->    11 14'00100000000000
     42:    11 7'0---1-0   ->    14 14'00100000000000
     43:    12 7'------1   ->     0 14'01000000000000
     44:    12 7'0--0--0   ->     2 14'01000000000000
     45:    12 7'0--1--0   ->     8 14'01000000000000
     46:    12 7'1-----0   ->    12 14'01000000000000
     47:    13 7'------1   ->     0 14'00000100000000
     48:    13 7'0-----0   ->     3 14'00000100000000
     49:    13 7'1-----0   ->    13 14'00000100000000
     50:    14 7'00----0   ->     0 14'00000010000000
     51:    14 7'------1   ->     0 14'00000010000000
     52:    14 7'010---0   ->     1 14'00000010000000
     53:    14 7'011---0   ->    14 14'00000010000000
     54:    14 7'1-----0   ->    14 14'00000010000000

-------------------------------------

FSM `$fsm$\xosera_main.video_gen.video_pf_a.pf_fetch$5860' from module `xosera_upd':
-------------------------------------

  Information on FSM $fsm$\xosera_main.video_gen.video_pf_a.pf_fetch$5860 (\xosera_main.video_gen.video_pf_a.pf_fetch):

  Number of input signals:    6
  Number of output signals:  14
  Number of state bits:      15

  Input signals:
    0: \reset
    1: \xosera_main.video_gen.pa_bitmap
    2: $flatten\xosera_main.\video_gen.\video_pf_a.$eq$./video_playfield.sv:244$393_Y
    3: $flatten\xosera_main.\video_gen.\video_pf_a.$eq$./video_playfield.sv:229$390_Y
    4: \xosera_main.video_gen.video_pf_a.pf_pixels_buf_full
    5: \xosera_main.video_gen.video_pf_a.mem_fetch_active

  Output signals:
    0: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2372_CMP
    1: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2371_CMP
    2: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2369_CMP
    3: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2367_CMP
    4: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2363_CMP
    5: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2175_CMP
    6: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2117_CMP
    7: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1776_CMP
    8: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1740_CMP
    9: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1642_CMP
   10: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1641_CMP
   11: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1619_CMP
   12: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1612_CMP
   13: $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1611_CMP

  State encoding:
    0: 15'--------------1  <RESET STATE>
    1: 15'-------------1-
    2: 15'------------1--
    3: 15'-----------1---
    4: 15'----------1----
    5: 15'---------1-----
    6: 15'--------1------
    7: 15'-------1-------
    8: 15'------1--------
    9: 15'-----1---------
   10: 15'----1----------
   11: 15'---1-----------
   12: 15'--1------------
   13: 15'-1-------------
   14: 15'1--------------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 6'0----0   ->     0 14'00000000000000
      1:     0 6'-----1   ->     0 14'00000000000000
      2:     0 6'1---10   ->     8 14'00000000000000
      3:     0 6'1---00   ->    14 14'00000000000000
      4:     1 6'-----1   ->     0 14'00000000000100
      5:     1 6'-----0   ->     9 14'00000000000100
      6:     2 6'-----1   ->     0 14'00001000000000
      7:     2 6'---1-0   ->     8 14'00001000000000
      8:     2 6'---0-0   ->    10 14'00001000000000
      9:     3 6'-----1   ->     0 14'10000000000000
     10:     3 6'--0--0   ->    11 14'10000000000000
     11:     3 6'--1--0   ->    14 14'10000000000000
     12:     4 6'-----1   ->     0 14'00000001000000
     13:     4 6'-----0   ->    12 14'00000001000000
     14:     5 6'-----1   ->     0 14'00000000001000
     15:     5 6'-----0   ->    13 14'00000000001000
     16:     6 6'-----1   ->     0 14'00000000000010
     17:     6 6'-----0   ->     8 14'00000000000010
     18:     7 6'-----1   ->     0 14'00000000010000
     19:     7 6'-----0   ->    14 14'00000000010000
     20:     8 6'0----0   ->     0 14'00000000100000
     21:     8 6'-----1   ->     0 14'00000000100000
     22:     8 6'10---0   ->     4 14'00000000100000
     23:     8 6'11---0   ->     8 14'00000000100000
     24:     9 6'-----1   ->     0 14'00010000000000
     25:     9 6'-----0   ->     5 14'00010000000000
     26:    10 6'-----1   ->     0 14'00000000000001
     27:    10 6'-----0   ->     6 14'00000000000001
     28:    11 6'-----1   ->     0 14'00100000000000
     29:    11 6'---0-0   ->     7 14'00100000000000
     30:    11 6'---1-0   ->    14 14'00100000000000
     31:    12 6'-----1   ->     0 14'01000000000000
     32:    12 6'--0--0   ->     2 14'01000000000000
     33:    12 6'--1--0   ->     8 14'01000000000000
     34:    13 6'-----1   ->     0 14'00000100000000
     35:    13 6'-----0   ->     3 14'00000100000000
     36:    14 6'0----0   ->     0 14'00000010000000
     37:    14 6'-----1   ->     0 14'00000010000000
     38:    14 6'10---0   ->     1 14'00000010000000
     39:    14 6'11---0   ->    14 14'00000010000000

-------------------------------------

19.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\xosera_main.copper.copper_ex_state$5836' from module `\xosera_upd'.
Mapping FSM `$fsm$\xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch$5843' from module `\xosera_upd'.
Mapping FSM `$fsm$\xosera_main.video_gen.video_pf_a.pf_fetch$5860' from module `\xosera_upd'.

19.12. Executing OPT pass (performing simple optimizations).

19.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.
<suppressed ~33 debug messages>

19.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
<suppressed ~126 debug messages>
Removed a total of 42 cells.

19.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xosera_upd..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~359 debug messages>

19.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xosera_upd.
Performed a total of 0 changes.

19.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
Removed a total of 0 cells.

19.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\xosera_main.\xrmem_arb.\tilemem.$procdff$5546 ($dff) from module xosera_upd (D = $flatten\xosera_main.\xrmem_arb.\tilemem.$memrd$\bram$./tilemem.sv:82$1224_DATA, Q = \xosera_main.xrmem_arb.tilemem.rd_data_o).
Adding EN signal on $flatten\xosera_main.\xrmem_arb.\tile2mem.$procdff$5582 ($dff) from module xosera_upd (D = $flatten\xosera_main.\xrmem_arb.\tile2mem.$memrd$\bram$./tilemem.sv:82$1212_DATA, Q = \xosera_main.xrmem_arb.tile2mem.rd_data_o).
Adding EN signal on $flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$procdff$5590 ($dff) from module xosera_upd (D = $flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$memrd$\bram$./colormem.sv:49$1190_DATA, Q = \xosera_main.xrmem_arb.opt_PF_B_COLOR.colormem2.rd_data_o).
Adding EN signal on $flatten\xosera_main.\xrmem_arb.\coppermem_o.$procdff$5586 ($dff) from module xosera_upd (D = $flatten\xosera_main.\xrmem_arb.\coppermem_o.$memrd$\bram$./coppermem.sv:53$1202_DATA, Q = \xosera_main.xrmem_arb.coppermem_o.rd_data_o).
Adding EN signal on $flatten\xosera_main.\xrmem_arb.\coppermem_e.$procdff$5586 ($dff) from module xosera_upd (D = $flatten\xosera_main.\xrmem_arb.\coppermem_e.$memrd$\bram$./coppermem.sv:53$1202_DATA, Q = \xosera_main.xrmem_arb.coppermem_e.rd_data_o).
Adding EN signal on $flatten\xosera_main.\xrmem_arb.\colormem.$procdff$5540 ($dff) from module xosera_upd (D = $flatten\xosera_main.\xrmem_arb.\colormem.$memrd$\bram$./colormem.sv:49$1238_DATA, Q = \xosera_main.xrmem_arb.colormem.rd_data_o).
Adding SRST signal on $flatten\xosera_main.\vram_arb.$procdff$5686 ($dff) from module xosera_upd (D = $flatten\xosera_main.\vram_arb.$3\blit_ack_next[0:0], Q = \xosera_main.vram_arb.blit_ack_o, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\vram_arb.$procdff$5685 ($dff) from module xosera_upd (D = $flatten\xosera_main.\vram_arb.$2\regs_ack_next[0:0], Q = \xosera_main.vram_arb.regs_ack_o, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5581 ($dff) from module xosera_upd (D = { $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1339_Y $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1358_Y }, Q = \xosera_main.video_gen.video_pf_a.pf_pixels, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6235 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1339_Y, Q = \xosera_main.video_gen.video_pf_a.pf_pixels [63:56]).
Adding EN signal on $auto$ff.cc:262:slice$6235 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1358_Y, Q = \xosera_main.video_gen.video_pf_a.pf_pixels [55:0]).
Adding SRST signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5580 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1370_Y, Q = \xosera_main.video_gen.video_pf_a.pf_pixels_buf, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6254 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1366_Y, Q = \xosera_main.video_gen.video_pf_a.pf_pixels_buf).
Adding SRST signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5579 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1378_Y, Q = \xosera_main.video_gen.video_pf_a.pf_pixels_buf_hrev, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6256 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1376_Y, Q = \xosera_main.video_gen.video_pf_a.pf_pixels_buf_hrev).
Adding SRST signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5578 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1394_Y, Q = \xosera_main.video_gen.video_pf_a.pf_pixels_buf_full, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5577 ($dff) from module xosera_upd (D = \xosera_main.video_gen.video_pf_a.pf_data_word3_next, Q = \xosera_main.video_gen.video_pf_a.pf_data_word3, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6261 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.video_pf_a.pf_data_word3_next, Q = \xosera_main.video_gen.video_pf_a.pf_data_word3).
Adding SRST signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5576 ($dff) from module xosera_upd (D = \xosera_main.video_gen.video_pf_a.pf_data_word2_next, Q = \xosera_main.video_gen.video_pf_a.pf_data_word2, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6269 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.video_pf_a.pf_data_word2_next, Q = \xosera_main.video_gen.video_pf_a.pf_data_word2).
Adding SRST signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5575 ($dff) from module xosera_upd (D = \xosera_main.video_gen.video_pf_a.pf_data_word1_next, Q = \xosera_main.video_gen.video_pf_a.pf_data_word1, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6273 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.video_pf_a.pf_data_word1_next, Q = \xosera_main.video_gen.video_pf_a.pf_data_word1).
Adding SRST signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5574 ($dff) from module xosera_upd (D = \xosera_main.video_gen.video_pf_a.pf_data_word0_next, Q = \xosera_main.video_gen.video_pf_a.pf_data_word0, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6277 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.video_pf_a.pf_data_word0_next, Q = \xosera_main.video_gen.video_pf_a.pf_data_word0).
Adding SRST signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5573 ($dff) from module xosera_upd (D = \xosera_main.video_gen.video_pf_a.pf_tile_attr_next, Q = \xosera_main.video_gen.video_pf_a.pf_tile_attr, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6281 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.video_pf_a.pf_tile_attr_next [15:11], Q = \xosera_main.video_gen.video_pf_a.pf_tile_attr [15:11]).
Adding EN signal on $auto$ff.cc:262:slice$6281 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.video_pf_a.pf_tile_attr_next [10:0], Q = \xosera_main.video_gen.video_pf_a.pf_tile_attr [10:0]).
Adding SRST signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5572 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$logic_not$./video_playfield.sv:221$389_Y, Q = \xosera_main.video_gen.video_pf_a.pf_words_ready, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5571 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1435_Y, Q = \xosera_main.video_gen.video_pf_a.pf_initial_buf, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6293 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1435_Y, Q = \xosera_main.video_gen.video_pf_a.pf_initial_buf).
Adding SRST signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5567 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1461_Y, Q = \xosera_main.video_gen.video_pf_a.pf_addr, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6297 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1461_Y, Q = \xosera_main.video_gen.video_pf_a.pf_addr).
Adding EN signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5565 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1484_Y, Q = \xosera_main.video_gen.video_pf_a.pf_line_start).
Adding EN signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5564 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1500_Y, Q = \xosera_main.video_gen.video_pf_a.pf_tile_y).
Adding EN signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5563 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1513_Y, Q = \xosera_main.video_gen.video_pf_a.pf_tile_x).
Adding SRST signal on $auto$ff.cc:262:slice$6327 ($dffe) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1511_Y, Q = \xosera_main.video_gen.video_pf_a.pf_tile_x, rval = 3'000).
Adding EN signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5562 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1523_Y, Q = \xosera_main.video_gen.video_pf_a.pf_v_frac_count).
Adding SRST signal on $auto$ff.cc:262:slice$6339 ($dffe) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1521_Y, Q = \xosera_main.video_gen.video_pf_a.pf_v_frac_count, rval = 3'000).
Adding EN signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5561 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1533_Y, Q = \xosera_main.video_gen.video_pf_a.pf_h_frac_count).
Adding SRST signal on $auto$ff.cc:262:slice$6347 ($dffe) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1531_Y, Q = \xosera_main.video_gen.video_pf_a.pf_h_frac_count, rval = 3'000).
Adding EN signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5560 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1548_Y, Q = \xosera_main.video_gen.video_pf_a.pf_v_count).
Adding EN signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5559 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1561_Y, Q = \xosera_main.video_gen.video_pf_a.pf_h_count).
Adding SRST signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5558 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$and$./video_playfield.sv:564$461_Y, Q = \xosera_main.video_gen.video_pf_a.mem_fetch_active, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5557 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1566_Y, Q = \xosera_main.video_gen.video_pf_a.scanout_end_hcount, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:262:slice$6366 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:501$446_Y, Q = \xosera_main.video_gen.video_pf_a.scanout_end_hcount).
Adding SRST signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5556 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1573_Y, Q = \xosera_main.video_gen.video_pf_a.scanout_start_hcount, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:262:slice$6368 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1573_Y, Q = \xosera_main.video_gen.video_pf_a.scanout_start_hcount).
Adding SRST signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5555 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1578_Y, Q = \xosera_main.video_gen.video_pf_a.scanout, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6372 ($sdff) from module xosera_upd (D = 1'1, Q = \xosera_main.video_gen.video_pf_a.scanout).
Adding SRST signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5554 ($dff) from module xosera_upd (D = \xosera_main.video_gen.video_pf_a.fetch_addr_next [12:0], Q = \xosera_main.video_gen.video_pf_a.tilemem_addr_o, rval = 13'0000000000000).
Adding SRST signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5553 ($dff) from module xosera_upd (D = \xosera_main.video_gen.video_pf_a.tilemem_sel_next, Q = \xosera_main.video_gen.video_pf_a.tilemem_sel_o, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5552 ($dff) from module xosera_upd (D = \xosera_main.video_gen.video_pf_a.fetch_addr_next, Q = \xosera_main.video_gen.video_pf_a.vram_addr_o, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6378 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.video_pf_a.fetch_addr_next [15:13], Q = \xosera_main.video_gen.video_pf_a.vram_addr_o [15:13]).
Adding SRST signal on $flatten\xosera_main.\video_gen.\video_pf_a.$procdff$5551 ($dff) from module xosera_upd (D = \xosera_main.video_gen.video_pf_a.vram_sel_next, Q = \xosera_main.video_gen.video_pf_a.vram_sel_o, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5581 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1358_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_pixels [55:0], rval = 56'00000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5581 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1337_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_pixels [63:56], rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$6413 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1337_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_pixels [63:56]).
Adding EN signal on $auto$ff.cc:262:slice$6412 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1358_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_pixels [55:0]).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5580 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1370_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_pixels_buf, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6434 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1366_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_pixels_buf).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5579 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1378_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_pixels_buf_hrev, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6436 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1376_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_pixels_buf_hrev).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5578 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1394_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_pixels_buf_full, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5577 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1403_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_data_word3, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6441 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_data_word3_next, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_data_word3).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5576 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1408_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_data_word2, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6451 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_data_word2_next, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_data_word2).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5575 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1413_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_data_word1, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6459 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_data_word1_next, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_data_word1).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5574 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1418_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_data_word0, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6467 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_data_word0_next, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_data_word0).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5573 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1423_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_tile_attr, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6475 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_tile_attr_next [15:11], Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_tile_attr [15:11]).
Adding EN signal on $auto$ff.cc:262:slice$6475 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_tile_attr_next [10:0], Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_tile_attr [10:0]).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5572 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1428_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_words_ready, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6490 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_words_ready_next, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_words_ready).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5571 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1435_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_initial_buf, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6492 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1435_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_initial_buf).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5570 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1440_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.fetch_addr, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6500 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.opt_PF_B.video_pf_b.fetch_addr_next, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.fetch_addr).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5567 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1461_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_addr, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6502 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1461_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_addr).
Adding EN signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5565 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1484_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_line_start).
Adding EN signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5564 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1500_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_tile_y).
Adding EN signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5563 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1513_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_tile_x).
Adding SRST signal on $auto$ff.cc:262:slice$6534 ($dffe) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1511_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_tile_x, rval = 3'000).
Adding EN signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5562 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1523_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_v_frac_count).
Adding SRST signal on $auto$ff.cc:262:slice$6546 ($dffe) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1521_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_v_frac_count, rval = 3'000).
Adding EN signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5561 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1533_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_h_frac_count).
Adding SRST signal on $auto$ff.cc:262:slice$6554 ($dffe) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1531_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_h_frac_count, rval = 3'000).
Adding EN signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5560 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1548_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_v_count).
Adding EN signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5559 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1561_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_h_count).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5558 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$and$./video_playfield.sv:564$461_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.mem_fetch_active, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5557 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1566_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.scanout_end_hcount, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:262:slice$6573 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:501$446_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.scanout_end_hcount).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5556 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1573_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.scanout_start_hcount, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:262:slice$6575 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1573_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.scanout_start_hcount).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5555 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1578_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.scanout, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6579 ($sdff) from module xosera_upd (D = 1'1, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.scanout).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5554 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1587_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.tilemem_addr_o, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6583 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.opt_PF_B.video_pf_b.fetch_addr_next [12:0], Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.tilemem_addr_o).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5553 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1592_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.tilemem_sel_o, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6585 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.opt_PF_B.video_pf_b.tilemem_sel_next, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.tilemem_sel_o).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5552 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1597_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.vram_addr_o, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6587 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.opt_PF_B.video_pf_b.fetch_addr_next, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.vram_addr_o).
Adding SRST signal on $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procdff$5551 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1602_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.vram_sel_o, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6589 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.opt_PF_B.video_pf_b.vram_sel_next, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.vram_sel_o).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5652 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2771_Y, Q = \xosera_main.video_gen.line_set_addr, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6591 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i, Q = \xosera_main.video_gen.line_set_addr).
Adding EN signal on $flatten\xosera_main.\video_gen.$procdff$5651 ($dff) from module xosera_upd (D = 1'0, Q = \xosera_main.video_gen.pb_gfx_ctrl_set).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$6595 ($dffe) from module xosera_upd.
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5650 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2782_Y, Q = \xosera_main.video_gen.pb_line_start_set, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6596 ($sdff) from module xosera_upd (D = 1'1, Q = \xosera_main.video_gen.pb_line_start_set).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5649 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2791_Y, Q = \xosera_main.video_gen.pb_fine_vscroll, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$6600 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [5:0], Q = \xosera_main.video_gen.pb_fine_vscroll).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5648 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2800_Y, Q = \xosera_main.video_gen.pb_fine_hscroll, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$6604 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [12:8], Q = \xosera_main.video_gen.pb_fine_hscroll).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5647 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2807_Y, Q = \xosera_main.video_gen.pb_v_frac_repeat, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$6608 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [2:0], Q = \xosera_main.video_gen.pb_v_frac_repeat).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5646 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2814_Y, Q = \xosera_main.video_gen.pb_h_frac_repeat, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$6612 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [6:4], Q = \xosera_main.video_gen.pb_h_frac_repeat).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5645 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2827_Y, Q = \xosera_main.video_gen.pb_v_repeat, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$6616 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [1:0], Q = \xosera_main.video_gen.pb_v_repeat).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5644 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2840_Y, Q = \xosera_main.video_gen.pb_h_repeat, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$6620 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [3:2], Q = \xosera_main.video_gen.pb_h_repeat).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5643 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2852_Y, Q = \xosera_main.video_gen.pb_tile_height, rval = 4'1111).
Adding EN signal on $auto$ff.cc:262:slice$6624 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [3:0], Q = \xosera_main.video_gen.pb_tile_height).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5642 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2864_Y, Q = \xosera_main.video_gen.pb_tile_in_vram, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6628 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [8], Q = \xosera_main.video_gen.pb_tile_in_vram).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5641 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2876_Y, Q = \xosera_main.video_gen.pb_disp_in_tile, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6632 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [9], Q = \xosera_main.video_gen.pb_disp_in_tile).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5640 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2888_Y, Q = \xosera_main.video_gen.pb_tile_bank, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$6636 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [15:10], Q = \xosera_main.video_gen.pb_tile_bank).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5639 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2901_Y, Q = \xosera_main.video_gen.pb_bitmap, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6640 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [6], Q = \xosera_main.video_gen.pb_bitmap).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5638 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2914_Y, Q = \xosera_main.video_gen.pb_bpp, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$6644 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [5:4], Q = \xosera_main.video_gen.pb_bpp).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5637 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2927_Y, Q = \xosera_main.video_gen.pb_colorbase, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$6648 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [15:8], Q = \xosera_main.video_gen.pb_colorbase).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5636 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2937_Y, Q = \xosera_main.video_gen.pb_line_len, rval = 16'0000000001010000).
Adding EN signal on $auto$ff.cc:262:slice$6652 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i, Q = \xosera_main.video_gen.pb_line_len).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5635 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2948_Y, Q = \xosera_main.video_gen.pb_start_addr, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6656 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i, Q = \xosera_main.video_gen.pb_start_addr).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5634 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2961_Y, Q = \xosera_main.video_gen.pb_blank, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$6660 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [7], Q = \xosera_main.video_gen.pb_blank).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5633 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2742_Y, Q = \xosera_main.video_gen.pa_gfx_ctrl_set, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5632 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2757_Y, Q = \xosera_main.video_gen.pa_line_start_set, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5631 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2977_Y, Q = \xosera_main.video_gen.pa_fine_vscroll, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$6674 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [5:0], Q = \xosera_main.video_gen.pa_fine_vscroll).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5630 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2993_Y, Q = \xosera_main.video_gen.pa_fine_hscroll, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$6678 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [12:8], Q = \xosera_main.video_gen.pa_fine_hscroll).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5629 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$3007_Y, Q = \xosera_main.video_gen.pa_v_frac_repeat, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$6682 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [2:0], Q = \xosera_main.video_gen.pa_v_frac_repeat).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5628 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$3021_Y, Q = \xosera_main.video_gen.pa_h_frac_repeat, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$6686 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [6:4], Q = \xosera_main.video_gen.pa_h_frac_repeat).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5627 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$3041_Y, Q = \xosera_main.video_gen.pa_v_repeat, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$6690 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [1:0], Q = \xosera_main.video_gen.pa_v_repeat).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5626 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$3061_Y, Q = \xosera_main.video_gen.pa_h_repeat, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$6694 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [3:2], Q = \xosera_main.video_gen.pa_h_repeat).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5625 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$3080_Y, Q = \xosera_main.video_gen.pa_tile_height, rval = 4'1111).
Adding EN signal on $auto$ff.cc:262:slice$6698 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [3:0], Q = \xosera_main.video_gen.pa_tile_height).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5624 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$3099_Y, Q = \xosera_main.video_gen.pa_tile_in_vram, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6702 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [8], Q = \xosera_main.video_gen.pa_tile_in_vram).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5623 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$3118_Y, Q = \xosera_main.video_gen.pa_disp_in_tile, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6706 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [9], Q = \xosera_main.video_gen.pa_disp_in_tile).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5622 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$3137_Y, Q = \xosera_main.video_gen.pa_tile_bank, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$6710 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [15:10], Q = \xosera_main.video_gen.pa_tile_bank).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5621 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$3157_Y, Q = \xosera_main.video_gen.pa_bitmap, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6714 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [6], Q = \xosera_main.video_gen.pa_bitmap).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5620 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$3177_Y, Q = \xosera_main.video_gen.pa_bpp, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$6718 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [5:4], Q = \xosera_main.video_gen.pa_bpp).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5619 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$3197_Y, Q = \xosera_main.video_gen.pa_colorbase, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$6722 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [15:8], Q = \xosera_main.video_gen.pa_colorbase).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5618 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$3214_Y, Q = \xosera_main.video_gen.pa_line_len, rval = 16'0000000001010000).
Adding EN signal on $auto$ff.cc:262:slice$6726 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i, Q = \xosera_main.video_gen.pa_line_len).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5617 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$3232_Y, Q = \xosera_main.video_gen.pa_start_addr, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6730 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i, Q = \xosera_main.video_gen.pa_start_addr).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5616 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$3252_Y, Q = \xosera_main.video_gen.pa_blank, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$6734 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [7], Q = \xosera_main.video_gen.pa_blank).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5615 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$3273_Y, Q = \xosera_main.video_gen.vid_right, rval = 10'1010000000).
Adding EN signal on $auto$ff.cc:262:slice$6738 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [9:0], Q = \xosera_main.video_gen.vid_right).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5614 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$3295_Y, Q = \xosera_main.video_gen.vid_left, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:262:slice$6742 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [9:0], Q = \xosera_main.video_gen.vid_left).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5613 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$3323_Y, Q = \xosera_main.video_gen.border_color, rval = 8'00001000).
Adding EN signal on $auto$ff.cc:262:slice$6746 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [15:8], Q = \xosera_main.video_gen.border_color).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5612 ($dff) from module xosera_upd (D = { $flatten\xosera_main.\video_gen.$procmux$2724_Y $flatten\xosera_main.\video_gen.$procmux$2697_Y }, Q = { \xosera_main.video_gen.copp_reg_data_o [15] \xosera_main.video_gen.copp_reg_data_o [9:0] }, rval = 11'00000000000).
Adding EN signal on $flatten\xosera_main.\video_gen.$procdff$5612 ($dff) from module xosera_upd (D = 5'00000, Q = \xosera_main.video_gen.copp_reg_data_o [14:10]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$6752 ($dffe) from module xosera_upd.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$6752 ($dffe) from module xosera_upd.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$6752 ($dffe) from module xosera_upd.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$6752 ($dffe) from module xosera_upd.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$6752 ($dffe) from module xosera_upd.
Adding EN signal on $auto$ff.cc:262:slice$6750 ($sdff) from module xosera_upd (D = { \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [15] \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [9:0] }, Q = { \xosera_main.video_gen.copp_reg_data_o [15] \xosera_main.video_gen.copp_reg_data_o [9:0] }).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5611 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$3348_Y, Q = \xosera_main.video_gen.copp_reg_wr_o, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5610 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2642_Y, Q = \xosera_main.video_gen.intr_signal_o [3], rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5610 ($dff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [2:0], Q = \xosera_main.video_gen.intr_signal_o [2:0], rval = 3'000).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5608 ($dff) from module xosera_upd (D = \xosera_main.video_gen.v_count_next, Q = \xosera_main.video_gen.v_count, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:262:slice$6769 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$2\v_count_next[9:0], Q = \xosera_main.video_gen.v_count).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5607 ($dff) from module xosera_upd (D = \xosera_main.video_gen.v_state_next, Q = \xosera_main.video_gen.v_state, rval = 2'00).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5606 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$add$./video_gen.sv:504$1155_Y, Q = \xosera_main.video_gen.h_count, rval = 10'0000000000).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5605 ($dff) from module xosera_upd (D = \xosera_main.video_gen.h_state_next, Q = \xosera_main.video_gen.h_state, rval = 2'00).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5604 ($dff) from module xosera_upd (D = \xosera_main.video_gen.pb_color_index, Q = \xosera_main.video_gen.colorB_index_o, rval = 8'00000000).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5603 ($dff) from module xosera_upd (D = \xosera_main.video_gen.pa_color_index, Q = \xosera_main.video_gen.colorA_index_o, rval = 8'00000000).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5602 ($dff) from module xosera_upd (D = \xosera_main.video_gen.dv_display_ena, Q = \xosera_main.video_gen.dv_de_o, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5601 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$ternary$./video_gen.sv:575$1169_Y, Q = \xosera_main.video_gen.hsync_o, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5600 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$ternary$./video_gen.sv:576$1170_Y, Q = \xosera_main.video_gen.vsync_o, rval = 1'0).
Adding EN signal on $flatten\xosera_main.\video_gen.$procdff$5599 ($dff) from module xosera_upd (D = \xosera_main.video_gen.tilemem_data_i, Q = \xosera_main.video_gen.opt_PF_B.pb_tilemem_rd_data).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5598 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2540_Y, Q = \xosera_main.video_gen.opt_PF_B.pb_tilemem_rd_save, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6782 ($sdff) from module xosera_upd (D = 1'1, Q = \xosera_main.video_gen.opt_PF_B.pb_tilemem_rd_save).
Adding EN signal on $flatten\xosera_main.\video_gen.$procdff$5596 ($dff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.blit_data_i, Q = \xosera_main.video_gen.opt_PF_B.pb_vram_rd_data).
Adding SRST signal on $flatten\xosera_main.\video_gen.$procdff$5595 ($dff) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2546_Y, Q = \xosera_main.video_gen.opt_PF_B.pb_vram_rd_save, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6785 ($sdff) from module xosera_upd (D = 1'1, Q = \xosera_main.video_gen.opt_PF_B.pb_vram_rd_save).
Adding EN signal on $flatten\xosera_main.\reg_interface.\bus.$procdff$5715 ($dff) from module xosera_upd (D = { \gpio_28 \gpio_38 \gpio_42 \gpio_36 \gpio_43 \gpio_34 \gpio_37 \gpio_31 }, Q = \xosera_main.reg_interface.bus.data_r[2]).
Adding EN signal on $flatten\xosera_main.\reg_interface.\bus.$procdff$5714 ($dff) from module xosera_upd (D = \xosera_main.reg_interface.bus.data_r[2], Q = \xosera_main.reg_interface.bus.data_r[1]).
Adding EN signal on $flatten\xosera_main.\reg_interface.\bus.$procdff$5713 ($dff) from module xosera_upd (D = \xosera_main.reg_interface.bus.data_r[1], Q = \xosera_main.reg_interface.bus.data_r[0]).
Adding EN signal on $flatten\xosera_main.\reg_interface.\bus.$procdff$5712 ($dff) from module xosera_upd (D = { \gpio_27 \gpio_26 \gpio_25 \gpio_23 }, Q = \xosera_main.reg_interface.bus.reg_num_r[1]).
Adding EN signal on $flatten\xosera_main.\reg_interface.\bus.$procdff$5711 ($dff) from module xosera_upd (D = \xosera_main.reg_interface.bus.reg_num_r[1], Q = \xosera_main.reg_interface.bus.reg_num_r[0]).
Adding EN signal on $flatten\xosera_main.\reg_interface.\bus.$procdff$5710 ($dff) from module xosera_upd (D = { \led_blue \xosera_main.reg_interface.bus.bytesel_r [1] }, Q = \xosera_main.reg_interface.bus.bytesel_r).
Adding EN signal on $flatten\xosera_main.\reg_interface.\bus.$procdff$5709 ($dff) from module xosera_upd (D = { \led_green \xosera_main.reg_interface.bus.read_r [1] }, Q = \xosera_main.reg_interface.bus.read_r).
Adding SRST signal on $flatten\xosera_main.\reg_interface.\bus.$procdff$5708 ($dff) from module xosera_upd (D = { $flatten\xosera_main.\reg_interface.\bus.$ternary$./bus_interface.sv:105$147_Y \xosera_main.reg_interface.bus.cs_r [4:1] }, Q = \xosera_main.reg_interface.bus.cs_r, rval = 5'00000).
Adding SRST signal on $flatten\xosera_main.\reg_interface.\bus.$procdff$5707 ($dff) from module xosera_upd (D = \xosera_main.reg_interface.bus.data_r[0], Q = \xosera_main.reg_interface.bus.bytedata_o, rval = 8'00000000).
Adding SRST signal on $flatten\xosera_main.\reg_interface.\bus.$procdff$5706 ($dff) from module xosera_upd (D = \xosera_main.reg_interface.bus.bytesel_r [0], Q = \xosera_main.reg_interface.bus.bytesel_o, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\reg_interface.\bus.$procdff$5705 ($dff) from module xosera_upd (D = \xosera_main.reg_interface.bus.reg_num_r[0], Q = \xosera_main.reg_interface.bus.reg_num_o, rval = 4'0000).
Adding SRST signal on $flatten\xosera_main.\reg_interface.\bus.$procdff$5704 ($dff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.\bus.$procmux$4452_Y, Q = \xosera_main.reg_interface.bus.read_strobe_o, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\reg_interface.\bus.$procdff$5703 ($dff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.\bus.$procmux$4460_Y, Q = \xosera_main.reg_interface.bus.write_strobe_o, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5684 ($dff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:177$216_Y, Q = \xosera_main.reg_interface.reg_timer_frac, rval = 12'000000000000).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5683 ($dff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.$procmux$3884_Y, Q = \xosera_main.reg_interface.reg_timer, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6811 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:180$218_Y [15:0], Q = \xosera_main.reg_interface.reg_timer).
Adding EN signal on $flatten\xosera_main.\reg_interface.$procdff$5682 ($dff) from module xosera_upd (D = \xosera_main.reg_interface.LFSR [16:1], Q = \xosera_main.reg_interface.reg_LFSR).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5681 ($dff) from module xosera_upd (D = { \xosera_main.reg_interface.LFSR [17:0] $flatten\xosera_main.\reg_interface.$xnor$./reg_interface.sv:191$222_Y }, Q = \xosera_main.reg_interface.LFSR, rval = 19'0000000000000000001).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5680 ($dff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.$procmux$3494_Y, Q = \xosera_main.reg_interface.timer_latch_val, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$6819 ($sdff) from module xosera_upd (D = \xosera_main.reg_interface.reg_timer [7:0], Q = \xosera_main.reg_interface.timer_latch_val).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5679 ($dff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.$procmux$3502_Y, Q = \xosera_main.reg_interface.reg_data_even, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$6821 ($sdff) from module xosera_upd (D = \xosera_main.reg_interface.bus.bytedata_o, Q = \xosera_main.reg_interface.reg_data_even).
Adding EN signal on $flatten\xosera_main.\reg_interface.$procdff$5678 ($dff) from module xosera_upd (D = \xosera_main.reg_interface.bus.bytedata_o, Q = \xosera_main.reg_interface.reg_xr_data_even).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5677 ($dff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.$procmux$3853_Y, Q = \xosera_main.reg_interface.intr_mask, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$6830 ($sdff) from module xosera_upd (D = \xosera_main.reg_interface.bus.bytedata_o [3:0], Q = \xosera_main.reg_interface.intr_mask).
Adding EN signal on $flatten\xosera_main.\reg_interface.$procdff$5676 ($dff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.$procmux$3549_Y, Q = \xosera_main.reg_interface.vram_rw_wr).
Adding EN signal on $flatten\xosera_main.\reg_interface.$procdff$5675 ($dff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.$procmux$3563_Y, Q = \xosera_main.reg_interface.vram_rw_rd).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5674 ($dff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.$procmux$3578_Y, Q = \xosera_main.reg_interface.vram_rd, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5673 ($dff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.$procmux$3600_Y, Q = \xosera_main.reg_interface.xr_rd, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5672 ($dff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.$procmux$3613_Y, Q = \xosera_main.reg_interface.reg_rw_rd_inc, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6838 ($sdff) from module xosera_upd (D = \xosera_main.reg_interface.bus.bytedata_o [4], Q = \xosera_main.reg_interface.reg_rw_rd_inc).
Adding EN signal on $flatten\xosera_main.\reg_interface.$procdff$5671 ($dff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.blit_data_i, Q = \xosera_main.reg_interface.reg_rw_data).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5670 ($dff) from module xosera_upd (D = { $flatten\xosera_main.\reg_interface.$procmux$3366_Y $flatten\xosera_main.\reg_interface.$procmux$3382_Y }, Q = \xosera_main.reg_interface.reg_rw_addr, rval = 16'0000000000000000).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5669 ($dff) from module xosera_upd (D = { $flatten\xosera_main.\reg_interface.$procmux$3629_Y $flatten\xosera_main.\reg_interface.$procmux$3391_Y }, Q = \xosera_main.reg_interface.reg_rw_incr, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6848 ($sdff) from module xosera_upd (D = \xosera_main.reg_interface.bus.bytedata_o, Q = \xosera_main.reg_interface.reg_rw_incr [15:8]).
Adding EN signal on $auto$ff.cc:262:slice$6848 ($sdff) from module xosera_upd (D = \xosera_main.reg_interface.bus.bytedata_o, Q = \xosera_main.reg_interface.reg_rw_incr [7:0]).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5668 ($dff) from module xosera_upd (D = { $flatten\xosera_main.\reg_interface.$procmux$3540_Y $flatten\xosera_main.\reg_interface.$procmux$3410_Y }, Q = \xosera_main.reg_interface.reg_wr_addr, rval = 16'0000000000000000).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5667 ($dff) from module xosera_upd (D = { $flatten\xosera_main.\reg_interface.$procmux$3658_Y $flatten\xosera_main.\reg_interface.$procmux$3426_Y }, Q = \xosera_main.reg_interface.reg_wr_incr, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6856 ($sdff) from module xosera_upd (D = \xosera_main.reg_interface.bus.bytedata_o, Q = \xosera_main.reg_interface.reg_wr_incr [15:8]).
Adding EN signal on $auto$ff.cc:262:slice$6856 ($sdff) from module xosera_upd (D = \xosera_main.reg_interface.bus.bytedata_o, Q = \xosera_main.reg_interface.reg_wr_incr [7:0]).
Adding EN signal on $flatten\xosera_main.\reg_interface.$procdff$5666 ($dff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.blit_data_i, Q = \xosera_main.reg_interface.reg_rd_data).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5665 ($dff) from module xosera_upd (D = { $flatten\xosera_main.\reg_interface.$procmux$3679_Y $flatten\xosera_main.\reg_interface.$procmux$3447_Y }, Q = \xosera_main.reg_interface.reg_rd_addr, rval = 16'0000000000000000).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5664 ($dff) from module xosera_upd (D = { $flatten\xosera_main.\reg_interface.$procmux$3704_Y $flatten\xosera_main.\reg_interface.$procmux$3465_Y }, Q = \xosera_main.reg_interface.reg_rd_incr, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6869 ($sdff) from module xosera_upd (D = \xosera_main.reg_interface.bus.bytedata_o, Q = \xosera_main.reg_interface.reg_rd_incr [15:8]).
Adding EN signal on $auto$ff.cc:262:slice$6869 ($sdff) from module xosera_upd (D = \xosera_main.reg_interface.bus.bytedata_o, Q = \xosera_main.reg_interface.reg_rd_incr [7:0]).
Adding EN signal on $flatten\xosera_main.\reg_interface.$procdff$5663 ($dff) from module xosera_upd (D = \xosera_main.reg_interface.xr_data_i, Q = \xosera_main.reg_interface.reg_xr_data).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5662 ($dff) from module xosera_upd (D = { $flatten\xosera_main.\reg_interface.$procmux$3728_Y $flatten\xosera_main.\reg_interface.$procmux$3489_Y }, Q = \xosera_main.reg_interface.reg_xr_addr, rval = 16'0000000000000000).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5661 ($dff) from module xosera_upd (D = \xosera_main.reg_interface.bus.bytedata_o [3:0], Q = \xosera_main.reg_interface.intr_clear_o, rval = 4'0000).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5660 ($dff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.$procmux$3756_Y, Q = \xosera_main.reg_interface.regs_data_o, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6889 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.$procmux$3752_Y, Q = \xosera_main.reg_interface.regs_data_o).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5659 ($dff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.$procmux$3774_Y, Q = \xosera_main.reg_interface.regs_addr_o, rval = 16'0000000000000000).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5658 ($dff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.$procmux$3787_Y, Q = \xosera_main.reg_interface.regs_wrmask_o, rval = 4'1111).
Adding EN signal on $auto$ff.cc:262:slice$6896 ($sdff) from module xosera_upd (D = \xosera_main.reg_interface.bus.bytedata_o [3:0], Q = \xosera_main.reg_interface.regs_wrmask_o).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5657 ($dff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.$procmux$3800_Y, Q = \xosera_main.reg_interface.regs_wr_o, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5656 ($dff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.$procmux$3822_Y, Q = \xosera_main.reg_interface.regs_xr_sel_o, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5655 ($dff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.$procmux$3840_Y, Q = \xosera_main.reg_interface.regs_vram_sel_o, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5654 ($dff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.$procmux$3866_Y, Q = \xosera_main.reg_interface.boot_select_o, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$6903 ($sdff) from module xosera_upd (D = \xosera_main.reg_interface.bus.bytedata_o [6:5], Q = \xosera_main.reg_interface.boot_select_o).
Adding SRST signal on $flatten\xosera_main.\reg_interface.$procdff$5653 ($dff) from module xosera_upd (D = $flatten\xosera_main.\reg_interface.$procmux$3642_Y, Q = \xosera_main.reg_interface.reconfig_o, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6907 ($sdff) from module xosera_upd (D = \xosera_main.reg_interface.bus.bytedata_o [7], Q = \xosera_main.reg_interface.reconfig_o).
Adding SRST signal on $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$procdff$5772 ($dff) from module xosera_upd (D = \xosera_main.opt_PF_B_BLEND.video_blend.blend_result, Q = \xosera_main.opt_PF_B_BLEND.video_blend.blend_rgb_o, rval = 12'000000000000).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5768 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5202_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_blit_queued, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5767 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5209_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_words, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6913 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_words).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5766 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5217_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_lines, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6917 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_lines).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5765 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5226_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_dst_D, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6921 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_dst_D).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5764 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5239_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_mod_D, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6925 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_mod_D).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5763 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5249_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_val_C, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6929 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_val_C).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5762 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5263_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_mod_C, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6933 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_mod_C).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5761 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5274_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_src_B, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6937 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_src_B).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5760 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5289_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_mod_B, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6941 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_mod_B).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5759 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5301_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_src_A, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6945 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_src_A).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5758 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5317_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_mod_A, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6949 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_mod_A).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5757 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5334_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_shift_l_mask, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$6953 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [11:8], Q = \xosera_main.opt_EN_BLIT.blitter.xreg_shift_l_mask).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5756 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5351_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_shift_f_mask, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$6957 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [15:12], Q = \xosera_main.opt_EN_BLIT.blitter.xreg_shift_f_mask).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5755 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5368_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_shift_amount, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$6961 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [1:0], Q = \xosera_main.opt_EN_BLIT.blitter.xreg_shift_amount).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5754 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5386_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_transp_T, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$6965 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [15:8], Q = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_transp_T).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5753 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5404_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_transp_8b, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6969 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [5], Q = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_transp_8b).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5752 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5422_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_decrement, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6973 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [4], Q = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_decrement).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5751 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5440_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_C_use_B, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6977 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [3], Q = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_C_use_B).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5750 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5458_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_B_not, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6981 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [2], Q = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_B_not).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5749 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5476_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_B_const, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6985 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [1], Q = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_B_const).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5748 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5494_Y, Q = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_A_const, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6989 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_data_i [0], Q = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_A_const).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5747 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5018_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_addr, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6993 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.blit_addr_next, Q = \xosera_main.opt_EN_BLIT.blitter.blit_addr).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5746 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5023_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_wr, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6999 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.blit_wr_next, Q = \xosera_main.opt_EN_BLIT.blitter.blit_wr).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5745 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5028_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_vram_sel, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$7001 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.blit_vram_sel_next, Q = \xosera_main.opt_EN_BLIT.blitter.blit_vram_sel).
Adding EN signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5744 ($dff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.blit_done_intr_next, Q = \xosera_main.opt_EN_BLIT.blitter.blit_done_intr).
Adding SRST signal on $auto$ff.cc:262:slice$7003 ($dffe) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$2\blit_done_intr_next[0:0], Q = \xosera_main.opt_EN_BLIT.blitter.blit_done_intr, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5743 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5038_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_f_mask, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$7009 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.blit_f_mask_next, Q = \xosera_main.opt_EN_BLIT.blitter.blit_f_mask).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5742 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5046_Y, Q = \xosera_main.opt_EN_BLIT.blitter.val_B_prime, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7015 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5044_Y, Q = \xosera_main.opt_EN_BLIT.blitter.val_B_prime).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5741 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5051_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_state, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$7017 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.blit_state_next, Q = \xosera_main.opt_EN_BLIT.blitter.blit_state).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5740 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5058_Y, Q = \xosera_main.opt_EN_BLIT.blitter.val_B, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7019 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5058_Y, Q = \xosera_main.opt_EN_BLIT.blitter.val_B).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5739 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5065_Y, Q = \xosera_main.opt_EN_BLIT.blitter.val_A, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7023 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5065_Y, Q = \xosera_main.opt_EN_BLIT.blitter.val_A).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5738 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5070_Y, Q = \xosera_main.opt_EN_BLIT.blitter.last_B, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7031 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.blit_data_i, Q = \xosera_main.opt_EN_BLIT.blitter.last_B).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5737 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5075_Y, Q = \xosera_main.opt_EN_BLIT.blitter.last_A, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7035 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.blit_data_i, Q = \xosera_main.opt_EN_BLIT.blitter.last_A).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5736 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5080_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_count, rval = 17'00000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7039 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.blit_count_next, Q = \xosera_main.opt_EN_BLIT.blitter.blit_count).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5735 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5085_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_words, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7045 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_words, Q = \xosera_main.opt_EN_BLIT.blitter.blit_words).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5734 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5092_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_lines, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7047 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5092_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_lines).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5733 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5099_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_dst_D, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7055 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5099_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_dst_D).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5732 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5109_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_val_C, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7063 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5109_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_val_C).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5731 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5116_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_src_B, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7071 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5116_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_src_B).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5730 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5123_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_src_A, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7079 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5123_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_src_A).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5729 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5128_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_mod_D, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7087 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_mod_D, Q = \xosera_main.opt_EN_BLIT.blitter.blit_mod_D).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5728 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5133_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_mod_C, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7089 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_mod_C, Q = \xosera_main.opt_EN_BLIT.blitter.blit_mod_C).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5727 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5138_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_mod_B, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7091 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_mod_B, Q = \xosera_main.opt_EN_BLIT.blitter.blit_mod_B).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5726 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5143_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_mod_A, rval = 16'0000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$7093 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_mod_A, Q = \xosera_main.opt_EN_BLIT.blitter.blit_mod_A).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5725 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5148_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_shift_l_mask, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$7095 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_shift_l_mask, Q = \xosera_main.opt_EN_BLIT.blitter.blit_shift_l_mask).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5724 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5153_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_shift_f_mask, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$7097 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_shift_f_mask, Q = \xosera_main.opt_EN_BLIT.blitter.blit_shift_f_mask).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5723 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5158_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_shift_amount, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$7099 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_shift_amount, Q = \xosera_main.opt_EN_BLIT.blitter.blit_shift_amount).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5722 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5163_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_ctrl_transp_T, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$7101 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_transp_T, Q = \xosera_main.opt_EN_BLIT.blitter.blit_ctrl_transp_T).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5721 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5168_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_ctrl_transp_8b, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$7103 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_transp_8b, Q = \xosera_main.opt_EN_BLIT.blitter.blit_ctrl_transp_8b).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5720 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5173_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_ctrl_decrement, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$7105 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_decrement, Q = \xosera_main.opt_EN_BLIT.blitter.blit_ctrl_decrement).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5719 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5178_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_ctrl_C_use_B, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$7107 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_C_use_B, Q = \xosera_main.opt_EN_BLIT.blitter.blit_ctrl_C_use_B).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5718 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5183_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_ctrl_B_not, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$7109 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_B_not, Q = \xosera_main.opt_EN_BLIT.blitter.blit_ctrl_B_not).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5717 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5188_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_ctrl_B_const, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$7111 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_B_const, Q = \xosera_main.opt_EN_BLIT.blitter.blit_ctrl_B_const).
Adding SRST signal on $flatten\xosera_main.\opt_EN_BLIT.blitter.$procdff$5716 ($dff) from module xosera_upd (D = $flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5193_Y, Q = \xosera_main.opt_EN_BLIT.blitter.blit_ctrl_A_const, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$7113 ($sdff) from module xosera_upd (D = \xosera_main.opt_EN_BLIT.blitter.xreg_ctrl_A_const, Q = \xosera_main.opt_EN_BLIT.blitter.blit_ctrl_A_const).
Adding EN signal on $flatten\xosera_main.\copper.$procdff$5699 ($dff) from module xosera_upd (D = $flatten\xosera_main.\copper.$add$./copper.sv:316$167_Y [9:0], Q = \xosera_main.copper.copper_pc_skip).
Adding EN signal on $flatten\xosera_main.\copper.$procdff$5698 ($dff) from module xosera_upd (D = $flatten\xosera_main.\copper.$ge$./copper.sv:334$169_Y, Q = \xosera_main.copper.h_reached).
Adding EN signal on $flatten\xosera_main.\copper.$procdff$5697 ($dff) from module xosera_upd (D = $flatten\xosera_main.\copper.$ge$./copper.sv:333$168_Y, Q = \xosera_main.copper.v_reached).
Adding SRST signal on $flatten\xosera_main.\copper.$procdff$5696 ($dff) from module xosera_upd (D = $flatten\xosera_main.\copper.$procmux$4129_Y, Q = \xosera_main.copper.xr_wr_en, rval = 1'0).
Adding EN signal on $flatten\xosera_main.\copper.$procdff$5695 ($dff) from module xosera_upd (D = \xosera_main.copper.r_insn [23:16], Q = \xosera_main.copper.ram_wr_addr_out [7:0]).
Adding EN signal on $flatten\xosera_main.\copper.$procdff$5695 ($dff) from module xosera_upd (D = $flatten\xosera_main.\copper.$procmux$4050_Y, Q = \xosera_main.copper.ram_wr_addr_out [15:13]).
Adding EN signal on $flatten\xosera_main.\copper.$procdff$5695 ($dff) from module xosera_upd (D = $flatten\xosera_main.\copper.$procmux$4064_Y, Q = \xosera_main.copper.ram_wr_addr_out [12:10]).
Adding EN signal on $flatten\xosera_main.\copper.$procdff$5695 ($dff) from module xosera_upd (D = $flatten\xosera_main.\copper.$procmux$4036_Y, Q = \xosera_main.copper.ram_wr_addr_out [8]).
Adding EN signal on $flatten\xosera_main.\copper.$procdff$5695 ($dff) from module xosera_upd (D = $flatten\xosera_main.\copper.$procmux$4022_Y, Q = \xosera_main.copper.ram_wr_addr_out [9]).
Adding EN signal on $flatten\xosera_main.\copper.$procdff$5694 ($dff) from module xosera_upd (D = \xosera_main.copper.r_insn [15:0], Q = \xosera_main.copper.ram_wr_data_out).
Adding SRST signal on $flatten\xosera_main.\copper.$procdff$5693 ($dff) from module xosera_upd (D = $flatten\xosera_main.\copper.$procmux$4161_Y, Q = \xosera_main.copper.ram_rd_strobe, rval = 1'0).
Adding SRST signal on $flatten\xosera_main.\copper.$procdff$5691 ($dff) from module xosera_upd (D = $flatten\xosera_main.\copper.$procmux$4193_Y, Q = \xosera_main.copper.copper_en, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$7190 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.copp_reg_data_o [15], Q = \xosera_main.copper.copper_en).
Adding SRST signal on $flatten\xosera_main.\copper.$procdff$5690 ($dff) from module xosera_upd (D = $flatten\xosera_main.\copper.$procmux$4228_Y, Q = \xosera_main.copper.copper_pc, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:262:slice$7192 ($sdff) from module xosera_upd (D = $flatten\xosera_main.\copper.$procmux$4228_Y, Q = \xosera_main.copper.copper_pc).
Adding SRST signal on $flatten\xosera_main.\copper.$procdff$5689 ($dff) from module xosera_upd (D = $flatten\xosera_main.\copper.$procmux$4233_Y, Q = \xosera_main.copper.copper_init_pc, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:262:slice$7208 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.copp_reg_data_o [9:0], Q = \xosera_main.copper.copper_init_pc).
Adding EN signal on $flatten\xosera_main.\copper.$procdff$5687 ($dff) from module xosera_upd (D = { \xosera_main.xrmem_arb.coppermem_e.rd_data_o \xosera_main.xrmem_arb.coppermem_o.rd_data_o }, Q = \xosera_main.copper.r_insn).
Adding SRST signal on $flatten\xosera_main.$procdff$5545 ($dff) from module xosera_upd (D = $flatten\xosera_main.$and$./xosera_main.sv:429$492_Y, Q = \xosera_main.intr_status, rval = 4'0000).
Adding SRST signal on $flatten\xosera_main.$procdff$5544 ($dff) from module xosera_upd (D = $flatten\xosera_main.$procmux$1300_Y, Q = \xosera_main.bus_intr_o, rval = 1'0).

19.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..
Removed 504 unused cells and 577 unused wires.
<suppressed ~513 debug messages>

19.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.
<suppressed ~50 debug messages>

19.12.9. Rerunning OPT passes. (Maybe there is more to do..)

19.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xosera_upd..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~215 debug messages>

19.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xosera_upd.
Performed a total of 0 changes.

19.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
<suppressed ~315 debug messages>
Removed a total of 105 cells.

19.12.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$6562 ($dffe) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1548_Y, Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_v_count).
Adding EN signal on $auto$ff.cc:262:slice$6501 ($sdffe) from module xosera_upd (D = \xosera_main.video_gen.opt_PF_B.video_pf_b.fetch_addr_next [15:13], Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.fetch_addr [15:13]).
Adding EN signal on $auto$ff.cc:262:slice$6376 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.video_pf_a.fetch_addr_next [12:2], Q = \xosera_main.video_gen.video_pf_a.tilemem_addr_o [12:2]).
Adding EN signal on $auto$ff.cc:262:slice$6376 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.video_pf_a.fetch_addr_next [1], Q = \xosera_main.video_gen.video_pf_a.tilemem_addr_o [1]).
Adding EN signal on $auto$ff.cc:262:slice$6376 ($sdff) from module xosera_upd (D = \xosera_main.video_gen.video_pf_a.fetch_addr_next [0], Q = \xosera_main.video_gen.video_pf_a.tilemem_addr_o [0]).

19.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..
Removed 0 unused cells and 104 unused wires.
<suppressed ~1 debug messages>

19.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.
<suppressed ~5 debug messages>

19.12.16. Rerunning OPT passes. (Maybe there is more to do..)

19.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xosera_upd..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~215 debug messages>

19.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xosera_upd.
Performed a total of 0 changes.

19.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
<suppressed ~129 debug messages>
Removed a total of 43 cells.

19.12.20. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$6584 ($sdffe) from module xosera_upd (D = \xosera_main.video_gen.opt_PF_B.video_pf_b.fetch_addr_next [12:2], Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.tilemem_addr_o [12:2]).
Adding EN signal on $auto$ff.cc:262:slice$6584 ($sdffe) from module xosera_upd (D = \xosera_main.video_gen.opt_PF_B.video_pf_b.fetch_addr_next [1], Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.tilemem_addr_o [1]).
Adding EN signal on $auto$ff.cc:262:slice$6584 ($sdffe) from module xosera_upd (D = \xosera_main.video_gen.opt_PF_B.video_pf_b.fetch_addr_next [0], Q = \xosera_main.video_gen.opt_PF_B.video_pf_b.tilemem_addr_o [0]).

19.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..
Removed 0 unused cells and 42 unused wires.
<suppressed ~1 debug messages>

19.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.
<suppressed ~3 debug messages>

19.12.23. Rerunning OPT passes. (Maybe there is more to do..)

19.12.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xosera_upd..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~215 debug messages>

19.12.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xosera_upd.
Performed a total of 0 changes.

19.12.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
<suppressed ~123 debug messages>
Removed a total of 41 cells.

19.12.27. Executing OPT_DFF pass (perform DFF optimizations).

19.12.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..
Removed 0 unused cells and 41 unused wires.
<suppressed ~1 debug messages>

19.12.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.

19.12.30. Rerunning OPT passes. (Maybe there is more to do..)

19.12.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xosera_upd..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~215 debug messages>

19.12.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xosera_upd.
Performed a total of 0 changes.

19.12.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
Removed a total of 0 cells.

19.12.34. Executing OPT_DFF pass (perform DFF optimizations).

19.12.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..

19.12.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.

19.12.37. Finished OPT passes. (There is nothing left to do.)

19.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 24 address bits (of 32) from memory init port xosera_upd.$flatten\xosera_main.\xrmem_arb.\colormem.$meminit$\bram$./colormem.sv:0$1239 (xosera_main.xrmem_arb.colormem.bram).
Removed top 24 address bits (of 32) from memory init port xosera_upd.$flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$meminit$\bram$./colormem.sv:0$1191 (xosera_main.xrmem_arb.opt_PF_B_COLOR.colormem2.bram).
Removed top 22 address bits (of 32) from memory init port xosera_upd.$flatten\xosera_main.\xrmem_arb.\tile2mem.$meminit$\bram$./tilemem.sv:0$1213 (xosera_main.xrmem_arb.tile2mem.bram).
Removed top 20 address bits (of 32) from memory init port xosera_upd.$flatten\xosera_main.\xrmem_arb.\tilemem.$meminit$\bram$./tilemem.sv:0$1225 (xosera_main.xrmem_arb.tilemem.bram).
Removed top 20 address bits (of 32) from memory init port xosera_upd.$flatten\xosera_main.\xrmem_arb.\tilemem.$meminit$\bram$./tilemem.sv:0$1226 (xosera_main.xrmem_arb.tilemem.bram).
Removed top 20 address bits (of 32) from memory init port xosera_upd.$flatten\xosera_main.\xrmem_arb.\tilemem.$meminit$\bram$./tilemem.sv:0$1227 (xosera_main.xrmem_arb.tilemem.bram).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$6266 ($ne).
Removed top 1 bits (of 4) from port B of cell xosera_upd.$auto$fsm_map.cc:77:implement_pattern_cache$6098 ($eq).
Removed top 1 bits (of 3) from port B of cell xosera_upd.$auto$fsm_map.cc:77:implement_pattern_cache$6102 ($eq).
Removed top 1 bits (of 3) from port B of cell xosera_upd.$auto$fsm_map.cc:77:implement_pattern_cache$6106 ($eq).
Removed top 1 bits (of 4) from port B of cell xosera_upd.$auto$fsm_map.cc:77:implement_pattern_cache$6110 ($eq).
Removed top 1 bits (of 4) from port B of cell xosera_upd.$auto$fsm_map.cc:77:implement_pattern_cache$6028 ($eq).
Removed top 1 bits (of 3) from port B of cell xosera_upd.$auto$fsm_map.cc:77:implement_pattern_cache$5922 ($eq).
Removed top 2 bits (of 3) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$6385 ($ne).
Removed top 1 bits (of 3) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$6387 ($ne).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$6391 ($ne).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$6393 ($ne).
Removed top 2 bits (of 3) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$6397 ($ne).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$6401 ($ne).
Removed top 2 bits (of 4) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$7076 ($ne).
Removed top 1 bits (of 4) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$7066 ($ne).
Removed top 2 bits (of 4) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$7060 ($ne).
Removed top 1 bits (of 3) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$7052 ($ne).
Removed top 2 bits (of 4) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$7028 ($ne).
Removed top 2 bits (of 3) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$7234 ($ne).
Removed top 1 bits (of 3) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$7236 ($ne).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$7240 ($ne).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$7242 ($ne).
Removed top 2 bits (of 3) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$7246 ($ne).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$7250 ($ne).
Removed top 1 bits (of 4) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$6527 ($ne).
Removed top 2 bits (of 6) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$6513 ($ne).
Removed top 6 bits (of 7) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$6511 ($ne).
Removed top 5 bits (of 6) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$6509 ($ne).
Removed top 2 bits (of 6) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$6507 ($ne).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$6446 ($ne).
Removed top 1 bits (of 5) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$6302 ($ne).
Removed top 4 bits (of 5) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$6304 ($ne).
Removed top 5 bits (of 6) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$6306 ($ne).
Removed top 1 bits (of 5) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$6308 ($ne).
Removed top 1 bits (of 4) from port B of cell xosera_upd.$auto$opt_dff.cc:198:make_patterns_logic$6320 ($ne).
Removed top 2 bits (of 6) from port A of cell xosera_upd.$flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:55$948 ($add).
Removed top 1 bits (of 6) from port B of cell xosera_upd.$flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:55$948 ($add).
Removed top 2 bits (of 6) from port B of cell xosera_upd.$flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:55$949 ($add).
Removed top 2 bits (of 6) from port A of cell xosera_upd.$flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:56$950 ($add).
Removed top 1 bits (of 6) from port B of cell xosera_upd.$flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:56$950 ($add).
Removed top 2 bits (of 6) from port B of cell xosera_upd.$flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:56$951 ($add).
Removed top 2 bits (of 6) from port A of cell xosera_upd.$flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:57$952 ($add).
Removed top 1 bits (of 6) from port B of cell xosera_upd.$flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:57$952 ($add).
Removed top 2 bits (of 6) from port B of cell xosera_upd.$flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:57$953 ($add).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$procmux$5505_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$procmux$5512_CMP0 ($eq).
Removed top 1 bits (of 17) from port A of cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$sub$./blitter2.sv:423$1008 ($sub).
Removed top 2 bits (of 3) from mux cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4494 ($mux).
Removed top 1 bits (of 3) from mux cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4502 ($mux).
Removed top 2 bits (of 3) from mux cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4515 ($mux).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4659_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4695_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4780_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4878_CMP0 ($eq).
Removed cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4953 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$4979 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5056 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5063 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5090 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5097 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5107 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5114 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5121 ($mux).
Removed top 1 bits (of 4) from port B of cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5238_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5248_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5262_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5273_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5288_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5300_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$procmux$5316_CMP0 ($eq).
Removed top 3 bits (of 16) from mux cell xosera_upd.$flatten\xosera_main.\xrmem_arb.$ternary$./xrmem_arb.sv:146$1050 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\xrmem_arb.\colormem.$procmux$1294 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\xrmem_arb.\colormem.$procmux$1291 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\xrmem_arb.\tilemem.$procmux$1314 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\xrmem_arb.\tilemem.$procmux$1311 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\xrmem_arb.\tile2mem.$procmux$2514 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\xrmem_arb.\tile2mem.$procmux$2511 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\xrmem_arb.\coppermem_e.$procmux$2525 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\xrmem_arb.\coppermem_e.$procmux$2522 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\xrmem_arb.\coppermem_o.$procmux$2525 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\xrmem_arb.\coppermem_o.$procmux$2522 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$procmux$2536 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\xrmem_arb.\opt_PF_B_COLOR.colormem2.$procmux$2533 ($mux).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$flatten\xosera_main.\vram_arb.\vram.$procmux$1319_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$flatten\xosera_main.\vram_arb.\vram.$eq$./vram.sv:75$463 ($eq).
Removed top 31 bits (of 32) from port B of cell xosera_upd.$flatten\xosera_main.\copper.$add$./copper.sv:316$167 ($add).
Removed top 22 bits (of 32) from port Y of cell xosera_upd.$flatten\xosera_main.\copper.$add$./copper.sv:316$167 ($add).
Removed top 1 bits (of 3) from port B of cell xosera_upd.$flatten\xosera_main.\copper.$procmux$4026_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell xosera_upd.$flatten\xosera_main.\copper.$procmux$4140_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell xosera_upd.$flatten\xosera_main.\copper.$procmux$4141_CMP0 ($eq).
Removed cell xosera_upd.$flatten\xosera_main.\copper.$procmux$4205 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\copper.$procmux$4208 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\copper.$procmux$4210 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\copper.$procmux$4213 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\copper.$procmux$4216 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\copper.$procmux$4218 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\copper.$procmux$4224 ($mux).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.$eq$./video_gen.sv:495$1133 ($eq).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.$eq$./video_gen.sv:496$1135 ($eq).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.$procmux$2580_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.$procmux$2585_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.$procmux$2606_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.$procmux$2607_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.$procmux$2608_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.$procmux$2609_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.$procmux$2610_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.$procmux$2611_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.$procmux$2612_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.$procmux$2613_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.$procmux$2614_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.$procmux$2615_CMP0 ($eq).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2442 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2418 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2132 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2114 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2096 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2062 ($mux).
Removed top 1 bits (of 4) from port B of cell xosera_upd.$auto$fsm_map.cc:77:implement_pattern_cache$5992 ($eq).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2005 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1956 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1924 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1908 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1899 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1886 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1847 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1786 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1770 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1754 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1697 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1616 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1571 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1559 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1557 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1531 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1521 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1511 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1509 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1506 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1498 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1496 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1493 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1356 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1354 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1351 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1333 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1331 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$procmux$1328 ($mux).
Removed top 31 bits (of 32) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$add$./video_playfield.sv:547$456 ($add).
Removed top 28 bits (of 32) from port Y of cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$add$./video_playfield.sv:547$456 ($add).
Removed top 5 bits (of 10) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$sub$./video_playfield.sv:500$445 ($sub).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$eq$./video_playfield.sv:244$393 ($eq).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$ne$./video_playfield.sv:232$391 ($ne).
Removed top 1 bits (of 16) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$or$./video_playfield.sv:164$383 ($or).
Removed top 2 bits (of 16) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$or$./video_playfield.sv:161$380 ($or).
Removed top 5 bits (of 16) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$or$./video_playfield.sv:157$377 ($or).
Removed top 6 bits (of 16) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$or$./video_playfield.sv:155$376 ($or).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2442 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2418 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2132 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2114 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2096 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2062 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2005 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1956 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1924 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1908 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1899 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1886 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1847 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1786 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1770 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1754 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1697 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1616 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1571 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1559 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1557 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1546 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1544 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1531 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1521 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1511 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1509 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1506 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1498 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1496 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1493 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1455 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1433 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1356 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1354 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1351 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1333 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1331 ($mux).
Removed cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$1328 ($mux).
Removed top 2 bits (of 10) from port A of cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:551$457 ($add).
Removed top 31 bits (of 32) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:547$456 ($add).
Removed top 28 bits (of 32) from port Y of cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:547$456 ($add).
Removed top 2 bits (of 10) from port A of cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:501$446 ($add).
Removed top 5 bits (of 10) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$sub$./video_playfield.sv:500$445 ($sub).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$eq$./video_playfield.sv:244$393 ($eq).
Removed top 1 bits (of 2) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$ne$./video_playfield.sv:232$391 ($ne).
Removed top 1 bits (of 16) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$or$./video_playfield.sv:164$383 ($or).
Removed top 2 bits (of 16) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$or$./video_playfield.sv:161$380 ($or).
Removed top 5 bits (of 16) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$or$./video_playfield.sv:157$377 ($or).
Removed top 6 bits (of 16) from port B of cell xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$or$./video_playfield.sv:155$376 ($or).
Removed top 31 bits (of 32) from port B of cell xosera_upd.$flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:180$218 ($add).
Removed top 16 bits (of 32) from port Y of cell xosera_upd.$flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:180$218 ($add).
Removed top 1 bits (of 4) from port B of cell xosera_upd.$flatten\xosera_main.\reg_interface.$eq$./reg_interface.sv:402$236 ($eq).
Removed top 1 bits (of 4) from port B of cell xosera_upd.$flatten\xosera_main.\reg_interface.$eq$./reg_interface.sv:402$237 ($eq).
Removed top 1 bits (of 4) from port B of cell xosera_upd.$flatten\xosera_main.\reg_interface.$procmux$3409_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell xosera_upd.$flatten\xosera_main.\reg_interface.$procmux$3425_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell xosera_upd.$flatten\xosera_main.\reg_interface.$procmux$3446_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell xosera_upd.$flatten\xosera_main.\reg_interface.$procmux$3464_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell xosera_upd.$flatten\xosera_main.\reg_interface.$procmux$3520_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell xosera_upd.$flatten\xosera_main.$or$./xosera_main.sv:429$490 ($or).
Removed top 2 bits (of 4) from port B of cell xosera_upd.$flatten\xosera_main.$or$./xosera_main.sv:423$484 ($or).
Removed top 1 bits (of 3) from port B of cell xosera_upd.$flatten\xosera_main.$eq$./xosera_main.sv:346$479 ($eq).
Removed top 2 bits (of 3) from wire xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$10\blit_state_next[2:0].
Removed top 2 bits (of 3) from wire xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$4\blit_state_next[2:0].
Removed top 1 bits (of 3) from wire xosera_upd.$flatten\xosera_main.\opt_EN_BLIT.blitter.$9\blit_state_next[2:0].
Removed top 16 bits (of 32) from wire xosera_upd.$flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:180$218_Y.
Removed top 28 bits (of 32) from wire xosera_upd.$flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:547$456_Y.
Removed top 28 bits (of 32) from wire xosera_upd.$flatten\xosera_main.\video_gen.\video_pf_a.$add$./video_playfield.sv:547$456_Y.

19.14. Executing PEEPOPT pass (run peephole optimizers).

19.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..
Removed 0 unused cells and 106 unused wires.
<suppressed ~1 debug messages>

19.16. Executing SHARE pass (SAT-based resource sharing).

19.17. Executing TECHMAP pass (map to technology primitives).

19.17.1. Executing Verilog-2005 frontend: /Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/cmp2lut.v
Parsing Verilog input from `/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

19.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~36 debug messages>

19.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.

19.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..

19.20. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\xosera_main.xrmem_arb.colormem.bram'[0] in module `\xosera_upd': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\xosera_main.xrmem_arb.coppermem_e.bram'[0] in module `\xosera_upd': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\xosera_main.xrmem_arb.coppermem_o.bram'[0] in module `\xosera_upd': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\xosera_main.xrmem_arb.opt_PF_B_COLOR.colormem2.bram'[0] in module `\xosera_upd': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\xosera_main.xrmem_arb.tile2mem.bram'[0] in module `\xosera_upd': merging output FF to cell.
    Write port 0: non-transparent.
Checking read port `\xosera_main.xrmem_arb.tilemem.bram'[0] in module `\xosera_upd': merging output FF to cell.
    Write port 0: non-transparent.

19.21. Executing WREDUCE pass (reducing word size of cells).

19.22. Executing TECHMAP pass (map to technology primitives).

19.22.1. Executing Verilog-2005 frontend: /Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/mul2dsp.v
Parsing Verilog input from `/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

19.22.2. Executing Verilog-2005 frontend: /Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/dsp_map.v
Parsing Verilog input from `/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL16X16'.
Successfully finished Verilog frontend.

19.22.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

19.23. Executing OPT_EXPR pass (perform const folding).

19.24. Executing WREDUCE pass (reducing word size of cells).

19.25. Executing ICE40_DSP pass (map multipliers).

19.26. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module xosera_upd:
  creating $macc model for $flatten\xosera_main.\copper.$add$./copper.sv:316$167 ($add).
  creating $macc model for $flatten\xosera_main.\opt_EN_BLIT.blitter.$add$./blitter2.sv:452$1017 ($add).
  creating $macc model for $flatten\xosera_main.\opt_EN_BLIT.blitter.$add$./blitter2.sv:522$1034 ($add).
  creating $macc model for $flatten\xosera_main.\opt_EN_BLIT.blitter.$add$./blitter2.sv:523$1035 ($add).
  creating $macc model for $flatten\xosera_main.\opt_EN_BLIT.blitter.$add$./blitter2.sv:524$1036 ($add).
  creating $macc model for $flatten\xosera_main.\opt_EN_BLIT.blitter.$sub$./blitter2.sv:422$1007 ($sub).
  creating $macc model for $flatten\xosera_main.\opt_EN_BLIT.blitter.$sub$./blitter2.sv:423$1008 ($sub).
  creating $macc model for $flatten\xosera_main.\opt_EN_BLIT.blitter.$sub$./blitter2.sv:450$1016 ($sub).
  creating $macc model for $flatten\xosera_main.\opt_EN_BLIT.blitter.$sub$./blitter2.sv:493$1031 ($sub).
  creating $macc model for $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:55$948 ($add).
  creating $macc model for $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:55$949 ($add).
  creating $macc model for $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:56$950 ($add).
  creating $macc model for $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:56$951 ($add).
  creating $macc model for $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:57$952 ($add).
  creating $macc model for $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:57$953 ($add).
  creating $macc model for $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:59$954 ($add).
  creating $macc model for $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:60$955 ($add).
  creating $macc model for $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:61$956 ($add).
  creating $macc model for $flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:177$216 ($add).
  creating $macc model for $flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:180$218 ($add).
  creating $macc model for $flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:242$225 ($add).
  creating $macc model for $flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:249$226 ($add).
  creating $macc model for $flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:255$229 ($add).
  creating $macc model for $flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:277$231 ($add).
  creating $macc model for $flatten\xosera_main.\video_gen.$add$./video_gen.sv:504$1155 ($add).
  creating $macc model for $flatten\xosera_main.\video_gen.$add$./video_gen.sv:509$1156 ($add).
  creating $macc model for $flatten\xosera_main.\video_gen.$add$./video_gen.sv:518$1159 ($add).
  creating $macc model for $flatten\xosera_main.\video_gen.$add$./video_gen.sv:534$1165 ($add).
  creating $macc model for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:210$386 ($add).
  creating $macc model for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:462$443 ($add).
  creating $macc model for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:501$446 ($add).
  creating $macc model for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:545$455 ($add).
  creating $macc model for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:547$456 ($add).
  creating $macc model for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:551$457 ($add).
  creating $macc model for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$sub$./video_playfield.sv:455$437 ($sub).
  creating $macc model for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$sub$./video_playfield.sv:459$442 ($sub).
  creating $macc model for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$sub$./video_playfield.sv:500$445 ($sub).
  creating $macc model for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$sub$./video_playfield.sv:536$447 ($sub).
  creating $macc model for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$sub$./video_playfield.sv:540$452 ($sub).
  creating $macc model for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$sub$./video_playfield.sv:559$459 ($sub).
  creating $macc model for $flatten\xosera_main.\video_gen.\video_pf_a.$add$./video_playfield.sv:210$386 ($add).
  creating $macc model for $flatten\xosera_main.\video_gen.\video_pf_a.$add$./video_playfield.sv:462$443 ($add).
  creating $macc model for $flatten\xosera_main.\video_gen.\video_pf_a.$add$./video_playfield.sv:545$455 ($add).
  creating $macc model for $flatten\xosera_main.\video_gen.\video_pf_a.$add$./video_playfield.sv:547$456 ($add).
  creating $macc model for $flatten\xosera_main.\video_gen.\video_pf_a.$sub$./video_playfield.sv:455$437 ($sub).
  creating $macc model for $flatten\xosera_main.\video_gen.\video_pf_a.$sub$./video_playfield.sv:459$442 ($sub).
  creating $macc model for $flatten\xosera_main.\video_gen.\video_pf_a.$sub$./video_playfield.sv:500$445 ($sub).
  creating $macc model for $flatten\xosera_main.\video_gen.\video_pf_a.$sub$./video_playfield.sv:536$447 ($sub).
  creating $macc model for $flatten\xosera_main.\video_gen.\video_pf_a.$sub$./video_playfield.sv:540$452 ($sub).
  creating $macc model for $flatten\xosera_main.\video_gen.\video_pf_a.$sub$./video_playfield.sv:559$459 ($sub).
  merging $macc model for $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:57$952 into $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:57$953.
  merging $macc model for $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:56$950 into $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:56$951.
  merging $macc model for $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:55$948 into $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:55$949.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\video_pf_a.$sub$./video_playfield.sv:500$445.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\video_pf_a.$sub$./video_playfield.sv:459$442.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\video_pf_a.$sub$./video_playfield.sv:455$437.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\video_pf_a.$add$./video_playfield.sv:547$456.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\video_pf_a.$add$./video_playfield.sv:545$455.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\video_pf_a.$add$./video_playfield.sv:462$443.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\video_pf_a.$add$./video_playfield.sv:210$386.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$sub$./video_playfield.sv:559$459.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$sub$./video_playfield.sv:540$452.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$sub$./video_playfield.sv:536$447.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$sub$./video_playfield.sv:500$445.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$sub$./video_playfield.sv:459$442.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$sub$./video_playfield.sv:455$437.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:551$457.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:547$456.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:545$455.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:501$446.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:462$443.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:210$386.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.$add$./video_gen.sv:534$1165.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.$add$./video_gen.sv:518$1159.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.$add$./video_gen.sv:509$1156.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.$add$./video_gen.sv:504$1155.
  creating $alu model for $macc $flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:277$231.
  creating $alu model for $macc $flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:255$229.
  creating $alu model for $macc $flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:249$226.
  creating $alu model for $macc $flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:242$225.
  creating $alu model for $macc $flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:180$218.
  creating $alu model for $macc $flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:177$216.
  creating $alu model for $macc $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:61$956.
  creating $alu model for $macc $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:60$955.
  creating $alu model for $macc $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:59$954.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\video_pf_a.$sub$./video_playfield.sv:536$447.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\video_pf_a.$sub$./video_playfield.sv:540$452.
  creating $alu model for $macc $flatten\xosera_main.\video_gen.\video_pf_a.$sub$./video_playfield.sv:559$459.
  creating $alu model for $macc $flatten\xosera_main.\opt_EN_BLIT.blitter.$sub$./blitter2.sv:493$1031.
  creating $alu model for $macc $flatten\xosera_main.\opt_EN_BLIT.blitter.$sub$./blitter2.sv:450$1016.
  creating $alu model for $macc $flatten\xosera_main.\opt_EN_BLIT.blitter.$sub$./blitter2.sv:423$1008.
  creating $alu model for $macc $flatten\xosera_main.\opt_EN_BLIT.blitter.$sub$./blitter2.sv:422$1007.
  creating $alu model for $macc $flatten\xosera_main.\opt_EN_BLIT.blitter.$add$./blitter2.sv:524$1036.
  creating $alu model for $macc $flatten\xosera_main.\opt_EN_BLIT.blitter.$add$./blitter2.sv:523$1035.
  creating $alu model for $macc $flatten\xosera_main.\opt_EN_BLIT.blitter.$add$./blitter2.sv:522$1034.
  creating $alu model for $macc $flatten\xosera_main.\opt_EN_BLIT.blitter.$add$./blitter2.sv:452$1017.
  creating $alu model for $macc $flatten\xosera_main.\copper.$add$./copper.sv:316$167.
  creating $macc cell for $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:57$953: $auto$alumacc.cc:365:replace_macc$7543
  creating $macc cell for $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:55$949: $auto$alumacc.cc:365:replace_macc$7544
  creating $macc cell for $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:56$951: $auto$alumacc.cc:365:replace_macc$7545
  creating $alu model for $flatten\xosera_main.\copper.$ge$./copper.sv:333$168 ($ge): new $alu
  creating $alu model for $flatten\xosera_main.\copper.$ge$./copper.sv:334$169 ($ge): new $alu
  creating $alu cell for $flatten\xosera_main.\copper.$ge$./copper.sv:334$169: $auto$alumacc.cc:485:replace_alu$7548
  creating $alu cell for $flatten\xosera_main.\copper.$ge$./copper.sv:333$168: $auto$alumacc.cc:485:replace_alu$7561
  creating $alu cell for $flatten\xosera_main.\copper.$add$./copper.sv:316$167: $auto$alumacc.cc:485:replace_alu$7574
  creating $alu cell for $flatten\xosera_main.\opt_EN_BLIT.blitter.$add$./blitter2.sv:452$1017: $auto$alumacc.cc:485:replace_alu$7577
  creating $alu cell for $flatten\xosera_main.\opt_EN_BLIT.blitter.$add$./blitter2.sv:522$1034: $auto$alumacc.cc:485:replace_alu$7580
  creating $alu cell for $flatten\xosera_main.\opt_EN_BLIT.blitter.$add$./blitter2.sv:523$1035: $auto$alumacc.cc:485:replace_alu$7583
  creating $alu cell for $flatten\xosera_main.\opt_EN_BLIT.blitter.$add$./blitter2.sv:524$1036: $auto$alumacc.cc:485:replace_alu$7586
  creating $alu cell for $flatten\xosera_main.\opt_EN_BLIT.blitter.$sub$./blitter2.sv:422$1007: $auto$alumacc.cc:485:replace_alu$7589
  creating $alu cell for $flatten\xosera_main.\opt_EN_BLIT.blitter.$sub$./blitter2.sv:423$1008: $auto$alumacc.cc:485:replace_alu$7592
  creating $alu cell for $flatten\xosera_main.\opt_EN_BLIT.blitter.$sub$./blitter2.sv:450$1016: $auto$alumacc.cc:485:replace_alu$7595
  creating $alu cell for $flatten\xosera_main.\opt_EN_BLIT.blitter.$sub$./blitter2.sv:493$1031: $auto$alumacc.cc:485:replace_alu$7598
  creating $alu cell for $flatten\xosera_main.\video_gen.\video_pf_a.$sub$./video_playfield.sv:559$459: $auto$alumacc.cc:485:replace_alu$7601
  creating $alu cell for $flatten\xosera_main.\video_gen.\video_pf_a.$sub$./video_playfield.sv:540$452: $auto$alumacc.cc:485:replace_alu$7604
  creating $alu cell for $flatten\xosera_main.\video_gen.\video_pf_a.$sub$./video_playfield.sv:536$447: $auto$alumacc.cc:485:replace_alu$7607
  creating $alu cell for $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:59$954: $auto$alumacc.cc:485:replace_alu$7610
  creating $alu cell for $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:60$955: $auto$alumacc.cc:485:replace_alu$7613
  creating $alu cell for $flatten\xosera_main.\opt_PF_B_BLEND.video_blend.$add$./video_blend.sv:61$956: $auto$alumacc.cc:485:replace_alu$7616
  creating $alu cell for $flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:177$216: $auto$alumacc.cc:485:replace_alu$7619
  creating $alu cell for $flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:180$218: $auto$alumacc.cc:485:replace_alu$7622
  creating $alu cell for $flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:242$225: $auto$alumacc.cc:485:replace_alu$7625
  creating $alu cell for $flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:249$226: $auto$alumacc.cc:485:replace_alu$7628
  creating $alu cell for $flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:255$229: $auto$alumacc.cc:485:replace_alu$7631
  creating $alu cell for $flatten\xosera_main.\reg_interface.$add$./reg_interface.sv:277$231: $auto$alumacc.cc:485:replace_alu$7634
  creating $alu cell for $flatten\xosera_main.\video_gen.$add$./video_gen.sv:504$1155: $auto$alumacc.cc:485:replace_alu$7637
  creating $alu cell for $flatten\xosera_main.\video_gen.$add$./video_gen.sv:509$1156: $auto$alumacc.cc:485:replace_alu$7640
  creating $alu cell for $flatten\xosera_main.\video_gen.$add$./video_gen.sv:518$1159: $auto$alumacc.cc:485:replace_alu$7643
  creating $alu cell for $flatten\xosera_main.\video_gen.$add$./video_gen.sv:534$1165: $auto$alumacc.cc:485:replace_alu$7646
  creating $alu cell for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:210$386: $auto$alumacc.cc:485:replace_alu$7649
  creating $alu cell for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:462$443: $auto$alumacc.cc:485:replace_alu$7652
  creating $alu cell for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:501$446: $auto$alumacc.cc:485:replace_alu$7655
  creating $alu cell for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:545$455: $auto$alumacc.cc:485:replace_alu$7658
  creating $alu cell for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:547$456: $auto$alumacc.cc:485:replace_alu$7661
  creating $alu cell for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$add$./video_playfield.sv:551$457: $auto$alumacc.cc:485:replace_alu$7664
  creating $alu cell for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$sub$./video_playfield.sv:455$437: $auto$alumacc.cc:485:replace_alu$7667
  creating $alu cell for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$sub$./video_playfield.sv:459$442: $auto$alumacc.cc:485:replace_alu$7670
  creating $alu cell for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$sub$./video_playfield.sv:500$445: $auto$alumacc.cc:485:replace_alu$7673
  creating $alu cell for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$sub$./video_playfield.sv:536$447: $auto$alumacc.cc:485:replace_alu$7676
  creating $alu cell for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$sub$./video_playfield.sv:540$452: $auto$alumacc.cc:485:replace_alu$7679
  creating $alu cell for $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$sub$./video_playfield.sv:559$459: $auto$alumacc.cc:485:replace_alu$7682
  creating $alu cell for $flatten\xosera_main.\video_gen.\video_pf_a.$add$./video_playfield.sv:210$386: $auto$alumacc.cc:485:replace_alu$7685
  creating $alu cell for $flatten\xosera_main.\video_gen.\video_pf_a.$add$./video_playfield.sv:462$443: $auto$alumacc.cc:485:replace_alu$7688
  creating $alu cell for $flatten\xosera_main.\video_gen.\video_pf_a.$add$./video_playfield.sv:545$455: $auto$alumacc.cc:485:replace_alu$7691
  creating $alu cell for $flatten\xosera_main.\video_gen.\video_pf_a.$add$./video_playfield.sv:547$456: $auto$alumacc.cc:485:replace_alu$7694
  creating $alu cell for $flatten\xosera_main.\video_gen.\video_pf_a.$sub$./video_playfield.sv:455$437: $auto$alumacc.cc:485:replace_alu$7697
  creating $alu cell for $flatten\xosera_main.\video_gen.\video_pf_a.$sub$./video_playfield.sv:459$442: $auto$alumacc.cc:485:replace_alu$7700
  creating $alu cell for $flatten\xosera_main.\video_gen.\video_pf_a.$sub$./video_playfield.sv:500$445: $auto$alumacc.cc:485:replace_alu$7703
  created 46 $alu and 3 $macc cells.

19.27. Executing OPT pass (performing simple optimizations).

19.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.

19.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
Removed a total of 0 cells.

19.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xosera_upd..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~201 debug messages>

19.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xosera_upd.
    New ctrl vector for $pmux cell $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2447: { $auto$opt_reduce.cc:134:opt_mux$7707 \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch [5] \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch [13] \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch [3] \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch [11] }
    New ctrl vector for $pmux cell $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2485: $auto$opt_reduce.cc:134:opt_mux$7709
    New ctrl vector for $pmux cell $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2447: { $auto$opt_reduce.cc:134:opt_mux$7711 \xosera_main.video_gen.video_pf_a.pf_fetch [5] \xosera_main.video_gen.video_pf_a.pf_fetch [13] \xosera_main.video_gen.video_pf_a.pf_fetch [3] \xosera_main.video_gen.video_pf_a.pf_fetch [11] }
    New ctrl vector for $pmux cell $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2485: $auto$opt_reduce.cc:134:opt_mux$7713
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$7706: { \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch [14] \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch [12] \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch [8] \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch [4] \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch [2] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$7708: { \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch [14] \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch [12] \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch [8] \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch [4] \xosera_main.video_gen.opt_PF_B.video_pf_b.pf_fetch [2] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$7710: { \xosera_main.video_gen.video_pf_a.pf_fetch [14] \xosera_main.video_gen.video_pf_a.pf_fetch [12] \xosera_main.video_gen.video_pf_a.pf_fetch [8] \xosera_main.video_gen.video_pf_a.pf_fetch [4] \xosera_main.video_gen.video_pf_a.pf_fetch [2] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$7712: { \xosera_main.video_gen.video_pf_a.pf_fetch [14] \xosera_main.video_gen.video_pf_a.pf_fetch [12] \xosera_main.video_gen.video_pf_a.pf_fetch [8] \xosera_main.video_gen.video_pf_a.pf_fetch [4] \xosera_main.video_gen.video_pf_a.pf_fetch [2] }
  Optimizing cells in module \xosera_upd.
Performed a total of 8 changes.

19.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

19.27.6. Executing OPT_DFF pass (perform DFF optimizations).

19.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..
Removed 9 unused cells and 110 unused wires.
<suppressed ~10 debug messages>

19.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.

19.27.9. Rerunning OPT passes. (Maybe there is more to do..)

19.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xosera_upd..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~200 debug messages>

19.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xosera_upd.
Performed a total of 0 changes.

19.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
Removed a total of 0 cells.

19.27.13. Executing OPT_DFF pass (perform DFF optimizations).

19.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..

19.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.

19.27.16. Finished OPT passes. (There is nothing left to do.)

19.28. Executing MEMORY pass.

19.28.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

19.28.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

19.28.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

19.28.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

19.28.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..

19.28.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

19.28.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

19.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..

19.28.9. Executing MEMORY_COLLECT pass (generating $mem cells).

19.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..

19.30. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing xosera_upd.xosera_main.xrmem_arb.colormem.bram:
  Properties: ports=2 bits=4096 rports=1 wports=1 dbits=16 abits=8 words=256
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2048 efficiency=50
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=768 dwaste=0 bwaste=3072 waste=3072 efficiency=25
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3072 efficiency=25
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1792 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3584 efficiency=12
      Storing for later selection.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=768 dwaste=0 bwaste=3072 waste=3072 efficiency=25
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1792 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=768 dwaste=0 bwaste=3072 waste=3072 efficiency=25
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1792 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 4 rules:
    Efficiency for rule 4.3: efficiency=12, cells=8, acells=1
    Efficiency for rule 4.2: efficiency=25, cells=4, acells=1
    Efficiency for rule 4.1: efficiency=50, cells=2, acells=1
    Efficiency for rule 1.1: efficiency=100, cells=1, acells=1
    Selected rule 1.1 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: xosera_main.xrmem_arb.colormem.bram.0.0.0
Processing xosera_upd.xosera_main.xrmem_arb.coppermem_e.bram:
  Properties: ports=2 bits=16384 rports=1 wports=1 dbits=16 abits=10 words=1024
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2048 efficiency=50
      Storing for later selection.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 4 rules:
    Efficiency for rule 4.3: efficiency=50, cells=8, acells=1
    Efficiency for rule 4.2: efficiency=100, cells=4, acells=1
    Efficiency for rule 4.1: efficiency=100, cells=4, acells=2
    Efficiency for rule 1.1: efficiency=100, cells=4, acells=4
    Selected rule 4.2 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: xosera_main.xrmem_arb.coppermem_e.bram.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: xosera_main.xrmem_arb.coppermem_e.bram.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: xosera_main.xrmem_arb.coppermem_e.bram.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: xosera_main.xrmem_arb.coppermem_e.bram.3.0.0
Processing xosera_upd.xosera_main.xrmem_arb.coppermem_o.bram:
  Properties: ports=2 bits=16384 rports=1 wports=1 dbits=16 abits=10 words=1024
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2048 efficiency=50
      Storing for later selection.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 4 rules:
    Efficiency for rule 4.3: efficiency=50, cells=8, acells=1
    Efficiency for rule 4.2: efficiency=100, cells=4, acells=1
    Efficiency for rule 4.1: efficiency=100, cells=4, acells=2
    Efficiency for rule 1.1: efficiency=100, cells=4, acells=4
    Selected rule 4.2 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: xosera_main.xrmem_arb.coppermem_o.bram.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: xosera_main.xrmem_arb.coppermem_o.bram.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: xosera_main.xrmem_arb.coppermem_o.bram.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: xosera_main.xrmem_arb.coppermem_o.bram.3.0.0
Processing xosera_upd.xosera_main.xrmem_arb.opt_PF_B_COLOR.colormem2.bram:
  Properties: ports=2 bits=4096 rports=1 wports=1 dbits=16 abits=8 words=256
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2048 efficiency=50
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=768 dwaste=0 bwaste=3072 waste=3072 efficiency=25
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3072 efficiency=25
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1792 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3584 efficiency=12
      Storing for later selection.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=768 dwaste=0 bwaste=3072 waste=3072 efficiency=25
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1792 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=256 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=768 dwaste=0 bwaste=3072 waste=3072 efficiency=25
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1792 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 4 rules:
    Efficiency for rule 4.3: efficiency=12, cells=8, acells=1
    Efficiency for rule 4.2: efficiency=25, cells=4, acells=1
    Efficiency for rule 4.1: efficiency=50, cells=2, acells=1
    Efficiency for rule 1.1: efficiency=100, cells=1, acells=1
    Selected rule 1.1 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: xosera_main.xrmem_arb.opt_PF_B_COLOR.colormem2.bram.0.0.0
Processing xosera_upd.xosera_main.xrmem_arb.tile2mem.bram:
  Properties: ports=2 bits=16384 rports=1 wports=1 dbits=16 abits=10 words=1024
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2048 efficiency=50
      Storing for later selection.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 4 rules:
    Efficiency for rule 4.3: efficiency=50, cells=8, acells=1
    Efficiency for rule 4.2: efficiency=100, cells=4, acells=1
    Efficiency for rule 4.1: efficiency=100, cells=4, acells=2
    Efficiency for rule 1.1: efficiency=100, cells=4, acells=4
    Selected rule 4.2 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: xosera_main.xrmem_arb.tile2mem.bram.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: xosera_main.xrmem_arb.tile2mem.bram.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: xosera_main.xrmem_arb.tile2mem.bram.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: xosera_main.xrmem_arb.tile2mem.bram.3.0.0
Processing xosera_upd.xosera_main.xrmem_arb.tilemem.bram:
  Properties: ports=2 bits=65536 rports=1 wports=1 dbits=16 abits=12 words=4096
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 4 rules:
    Efficiency for rule 4.3: efficiency=100, cells=16, acells=2
    Efficiency for rule 4.2: efficiency=100, cells=16, acells=4
    Efficiency for rule 4.1: efficiency=100, cells=16, acells=8
    Efficiency for rule 1.1: efficiency=100, cells=16, acells=16
    Selected rule 4.3 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \xosera_main.clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: xosera_main.xrmem_arb.tilemem.bram.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 1 0>: xosera_main.xrmem_arb.tilemem.bram.0.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: xosera_main.xrmem_arb.tilemem.bram.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 1 0>: xosera_main.xrmem_arb.tilemem.bram.1.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: xosera_main.xrmem_arb.tilemem.bram.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 1 0>: xosera_main.xrmem_arb.tilemem.bram.2.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: xosera_main.xrmem_arb.tilemem.bram.3.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 1 0>: xosera_main.xrmem_arb.tilemem.bram.3.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: xosera_main.xrmem_arb.tilemem.bram.4.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 1 0>: xosera_main.xrmem_arb.tilemem.bram.4.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: xosera_main.xrmem_arb.tilemem.bram.5.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 1 0>: xosera_main.xrmem_arb.tilemem.bram.5.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: xosera_main.xrmem_arb.tilemem.bram.6.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 1 0>: xosera_main.xrmem_arb.tilemem.bram.6.1.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: xosera_main.xrmem_arb.tilemem.bram.7.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 1 0>: xosera_main.xrmem_arb.tilemem.bram.7.1.0

19.31. Executing TECHMAP pass (map to technology primitives).

19.31.1. Executing Verilog-2005 frontend: /Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

19.31.2. Continuing TECHMAP pass.
Using template $paramod$6d6fde247a67d80bc0dc47edbc53099e8c23e6a2\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$653080360916d812187ef2ecc76e41663cbf4686\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$79679f9c9e65fc82a178899bf6efb91cde7671ea\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$d5fda954c92abbfc6c874e90d62cba99662f0747\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$cdb16d4457328f0cbdcf463255c359a49f48b5b6\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$3d5496d5cec0e68be53b3b419c100cd5b0f93241\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c5bad42865e229a93361b43e324ac6b285e0f703\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$8c9b43de5032ec5de8163da0b7e822787daa7ef2\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c26c74c9104865c573038a4fb0366f72a09df0fd\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$c88b1b1bf0a2cc0e321faec88a683d950dc3ce8e\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$f607fec2f8abe2ba21c1b26e4dbd91f7183d0e33\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$e82c012bf92367ca797cecc69afe1c6e3df3026e\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$2d083f02f1b280b4180c9e3ddd62713cc833e287\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$a05762614f457b8824d8590aa75b01f6d4b8df1e\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$113fb57ce67f2b31af58aec06af484865898efce\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$daed2385cc15cd9a86b1aa68dff6efeeabe0daae\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$4c4bc2d8a25557a86dde1f2f773a7cdc0f04d483\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$81c4e7d29a37e548ba03dfc82b26d14f06aaa3bf\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$9fa0edce9a514c147c4cceab66f31a899e2fead1\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$eacdfa2681dba828abccb93f0a4b56898de65c31\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$95af2d596c92c6157bc3a5f340a51155280d13ba\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$b801b47b0586a00d49065017810fd0c9b5e85e70\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$9e23e67c1c5ba1f2358d1336db93cf998aced905\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$82cfe578cd631f1514a321725108924b68e68250\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$b4d8ce0db96a95554838715a90ce0aa2e1dbed4a\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$dc11d5ffd21c44bc1e79f27acee2a854c640554d\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$7515aa7ff1a318c71ea1b0274102dbd3604b2723\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$d82032633d23bef53cd02b23f444b0cd658fe2bc\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$1934ac7b7d319c6fc8690d922a3ea1d4c4d9e106\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$53c5636c696314d68bcf91b8097aa0a060240af0\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$7194b5e2077bf2f5d2bbfba9bbd62d6a98c4fe30\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$1d01dfac14619f479a6e13414943df7b8f8f4f35\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$8ac8e3f177d837f6af70e1cde7f571b87d9b171c\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$6bba8c30ae1dd5370938eb06d2e8a9700c1475e5\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$1b10d5b5e7b971d16fd42d796efcbc3866dd858f\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$2498c3d37aa025f3eaccaf151621cca00cbd0117\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$dc8ea10298f8b91011165a1261efaff68d2fb25c\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$bb09470eaabe3038c29997860a6b5d294b20e30d\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$6ea6b9d6671905d65072fb9124972f84f95556a0\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$2965ce0370a07b54bd4dc26c085bf355026d1be0\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$9c0176573deff56b966ac1aa7aa0a3540487a7c6\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$1e794e564994f23d34d51bb779c554c03d41c02b\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$2143e64cd4740de907f7e8cba64d6a37876c3ac5\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$baba26a67cfd2db31dc736e6255ce6ae30d5f12c\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$c816f71807ae7dc451393d32f1487032ee49834d\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$c8476559036ab2b8a5a2228a569583118d6c617c\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~1619 debug messages>

19.32. Executing ICE40_BRAMINIT pass.

19.33. Executing OPT pass (performing simple optimizations).

19.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.
<suppressed ~376 debug messages>

19.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
<suppressed ~168 debug messages>
Removed a total of 56 cells.

19.33.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$7171 ($dffe) from module xosera_upd (D = \xosera_main.copper.r_insn [25], Q = \xosera_main.copper.ram_wr_addr_out [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7162 ($dffe) from module xosera_upd (D = \xosera_main.copper.r_insn [24], Q = \xosera_main.copper.ram_wr_addr_out [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$7153 ($dffe) from module xosera_upd (D = \xosera_main.copper.r_insn [28:26], Q = \xosera_main.copper.ram_wr_addr_out [12:10], rval = 3'000).

19.33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..
Removed 13 unused cells and 847 unused wires.
<suppressed ~14 debug messages>

19.33.5. Rerunning OPT passes. (Removed registers in this run.)

19.33.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.

19.33.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
Removed a total of 0 cells.

19.33.8. Executing OPT_DFF pass (perform DFF optimizations).

19.33.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..

19.33.10. Finished fast OPT passes.

19.34. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

19.35. Executing OPT pass (performing simple optimizations).

19.35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.

19.35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
Removed a total of 0 cells.

19.35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xosera_upd..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~182 debug messages>

19.35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xosera_upd.
    Consolidated identical input bits for $mux cell $flatten\xosera_main.\reg_interface.$procmux$3752:
      Old ports: A={ \xosera_main.reg_interface.reg_xr_data_even \xosera_main.reg_interface.bus.bytedata_o }, B={ \xosera_main.reg_interface.reg_data_even \xosera_main.reg_interface.bus.bytedata_o }, Y=$flatten\xosera_main.\reg_interface.$procmux$3752_Y
      New ports: A=\xosera_main.reg_interface.reg_xr_data_even, B=\xosera_main.reg_interface.reg_data_even, Y=$flatten\xosera_main.\reg_interface.$procmux$3752_Y [15:8]
      New connections: $flatten\xosera_main.\reg_interface.$procmux$3752_Y [7:0] = \xosera_main.reg_interface.bus.bytedata_o
    Consolidated identical input bits for $pmux cell $flatten\xosera_main.\video_gen.$procmux$2577:
      Old ports: A=10'0111101001, B=30'011110101110000011000111011111, Y=\xosera_main.video_gen.v_count_next_state
      New ports: A=6'010001, B=18'010011100100001111, Y={ \xosera_main.video_gen.v_count_next_state [9] \xosera_main.video_gen.v_count_next_state [5:4] \xosera_main.video_gen.v_count_next_state [2:0] }
      New connections: { \xosera_main.video_gen.v_count_next_state [8:6] \xosera_main.video_gen.v_count_next_state [3] } = { \xosera_main.video_gen.v_count_next_state [0] \xosera_main.video_gen.v_count_next_state [0] \xosera_main.video_gen.v_count_next_state [0] 1'1 }
    Consolidated identical input bits for $pmux cell $flatten\xosera_main.\video_gen.$procmux$2582:
      Old ports: A=10'0000001111, B=30'000110111100100111111100011111, Y=\xosera_main.video_gen.h_count_next_state
      New ports: A=4'0000, B=12'001001011001, Y={ \xosera_main.video_gen.h_count_next_state [8:7] \xosera_main.video_gen.h_count_next_state [5:4] }
      New connections: { \xosera_main.video_gen.h_count_next_state [9] \xosera_main.video_gen.h_count_next_state [6] \xosera_main.video_gen.h_count_next_state [3:0] } = { \xosera_main.video_gen.h_count_next_state [8] \xosera_main.video_gen.h_count_next_state [5] 4'1111 }
    Consolidated identical input bits for $mux cell $flatten\xosera_main.\video_gen.\opt_PF_B.video_pf_b.$procmux$2503:
      Old ports: A=10'0001100000, B=10'1100011000, Y=\xosera_main.video_gen.opt_PF_B.video_pf_b.mem_fetch_hcount
      New ports: A=2'10, B=2'01, Y={ \xosera_main.video_gen.opt_PF_B.video_pf_b.mem_fetch_hcount [5] \xosera_main.video_gen.opt_PF_B.video_pf_b.mem_fetch_hcount [3] }
      New connections: { \xosera_main.video_gen.opt_PF_B.video_pf_b.mem_fetch_hcount [9:6] \xosera_main.video_gen.opt_PF_B.video_pf_b.mem_fetch_hcount [4] \xosera_main.video_gen.opt_PF_B.video_pf_b.mem_fetch_hcount [2:0] } = { \xosera_main.video_gen.opt_PF_B.video_pf_b.mem_fetch_hcount [3] \xosera_main.video_gen.opt_PF_B.video_pf_b.mem_fetch_hcount [3] 1'0 \xosera_main.video_gen.opt_PF_B.video_pf_b.mem_fetch_hcount [5] \xosera_main.video_gen.opt_PF_B.video_pf_b.mem_fetch_hcount [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2503:
      Old ports: A=10'0001100000, B=10'1100011000, Y=\xosera_main.video_gen.video_pf_a.mem_fetch_hcount
      New ports: A=2'10, B=2'01, Y={ \xosera_main.video_gen.video_pf_a.mem_fetch_hcount [5] \xosera_main.video_gen.video_pf_a.mem_fetch_hcount [3] }
      New connections: { \xosera_main.video_gen.video_pf_a.mem_fetch_hcount [9:6] \xosera_main.video_gen.video_pf_a.mem_fetch_hcount [4] \xosera_main.video_gen.video_pf_a.mem_fetch_hcount [2:0] } = { \xosera_main.video_gen.video_pf_a.mem_fetch_hcount [3] \xosera_main.video_gen.video_pf_a.mem_fetch_hcount [3] 1'0 \xosera_main.video_gen.video_pf_a.mem_fetch_hcount [5] \xosera_main.video_gen.video_pf_a.mem_fetch_hcount [3] 3'000 }
  Optimizing cells in module \xosera_upd.
Performed a total of 5 changes.

19.35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
Removed a total of 0 cells.

19.35.6. Executing OPT_DFF pass (perform DFF optimizations).

19.35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..

19.35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.

19.35.9. Rerunning OPT passes. (Maybe there is more to do..)

19.35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xosera_upd..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~182 debug messages>

19.35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xosera_upd.
Performed a total of 0 changes.

19.35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
Removed a total of 0 cells.

19.35.13. Executing OPT_DFF pass (perform DFF optimizations).

19.35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..

19.35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.

19.35.16. Finished OPT passes. (There is nothing left to do.)

19.36. Executing ICE40_WRAPCARRY pass (wrap carries).

19.37. Executing TECHMAP pass (map to technology primitives).

19.37.1. Executing Verilog-2005 frontend: /Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/techmap.v
Parsing Verilog input from `/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

19.37.2. Executing Verilog-2005 frontend: /Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

19.37.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $tribuf.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $or.
Using extmapper maccmap for cells of type $macc.
  add \xosera_main.xrmem_arb.colormem.rd_data_o [3:0] (4 bits, unsigned)
  add \xosera_main.xrmem_arb.opt_PF_B_COLOR.colormem2.rd_data_o [3:0] (4 bits, unsigned)
  add { \xosera_main.xrmem_arb.colormem.rd_data_o [3:0] 1'0 } (5 bits, unsigned)
Using template $paramod$484d51534650924b7ed4c69e46eed3a56904771f\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdff.
  add \xosera_main.xrmem_arb.colormem.rd_data_o [7:4] (4 bits, unsigned)
  add \xosera_main.xrmem_arb.opt_PF_B_COLOR.colormem2.rd_data_o [7:4] (4 bits, unsigned)
  add { \xosera_main.xrmem_arb.colormem.rd_data_o [7:4] 1'0 } (5 bits, unsigned)
  add \xosera_main.xrmem_arb.colormem.rd_data_o [11:8] (4 bits, unsigned)
  add \xosera_main.xrmem_arb.opt_PF_B_COLOR.colormem2.rd_data_o [11:8] (4 bits, unsigned)
  add { \xosera_main.xrmem_arb.colormem.rd_data_o [11:8] 1'0 } (5 bits, unsigned)
Using template $paramod$b85fbb3374a1d9ba7ee4f4d6323c30f939df3ada\_80_ice40_alu for cells of type $alu.
Using template $paramod$8f780356cb6cdb52f6a744190131b65634639c4e\_80_ice40_alu for cells of type $alu.
Using template $paramod$c654a831025ee805eb993d5880de10a3d616cd3b\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod$d588c4475f18bc347201f0f2671d73b8c1e7b7ea\_80_ice40_alu for cells of type $alu.
Using template $paramod$a1665ef28c749ebcdbe9aecd466e644647b56463\_80_ice40_alu for cells of type $alu.
Using template $paramod$b52bd7d9c9f7528eea96dbf9fa48ed18ac637bc8\_80_ice40_alu for cells of type $alu.
Using template $paramod$6df0329addda9228fcc2546de2aaf14ad26c98e1\_80_ice40_alu for cells of type $alu.
Using template $paramod$7e708ae28ab761f11d0fb59d3ffc72f6a4baf5d9\_90_alu for cells of type $alu.
Using template $paramod$d5c1c4131927aec19f116e7a36372b1981bfcd7e\_90_pmux for cells of type $pmux.
Using template $paramod$a285b5a57fe61eabc57c91b8c412748ee1151a85\_90_pmux for cells of type $pmux.
Using template $paramod$0d149ffe75563ef6fcc1a3dddc59d00af28651a7\_90_pmux for cells of type $pmux.
Using template $paramod$b3b6ac92d800c6f07aa48f510f923d86a674e5a7\_90_pmux for cells of type $pmux.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_80_ice40_alu for cells of type $alu.
Using template $paramod$754650b284649a026620fc6856e5b6886cbfe794\_80_ice40_alu for cells of type $alu.
Using template $paramod$85df5dc01c7df96a7d8e5f1fdf76ce9ac452af63\_90_pmux for cells of type $pmux.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$c15e84c77f007506123baf6c4be45847f0e33a3b\_90_pmux for cells of type $pmux.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$de91941a80104a781d89455c89227cbd386bf4f4\_90_pmux for cells of type $pmux.
Using template $paramod$eb7b5fa594d21f32e2ff3bd05b81752f0f326d5f\_90_pmux for cells of type $pmux.
Using template $paramod$2407ada40cc3dda6c6015be2b49b748cddb5a800\_90_pmux for cells of type $pmux.
Using template $paramod$d6eefa73b09c260984bb3ab238c3c05801fa9e82\_90_pmux for cells of type $pmux.
Using template $paramod$70d30c21ff772b34d0d1da2801fbd781dc3c70e4\_90_pmux for cells of type $pmux.
Using template $paramod$54a4503cc57b9df40b70c1899504d6aac2650719\_90_pmux for cells of type $pmux.
Using template $paramod$ba698a254f9a5947e85cbe7beae6b161eefc5386\_90_alu for cells of type $alu.
Using template $paramod$b8c0a997bce700f23568a5ada79cc6781d1f5ca0\_80_ice40_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_80_ice40_alu for cells of type $alu.
Using template $paramod$d865e08a1072904410537366de76463bde0f0d04\_80_ice40_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_ice40_alu for cells of type $alu.
Using template $paramod$ea139abf5d9f33c5a8f110be2ae0a1d01adc5fd6\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xnor.
Using template $paramod$fb2ccc7567b9f572f99303d62bd705e69acf8cd5\_90_pmux for cells of type $pmux.
Using template $paramod$4f9ddb8bcc47f1c63c5307c488aaf2e8cb141a6c\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000000101 for cells of type $fa.
Using template $paramod$00298f3f8094950cb9a5ff2fda48d0d8bde8806c\_80_ice40_alu for cells of type $alu.
No more expansions possible.
<suppressed ~3104 debug messages>

19.38. Executing OPT pass (performing simple optimizations).

19.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.
<suppressed ~2854 debug messages>

19.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
<suppressed ~2439 debug messages>
Removed a total of 813 cells.

19.38.3. Executing OPT_DFF pass (perform DFF optimizations).

19.38.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..
Removed 536 unused cells and 3779 unused wires.
<suppressed ~540 debug messages>

19.38.5. Finished fast OPT passes.

19.39. Executing ICE40_OPT pass (performing simple optimizations).

19.39.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7574.slice[0].carry: CO=\xosera_main.copper.copper_pc [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7577.slice[0].carry: CO=\xosera_main.opt_EN_BLIT.blitter.blit_addr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7589.slice[0].carry: CO=\xosera_main.opt_EN_BLIT.blitter.blit_lines [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7592.slice[0].carry: CO=\xosera_main.opt_EN_BLIT.blitter.blit_words [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7592.slice[16].carry: CO=$auto$alumacc.cc:485:replace_alu$7592.C [16]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7595.slice[0].carry: CO=\xosera_main.opt_EN_BLIT.blitter.blit_addr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7598.slice[0].carry: CO=\xosera_main.opt_EN_BLIT.blitter.blit_count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7607.slice[0].carry: CO=\xosera_main.video_gen.video_pf_a.pf_v_frac_count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7610.slice[4].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7613.slice[4].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7616.slice[4].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7619.slice[0].carry: CO=\xosera_main.reg_interface.reg_timer_frac [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7622.slice[0].carry: CO=\xosera_main.reg_interface.reg_timer [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7634.slice[0].carry: CO=\xosera_main.reg_interface.reg_xr_addr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7637.slice[0].carry: CO=\xosera_main.video_gen.h_count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7640.slice[0].carry: CO=\xosera_main.video_gen.v_count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7649.slice[0].carry: CO=\xosera_main.video_gen.opt_PF_B.video_pf_b.pf_addr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7652.slice[0].carry: CO=\xosera_main.video_gen.opt_PF_B.video_pf_b.pf_tile_x [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7655.slice[0].carry: CO=\xosera_main.video_gen.vid_right [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7661.slice[0].carry: CO=\xosera_main.video_gen.opt_PF_B.video_pf_b.pf_tile_y [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7664.slice[0].carry: CO=\xosera_main.video_gen.vid_left [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7667.slice[0].carry: CO=\xosera_main.video_gen.opt_PF_B.video_pf_b.pf_h_frac_count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7676.slice[0].carry: CO=\xosera_main.video_gen.opt_PF_B.video_pf_b.pf_v_frac_count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7685.slice[0].carry: CO=\xosera_main.video_gen.video_pf_a.pf_addr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7688.slice[0].carry: CO=\xosera_main.video_gen.video_pf_a.pf_tile_x [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7694.slice[0].carry: CO=\xosera_main.video_gen.video_pf_a.pf_tile_y [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$alumacc.cc:485:replace_alu$7697.slice[0].carry: CO=\xosera_main.video_gen.video_pf_a.pf_h_frac_count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$maccmap.cc:240:synth$8486.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$maccmap.cc:240:synth$8486.slice[5].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$maccmap.cc:240:synth$9921.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$maccmap.cc:240:synth$9921.slice[5].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$maccmap.cc:240:synth$9928.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) xosera_upd.$auto$maccmap.cc:240:synth$9928.slice[5].carry: CO=1'0

19.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.
<suppressed ~12 debug messages>

19.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
Removed a total of 0 cells.

19.39.4. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$8519 ($_DFFE_PP_) from module xosera_upd (D = $flatten\xosera_main.\copper.$procmux$4050.Y_B [2], Q = \xosera_main.copper.ram_wr_addr_out [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$8518 ($_DFFE_PP_) from module xosera_upd (D = $flatten\xosera_main.\copper.$procmux$4050.B_AND_S [2], Q = \xosera_main.copper.ram_wr_addr_out [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$8517 ($_DFFE_PP_) from module xosera_upd (D = $flatten\xosera_main.\copper.$procmux$4050.B_AND_S [8], Q = \xosera_main.copper.ram_wr_addr_out [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13804 ($_SDFF_PP0_) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2467.Y_B, Q = \xosera_main.video_gen.video_pf_a.vram_sel_o, rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13803 ($_SDFF_PP0_) from module xosera_upd (D = $flatten\xosera_main.\video_gen.\video_pf_a.$procmux$2459.Y_B, Q = \xosera_main.video_gen.video_pf_a.tilemem_sel_o, rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13388 ($_DFF_P_) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2600.Y_B [15], Q = \xosera_main.video_gen.vgen_reg_data_o [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13387 ($_DFF_P_) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2600.Y_B [14], Q = \xosera_main.video_gen.vgen_reg_data_o [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13386 ($_DFF_P_) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2600.Y_B [13], Q = \xosera_main.video_gen.vgen_reg_data_o [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13385 ($_DFF_P_) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2600.Y_B [12], Q = \xosera_main.video_gen.vgen_reg_data_o [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13384 ($_DFF_P_) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2600.Y_B [11], Q = \xosera_main.video_gen.vgen_reg_data_o [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13383 ($_DFF_P_) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2600.Y_B [10], Q = \xosera_main.video_gen.vgen_reg_data_o [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13382 ($_DFF_P_) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2600.Y_B [9], Q = \xosera_main.video_gen.vgen_reg_data_o [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13381 ($_DFF_P_) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2600.Y_B [8], Q = \xosera_main.video_gen.vgen_reg_data_o [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13380 ($_DFF_P_) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2600.Y_B [7], Q = \xosera_main.video_gen.vgen_reg_data_o [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13379 ($_DFF_P_) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2600.Y_B [6], Q = \xosera_main.video_gen.vgen_reg_data_o [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13378 ($_DFF_P_) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2600.Y_B [5], Q = \xosera_main.video_gen.vgen_reg_data_o [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13377 ($_DFF_P_) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2600.Y_B [4], Q = \xosera_main.video_gen.vgen_reg_data_o [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13376 ($_DFF_P_) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2600.Y_B [3], Q = \xosera_main.video_gen.vgen_reg_data_o [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13375 ($_DFF_P_) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2600.Y_B [2], Q = \xosera_main.video_gen.vgen_reg_data_o [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13374 ($_DFF_P_) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2600.Y_B [1], Q = \xosera_main.video_gen.vgen_reg_data_o [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$13373 ($_DFF_P_) from module xosera_upd (D = $flatten\xosera_main.\video_gen.$procmux$2600.Y_B [0], Q = \xosera_main.video_gen.vgen_reg_data_o [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$12426 ($_SDFF_PP0_) from module xosera_upd (D = $flatten\xosera_main.\copper.$procmux$4161.Y_B, Q = \xosera_main.copper.ram_rd_strobe, rval = 1'0).

19.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..
Removed 28 unused cells and 18 unused wires.
<suppressed ~31 debug messages>

19.39.6. Rerunning OPT passes. (Removed registers in this run.)

19.39.7. Running ICE40 specific optimizations.

19.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.
<suppressed ~3 debug messages>

19.39.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
Removed a total of 0 cells.

19.39.10. Executing OPT_DFF pass (perform DFF optimizations).

19.39.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..

19.39.12. Rerunning OPT passes. (Removed registers in this run.)

19.39.13. Running ICE40 specific optimizations.

19.39.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.

19.39.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
Removed a total of 0 cells.

19.39.16. Executing OPT_DFF pass (perform DFF optimizations).

19.39.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..

19.39.18. Finished OPT passes. (There is nothing left to do.)

19.40. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

19.41. Executing TECHMAP pass (map to technology primitives).

19.41.1. Executing Verilog-2005 frontend: /Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

19.41.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
No more expansions possible.
<suppressed ~1964 debug messages>

19.42. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.

19.43. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7574.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7577.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7589.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7592.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7592.slice[16].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7595.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7598.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7607.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7610.slice[4].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7613.slice[4].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7616.slice[4].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7619.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7622.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7634.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7637.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7640.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7649.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7652.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7655.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7661.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7664.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7667.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7676.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7685.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7688.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7694.slice[0].carry ($lut).
Mapping xosera_upd.$auto$alumacc.cc:485:replace_alu$7697.slice[0].carry ($lut).
Mapping xosera_upd.$auto$maccmap.cc:240:synth$8486.slice[5].carry ($lut).
Mapping xosera_upd.$auto$maccmap.cc:240:synth$9921.slice[5].carry ($lut).
Mapping xosera_upd.$auto$maccmap.cc:240:synth$9928.slice[5].carry ($lut).

19.44. Executing ICE40_OPT pass (performing simple optimizations).

19.44.1. Running ICE40 specific optimizations.

19.44.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.
<suppressed ~575 debug messages>

19.44.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
<suppressed ~4548 debug messages>
Removed a total of 1516 cells.

19.44.4. Executing OPT_DFF pass (perform DFF optimizations).

19.44.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..
Removed 0 unused cells and 12668 unused wires.
<suppressed ~1 debug messages>

19.44.6. Rerunning OPT passes. (Removed registers in this run.)

19.44.7. Running ICE40 specific optimizations.

19.44.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.
<suppressed ~1 debug messages>

19.44.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
Removed a total of 0 cells.

19.44.10. Executing OPT_DFF pass (perform DFF optimizations).

19.44.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..

19.44.12. Rerunning OPT passes. (Removed registers in this run.)

19.44.13. Running ICE40 specific optimizations.

19.44.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.

19.44.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
Removed a total of 0 cells.

19.44.16. Executing OPT_DFF pass (perform DFF optimizations).

19.44.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..

19.44.18. Finished OPT passes. (There is nothing left to do.)

19.45. Executing TECHMAP pass (map to technology primitives).

19.45.1. Executing Verilog-2005 frontend: /Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

19.45.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

19.46. Executing Verilog-2005 frontend: /Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/abc9_model.v
Parsing Verilog input from `/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

19.47. Executing ABC9 pass.

19.47.1. Executing ABC9_OPS pass (helper functions for ABC9).

19.47.2. Executing ABC9_OPS pass (helper functions for ABC9).

19.47.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module xosera_upd.
Found 0 SCCs.

19.47.4. Executing ABC9_OPS pass (helper functions for ABC9).

19.47.5. Executing PROC pass (convert processes to netlists).

19.47.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

19.47.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

19.47.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

19.47.5.4. Executing PROC_INIT pass (extract init attributes).

19.47.5.5. Executing PROC_ARST pass (detect async resets in processes).

19.47.5.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

19.47.5.7. Executing PROC_DLATCH pass (convert process syncs to latches).

19.47.5.8. Executing PROC_DFF pass (convert process syncs to FFs).

19.47.5.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

19.47.5.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

19.47.5.11. Executing OPT_EXPR pass (perform const folding).

19.47.6. Executing TECHMAP pass (map to technology primitives).

19.47.6.1. Executing Verilog-2005 frontend: /Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/techmap.v
Parsing Verilog input from `/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

19.47.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~122 debug messages>

19.47.7. Executing OPT pass (performing simple optimizations).

19.47.7.1. Executing OPT_EXPR pass (perform const folding).

19.47.7.2. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

19.47.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Removed 0 multiplexer ports.

19.47.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Performed a total of 0 changes.

19.47.7.5. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

19.47.7.6. Executing OPT_DFF pass (perform DFF optimizations).

19.47.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).

19.47.7.8. Executing OPT_EXPR pass (perform const folding).

19.47.7.9. Finished OPT passes. (There is nothing left to do.)

19.47.8. Executing TECHMAP pass (map to technology primitives).

19.47.8.1. Executing Verilog-2005 frontend: /Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/abc9_map.v
Parsing Verilog input from `/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

19.47.8.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~2 debug messages>

19.47.9. Executing Verilog-2005 frontend: /Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/abc9_model.v
Parsing Verilog input from `/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

19.47.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~1768 debug messages>

19.47.11. Executing ABC9_OPS pass (helper functions for ABC9).

19.47.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

19.47.13. Executing TECHMAP pass (map to technology primitives).

19.47.13.1. Executing Verilog-2005 frontend: /Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/techmap.v
Parsing Verilog input from `/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

19.47.13.2. Continuing TECHMAP pass.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template $paramod\SB_LUT4\LUT_INIT=16'0110100110010110 for cells of type SB_LUT4.
Using template SB_CARRY for cells of type SB_CARRY.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~146 debug messages>

19.47.14. Executing OPT pass (performing simple optimizations).

19.47.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.
<suppressed ~4 debug messages>

19.47.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
<suppressed ~29 debug messages>
Removed a total of 12 cells.

19.47.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xosera_upd..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

19.47.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xosera_upd.
Performed a total of 0 changes.

19.47.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
Removed a total of 0 cells.

19.47.14.6. Executing OPT_DFF pass (perform DFF optimizations).

19.47.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

19.47.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.

19.47.14.9. Rerunning OPT passes. (Maybe there is more to do..)

19.47.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xosera_upd..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

19.47.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xosera_upd.
Performed a total of 0 changes.

19.47.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xosera_upd'.
Removed a total of 0 cells.

19.47.14.13. Executing OPT_DFF pass (perform DFF optimizations).

19.47.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xosera_upd..

19.47.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module xosera_upd.

19.47.14.16. Finished OPT passes. (There is nothing left to do.)

19.47.15. Executing AIGMAP pass (map logic to AIG).
Module xosera_upd: replaced 7 cells with 43 new cells, skipped 11 cells.
  replaced 2 cell types:
       2 $_OR_
       5 $_MUX_
  not replaced 3 cell types:
       8 $specify2
       1 $_NOT_
       2 $_AND_

19.47.16. Executing AIGMAP pass (map logic to AIG).
Module xosera_upd: replaced 4637 cells with 27549 new cells, skipped 6079 cells.
  replaced 5 cell types:
    1629 $_OR_
     288 $_XOR_
       3 $_ANDNOT_
       2 $_ORNOT_
    2715 $_MUX_
  not replaced 20 cell types:
     414 $_NOT_
    1497 $_AND_
       8 $_TBUF_
       1 SB_PLL40_CORE
      16 SB_IO
       1 SB_WARMBOOT
       4 SB_SPRAM256KA
      61 SB_DFF
     259 SB_DFFE
     224 SB_DFFSR
       1 SB_DFFSS
    1376 SB_DFFESR
      21 SB_DFFESS
      30 SB_RAM40_4K
       4 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000110010100
      56 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000100001100
       4 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000100100001
      80 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000010001111
    1622 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000001000010010
     400 $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1

19.47.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

19.47.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

19.47.16.3. Executing XAIGER backend.
<suppressed ~2497 debug messages>
Extracted 12140 AND gates and 35191 wires from module `xosera_upd' to a netlist network with 2152 inputs and 3379 outputs.

19.47.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

19.47.16.5. Executing ABC9.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =   2152/   3379  and =   11708  lev =   28 (1.96)  mem = 0.32 MB  box = 2166  bb = 1766
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &if -W 750 
ABC: + &save 
ABC: + &st 
ABC: + &syn2 
ABC: + &if -W 750 -v 
ABC: K = 4. Memory (bytes): Truth =    0. Cut =   48. Obj =  128. Set =  528. CutMin = no
ABC: Node =    9438.  Ch =     0.  Total mem =    2.93 MB. Peak cut mem =    0.10 MB.
ABC: P:  Del = 13654.00.  Ar =    3816.0.  Edge =    13590.  Cut =    46104.  T =     0.01 sec
ABC: P:  Del = 13654.00.  Ar =    3654.0.  Edge =    13371.  Cut =    45851.  T =     0.01 sec
ABC: P:  Del = 13654.00.  Ar =    3240.0.  Edge =    11252.  Cut =    46475.  T =     0.01 sec
ABC: E:  Del = 13654.00.  Ar =    3238.0.  Edge =    11250.  Cut =    46475.  T =     0.00 sec
ABC: F:  Del = 13654.00.  Ar =    3231.0.  Edge =    11252.  Cut =    43258.  T =     0.01 sec
ABC: E:  Del = 13654.00.  Ar =    3231.0.  Edge =    11251.  Cut =    43258.  T =     0.00 sec
ABC: A:  Del = 13654.00.  Ar =    3216.0.  Edge =    10772.  Cut =    41878.  T =     0.01 sec
ABC: E:  Del = 13654.00.  Ar =    3216.0.  Edge =    10772.  Cut =    41878.  T =     0.00 sec
ABC: A:  Del = 13654.00.  Ar =    3204.0.  Edge =    10758.  Cut =    41762.  T =     0.01 sec
ABC: E:  Del = 13654.00.  Ar =    3204.0.  Edge =    10758.  Cut =    41762.  T =     0.00 sec
ABC: Total time =     0.04 sec
ABC: + &save 
ABC: + &load 
ABC: + &st 
ABC: + &if -g -K 6 
ABC: + &dch -f 
ABC: + &if -W 750 -v 
ABC: K = 4. Memory (bytes): Truth =    0. Cut =   48. Obj =  128. Set =  528. CutMin = no
ABC: Node =   17075.  Ch =  2374.  Total mem =    3.97 MB. Peak cut mem =    0.14 MB.
ABC: P:  Del = 10764.00.  Ar =    4034.0.  Edge =    14300.  Cut =    97851.  T =     0.01 sec
ABC: P:  Del = 10764.00.  Ar =    3698.0.  Edge =    13504.  Cut =    93833.  T =     0.01 sec
ABC: P:  Del = 10764.00.  Ar =    3468.0.  Edge =    12098.  Cut =   102098.  T =     0.01 sec
ABC: F:  Del = 10764.00.  Ar =    3260.0.  Edge =    11458.  Cut =    88686.  T =     0.01 sec
ABC: A:  Del = 10764.00.  Ar =    3220.0.  Edge =    10886.  Cut =    87641.  T =     0.02 sec
ABC: A:  Del = 10764.00.  Ar =    3213.0.  Edge =    10867.  Cut =    88539.  T =     0.02 sec
ABC: Total time =     0.09 sec
ABC: + &save 
ABC: + &load 
ABC: + &st 
ABC: + &if -g -K 6 
ABC: + &synch2 
ABC: + &if -W 750 -v 
ABC: K = 4. Memory (bytes): Truth =    0. Cut =   48. Obj =  128. Set =  528. CutMin = no
ABC: Node =   14708.  Ch =  1813.  Total mem =    3.65 MB. Peak cut mem =    0.12 MB.
ABC: P:  Del = 10486.00.  Ar =    4057.0.  Edge =    14372.  Cut =    78863.  T =     0.01 sec
ABC: P:  Del = 10486.00.  Ar =    3754.0.  Edge =    13511.  Cut =    77256.  T =     0.01 sec
ABC: P:  Del = 10486.00.  Ar =    3398.0.  Edge =    11532.  Cut =    84791.  T =     0.01 sec
ABC: F:  Del = 10486.00.  Ar =    3325.0.  Edge =    11527.  Cut =    72853.  T =     0.01 sec
ABC: A:  Del = 10486.00.  Ar =    3306.0.  Edge =    11085.  Cut =    72893.  T =     0.02 sec
ABC: A:  Del = 10486.00.  Ar =    3304.0.  Edge =    11077.  Cut =    73384.  T =     0.01 sec
ABC: Total time =     0.07 sec
ABC: + &save 
ABC: + &load 
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =   2152/   3379  and =   10240  lev =   16 (1.48)  mem = 0.30 MB  box = 2166  bb = 1766
ABC: Mapping (K=4)  :  lut =   3184  edge =   10555  lev =    7 (0.78)  levB =   18  mem = 0.15 MB
ABC: LUT = 3184 : 2=261 8.2 %  3=1659 52.1 %  4=1264 39.7 %  Ave = 3.32
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 1.75 seconds, total: 1.75 seconds

19.47.16.6. Executing AIGER frontend.
<suppressed ~11074 debug messages>
Removed 15487 unused cells and 28065 unused wires.

19.47.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:     3227
ABC RESULTS:   $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 cells:      400
ABC RESULTS:           input signals:      237
ABC RESULTS:          output signals:     2133
Removing temp directory.

19.47.17. Executing TECHMAP pass (map to technology primitives).

19.47.17.1. Executing Verilog-2005 frontend: /Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

19.47.17.2. Continuing TECHMAP pass.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
No more expansions possible.
<suppressed ~406 debug messages>

19.48. Executing ICE40_WRAPCARRY pass (wrap carries).

19.49. Executing TECHMAP pass (map to technology primitives).

19.49.1. Executing Verilog-2005 frontend: /Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

19.49.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 900 unused cells and 39525 unused wires.

19.50. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     3614
  1-LUT               43
  2-LUT              287
  3-LUT             2018
  4-LUT             1266
  with \SB_CARRY    (#0)  340
  with \SB_CARRY    (#1)  347

Eliminating LUTs.
Number of LUTs:     3614
  1-LUT               43
  2-LUT              287
  3-LUT             2018
  4-LUT             1266
  with \SB_CARRY    (#0)  340
  with \SB_CARRY    (#1)  347

Combining LUTs.
Number of LUTs:     3527
  1-LUT               43
  2-LUT              229
  3-LUT             1904
  4-LUT             1351
  with \SB_CARRY    (#0)  340
  with \SB_CARRY    (#1)  347

Eliminated 0 LUTs.
Combined 87 LUTs.
<suppressed ~21181 debug messages>

19.51. Executing TECHMAP pass (map to technology primitives).

19.51.1. Executing Verilog-2005 frontend: /Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/Users/kenj/Dev/oss-cad-suite/libexec/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

19.51.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod$30305e55a780880b9c824fe3509a4d981acb0f2b\$lut for cells of type $lut.
Using template $paramod$5e9374f44a27c3f8a1c38af244ec43ceb4fb8d4f\$lut for cells of type $lut.
Using template $paramod$47a8214374025465e226fa66bee690ff33268a25\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$101238f3d8d49ab12a9b49a2f01cd503b26e9c61\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$f9813472aa48e533b3838c6f2316dc2e78c66111\$lut for cells of type $lut.
Using template $paramod$c28a8b7ce0535d090c4cfb52e9c74affd52b110c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000111 for cells of type $lut.
Using template $paramod$1b48bc962a0c1e178183f21032378372adc5e26c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$873c285bdccf0ac2b60d2304ea5cd14bf211d2a6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod$f8f63b209b7230e81958663ff24fef1613156af7\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$ba7b4568c306470a7f204c239212739869e234a1\$lut for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110111 for cells of type $lut.
Using template $paramod$712505941a295086314c22735153725461a87f4a\$lut for cells of type $lut.
Using template $paramod$59f2a3e232df3029c8bc36978b9bbe72a71dfb5a\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$7e1598d4ad491765d69c7a5c02ece8d7ef10c4d6\$lut for cells of type $lut.
Using template $paramod$fb942a4390c4ceaa49b5aadd25129a9e11c775ec\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100000 for cells of type $lut.
Using template $paramod$0ee0167fb5dd83bdfe7197fff23e2c7146c57037\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000010 for cells of type $lut.
Using template $paramod$b45e5cb971154e30a797eecb0461619c3eeae12d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001000 for cells of type $lut.
Using template $paramod$af01034afe1bdbc87587d263805971d96e724ed7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001110 for cells of type $lut.
Using template $paramod$8494168726d27c2200605afcf1fb7470bf987857\$lut for cells of type $lut.
Using template $paramod$311721dd8d079691ba4b079bdbd2efee2fbe9f80\$lut for cells of type $lut.
Using template $paramod$12d55b60f0f4993cdeef74f2f65f385722841c5f\$lut for cells of type $lut.
Using template $paramod$18c0af0ab239136c12d03cf9ac659374dfbe1fe6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001100 for cells of type $lut.
Using template $paramod$d6cf0a4b6f6ccd87588da28c41b5b6c258da2509\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$c854c5c77bc7c429c5b9cd582d4f32cbbcb4d3f0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$2ec6422db00d358fc7469efce6208bffbc8521cd\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101000 for cells of type $lut.
Using template $paramod$baa9d2fb2d21010939721b85aa9f11effe0b53c4\$lut for cells of type $lut.
Using template $paramod$a7d9b4ab0321c8125e5b895183ee6b84cdb4a31b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001101 for cells of type $lut.
Using template $paramod$a5516fc31d1e552de2435200bb732b4d4ad63a9c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000010 for cells of type $lut.
Using template $paramod$a1d323730045824cfc84bb9f4ee8031f1c4dcc9e\$lut for cells of type $lut.
Using template $paramod$9f990f52fb04eb3ad0b0dee1551c7fa82c5c7bf8\$lut for cells of type $lut.
Using template $paramod$1cf4268c0b9abcfcd385a899a77cefa28047933f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$a988852add2bdce7c1dfac786401ba7c7bc832c1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001001 for cells of type $lut.
Using template $paramod$22812af89010100a1fb58391c5d946e749ef6cf7\$lut for cells of type $lut.
Using template $paramod$66cfa457f3bf0a90e11a4f3cf9336b993db8c18a\$lut for cells of type $lut.
Using template $paramod$d4016dbc07d92f4737de285cbb22ec723fd89319\$lut for cells of type $lut.
Using template $paramod$62d2df2f27a0c12ea36c0ea41955fa6cb92c2ddc\$lut for cells of type $lut.
Using template $paramod$21eec977c2ba62e532de58d602e74bf0a3c778ba\$lut for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$16894c241be5ea1f024e9339dea788b4dbe184ae\$lut for cells of type $lut.
Using template $paramod$37c9af120c85145419565a9ccf4ceb7397fbbe92\$lut for cells of type $lut.
Using template $paramod$58b33073d6510d6145ff01c28a604d07765b1342\$lut for cells of type $lut.
Using template $paramod$493190373199e5a39be045ba23abb29ecef89037\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110101 for cells of type $lut.
Using template $paramod$c9b834dc9c2f376b2a44311c706cb34f7f0a4014\$lut for cells of type $lut.
Using template $paramod$52953750219effadf43093a566baf492fdd6b6c8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001010 for cells of type $lut.
Using template $paramod$8d7a8d6e3356de09670738ba85f2c6b874f6b06d\$lut for cells of type $lut.
Using template $paramod$d9922e15eb5da1acc26e937540cc16b16c2ad42c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$3eb8805ccd6f91bad96dcbf190c2fb4f72f4634f\$lut for cells of type $lut.
Using template $paramod$e51a8a571bee774247b38f52d6e85fd62ae52cea\$lut for cells of type $lut.
Using template $paramod$ee454ad2383885733a4273245816698f8443c10b\$lut for cells of type $lut.
Using template $paramod$6b7c9c56fc2a32a479d463d5f3b0d3f4673b67f1\$lut for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod$cef3d344f236016ad78f511d970c0ed55dc829c5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101000 for cells of type $lut.
Using template $paramod$ea79e410ad0f4fc3326666c891e1f3992816d636\$lut for cells of type $lut.
Using template $paramod$ff58554493773336c4e06dc62f25c37448f98c7b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$b70d962eeb2a843bdf21e4f19f7ca9d2437fed39\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$e2abc3b706ab86fd7c0d14a17f66f1e597465517\$lut for cells of type $lut.
Using template $paramod$aabd7471e271b32a66521313541174fbb89658ea\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod$1e47b2c82141d6a54f09852fad33b92b9763040f\$lut for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod$4e9e23686d07a1fd91232ab07371e48a0e62a680\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10011101 for cells of type $lut.
Using template $paramod$f58e0d90afc57a738914697b6a4a7319b30d7e7e\$lut for cells of type $lut.
Using template $paramod$f71cd4e12d252829a6db80287a07ec7f20c3e099\$lut for cells of type $lut.
Using template $paramod$368ece0cbe0dd8813956f5c0ea41432c34a980c2\$lut for cells of type $lut.
Using template $paramod$c5479cb3b02237832e868d4808b3a7f1be08f618\$lut for cells of type $lut.
Using template $paramod$22401499cdd44f3533d03c4b246566376c46a67b\$lut for cells of type $lut.
Using template $paramod$e484b1e0bd351ba5af34f5fd66a8e850cc5b8335\$lut for cells of type $lut.
Using template $paramod$e6a488add0b5a2d742e2ae29f62ce7616e04271d\$lut for cells of type $lut.
Using template $paramod$3309aa1f9903a48ab4cbd893c2ef51c30765ec75\$lut for cells of type $lut.
Using template $paramod$ea8e761894cb487307fb4437dc9ab7fd6aa798db\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100011 for cells of type $lut.
Using template $paramod$ee5adfa1bcc7e4b8948c774483a7d19aaddb4759\$lut for cells of type $lut.
Using template $paramod$364c9ffbffac467d60dfec81bba4e18476c15602\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101110 for cells of type $lut.
Using template $paramod$a745274df8f514565625fa7fee7a9fb864a85f2f\$lut for cells of type $lut.
Using template $paramod$a9ebd93bc2fc1a9f7fc387533c3e17044ba51058\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111000 for cells of type $lut.
Using template $paramod$fbed19fb84ee7c8a884778d28a96daea96245184\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111110 for cells of type $lut.
Using template $paramod$c4e4e438f53deb14c1ad728c967e8024f686836f\$lut for cells of type $lut.
Using template $paramod$9225a1e7171a31391d3103e59bac04fd4b7aa6c1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$93de6ac482faaaffc2aba3d9054f1d8bd21cc047\$lut for cells of type $lut.
Using template $paramod$1b53a9695a0f80de7517b50863b438fd2b7f56da\$lut for cells of type $lut.
Using template $paramod$44adbaeba8aebac00b5b76c0c821287bd76a54f4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101100 for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod$af0c0e3aea5daa768aac0697b02a2a49301800b1\$lut for cells of type $lut.
Using template $paramod$9506ecf18c91672f3dae4008b6ad1f2863e8019f\$lut for cells of type $lut.
Using template $paramod$2ea69c779d6c1b79ac5a87b0d1523c67d5628dba\$lut for cells of type $lut.
Using template $paramod$e85b6eba0dacefc5f73f8748159b8b9599212afc\$lut for cells of type $lut.
Using template $paramod$a8ff24295e45aabda71972c6a839bf0640df5e86\$lut for cells of type $lut.
Using template $paramod$949912d41b6703327b37a3cbe8a7a7bc923219b7\$lut for cells of type $lut.
Using template $paramod$4beade702c2f387a77c3f89db4f631e06b3ae32d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010011 for cells of type $lut.
Using template $paramod$fb5ee0bdef1c4e74aaf1fd8efae98b46a2f5e564\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$16c27bcd12e3fcfd2599c0cfc4aa78e92483cb62\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod$25696d6b21c8ac3da9913114964545779e21cfa5\$lut for cells of type $lut.
Using template $paramod$6ce6c9ed24092f88d858965e9e9a15c5bec9d6d7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110111 for cells of type $lut.
Using template $paramod$0fa6c93fee22246f217b8b1fb39f21b5cc1cdd4e\$lut for cells of type $lut.
Using template $paramod$5b4b4ed558983d9f3ab4c896a7a011d129b0db9a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$e96de5e9fcce737e52eacf39c70c8f533dc27d63\$lut for cells of type $lut.
Using template $paramod$58685d136f916910674b7cdb559b8c116c3484e1\$lut for cells of type $lut.
Using template $paramod$a15fd389a2f54cb7b94707b25934d226e68d9e2e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111111 for cells of type $lut.
Using template $paramod$833582361e14b3ee2e66ad676022ab35d7aa7e28\$lut for cells of type $lut.
Using template $paramod$9d53da2edb92ba4203d1998219256f606e33ddfd\$lut for cells of type $lut.
Using template $paramod$0b388c01cdeea492eee091ff8478270f3fd98c7f\$lut for cells of type $lut.
Using template $paramod$0e36d771a172cfb1acdbb7ed418d288430d54908\$lut for cells of type $lut.
Using template $paramod$b89c522b7f70adaee1a35d80e932f38159b6a445\$lut for cells of type $lut.
Using template $paramod$fc318a7df7fe07fd6e06d67fcbc358e9823ea389\$lut for cells of type $lut.
Using template $paramod$efc60783c939ae41b2f3555af407b17c007b27f8\$lut for cells of type $lut.
Using template $paramod$d497222f59d990d3f689ed9c6ac453ecc8a2f4b4\$lut for cells of type $lut.
Using template $paramod$8f7210088a40da1859d27e900c288fd298d68bed\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100010 for cells of type $lut.
Using template $paramod$b254004e52e31d6991f04f6113897c64fa1650ce\$lut for cells of type $lut.
Using template $paramod$75d5c453cca75cc7a7ca320c4fb7be0932b6aaa7\$lut for cells of type $lut.
Using template $paramod$31355df6e553d8cd6fcd0bf57a837c84b61d1970\$lut for cells of type $lut.
Using template $paramod$f5c5b56521a6811444a94cf8aec11258bf0a108d\$lut for cells of type $lut.
Using template $paramod$ad68dc4c310bae082597ca084acc6b8ad4faa5e2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000110 for cells of type $lut.
Using template $paramod$7e8d331d1e06632d29fbdf6c3afc2de1856d3c67\$lut for cells of type $lut.
Using template $paramod$77268019239d7d46332da9cb6aa01cbf3ba29ee3\$lut for cells of type $lut.
Using template $paramod$f9b715fbf1040e81e900b2461c2390d17ed5e988\$lut for cells of type $lut.
Using template $paramod$fe9a0158d0352193457c4f5b6282ac86d35fb3ee\$lut for cells of type $lut.
Using template $paramod$498daa9936ffa1c0b12d774cacc95a35d14b818e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001000 for cells of type $lut.
Using template $paramod$8cb3afb490aec3481fadf24474d4cdc53ec8fb65\$lut for cells of type $lut.
Using template $paramod$96e862ee7893eadf07db7da14b15b8a6a3515ea3\$lut for cells of type $lut.
Using template $paramod$fe7077462a386258cea7b409718bda7873cfae08\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10011010 for cells of type $lut.
Using template $paramod$933f4f3e373a784da64d137def3625bdd36d1695\$lut for cells of type $lut.
Using template $paramod$6d23198eb2b8f79a41c7626605a61009695893b1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111011 for cells of type $lut.
Using template $paramod$15efa44280f2a77bf023b68f95d9df5681d9dd99\$lut for cells of type $lut.
Using template $paramod$ccdc774d8a3288f99148297986d33082c7c753e6\$lut for cells of type $lut.
Using template $paramod$20aecb9a781743d0e93608b1c1e7d62ffc3a69a9\$lut for cells of type $lut.
Using template $paramod$8834ac3386568e885c2b663eac7e9b984a868ac7\$lut for cells of type $lut.
Using template $paramod$bb4fff1cc3b827238aa40993cafede1c5beecbe3\$lut for cells of type $lut.
Using template $paramod$2de23df76a24087ecc0fa38a78ecc970cd3f2492\$lut for cells of type $lut.
Using template $paramod$c20e9cdb8ce0b0008600da6cf3b4e69036652cf2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101010 for cells of type $lut.
Using template $paramod$f7e977e4ab769956ecac4448595a773db86c44e8\$lut for cells of type $lut.
Using template $paramod$59848369e5f408d15e0c8c710ff689c98ce02999\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod$c24ed72ebb67e9ead6029e42e909ef7fc0abbb11\$lut for cells of type $lut.
Using template $paramod$153c6cdaaddbc43e6ef3facd06aa851de33910ae\$lut for cells of type $lut.
Using template $paramod$89f931611b66d827751f4a175a88569d5ab95376\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101110 for cells of type $lut.
Using template $paramod$aa1a3bdfce7d7fc35047606a675df81a86f48f6a\$lut for cells of type $lut.
Using template $paramod$ae61381b5027282047ec0d3e039cd49a60033657\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110001 for cells of type $lut.
Using template $paramod$7d58cd79f2fe2d2c2cb33a80d00be3f8c42b5e57\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod$2f17e1be43f3ac07ddcc5afec3b8e6a34320bd15\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$3d7168c8134c4765b84a7b86d5ef7e1e65bbf4a0\$lut for cells of type $lut.
Using template $paramod$d35161d1d7976dcc02e7c7d51172431be85143b4\$lut for cells of type $lut.
Using template $paramod$f81ecf3eb88491df8fecf1e071b57debc429282a\$lut for cells of type $lut.
Using template $paramod$6a9b42dd2737c91073e6a695b8ac858c4a8587d7\$lut for cells of type $lut.
Using template $paramod$332a399730bfc61adea04021a76b1c4e4030f37d\$lut for cells of type $lut.
Using template $paramod$e5761adfcc530461835be17350166b9d43dfadee\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101111 for cells of type $lut.
Using template $paramod$d86fec1d6fbb4cbc9c28270d4cc304383c8ff17a\$lut for cells of type $lut.
Using template $paramod$0ae7705354ab4bfd071e2551e0df024a40a698f7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110001 for cells of type $lut.
Using template $paramod$201033aba90f001917635c834c514d0275ab154d\$lut for cells of type $lut.
Using template $paramod$35059585e93e18989247e13034fd6a1ce4de9957\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111011 for cells of type $lut.
Using template $paramod$c64dec5f9cba92e7fb1a4ba3987a6ac85d9a3898\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001110 for cells of type $lut.
Using template $paramod$47b2f5a9f58cb4be072657772748a1ab82d6819a\$lut for cells of type $lut.
Using template $paramod$4cab3b31c601551ff65536bf4f533afa0b2094ee\$lut for cells of type $lut.
Using template $paramod$abab4f7b12c284cd2b5c9f1fe25ef0fbdac6c245\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011101 for cells of type $lut.
Using template $paramod$ead66ba22839f96e739c8f1b5a09bc1717b3be02\$lut for cells of type $lut.
Using template $paramod$e253ac66462c8a22f75a6323ed00b0d275ebc3e1\$lut for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod$415b9dd3a15783ae56c103f189fd8e182f997441\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110010 for cells of type $lut.
Using template $paramod$5c32c59025c0b98f20e63f249d83e7ebb4b085e3\$lut for cells of type $lut.
Using template $paramod$f65af1b660a013aeaba9a5dc41e6bdede642e3c3\$lut for cells of type $lut.
Using template $paramod$4e09fb85ad5980549134c5674f63e37de31e60bc\$lut for cells of type $lut.
Using template $paramod$73d07df06bdcebf8bcc513075902f140fba061ec\$lut for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod$42e71e31e297b50055ec7db4ab476d45bc6e8eae\$lut for cells of type $lut.
Using template $paramod$845091abb5b78f3b6b0c1c1931ad510371446f3b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010100 for cells of type $lut.
Using template $paramod$097592bb16245531f0716c5ddb18d7090f9c7d9d\$lut for cells of type $lut.
Using template $paramod$c16ee2a1f99ae0f420e52bea7e5cb44a1c5cc7df\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110011 for cells of type $lut.
Using template $paramod$0c552808b81082f3f81d6b9f66eb6ee098edac40\$lut for cells of type $lut.
Using template $paramod$863f41f551a5816159b16156be2ce40a67f3ea1f\$lut for cells of type $lut.
Using template $paramod$edc3c77d6d0cfa370b4c94131cecc413b4b0ef1c\$lut for cells of type $lut.
Using template $paramod$762dcdf49521c1aa2145fa6746ab6d57dd5df22e\$lut for cells of type $lut.
Using template $paramod$d50c45f171f91e8a1ab05cfc9389403110a01e5a\$lut for cells of type $lut.
Using template $paramod$a59507d273cd827eb6c46c37820d50a1b717efdf\$lut for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010101 for cells of type $lut.
Using template $paramod$703a13a751e631ef123f38f7d2125aeabec0f94c\$lut for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod$71cb81cd7ec213b39129c5f3867d1aa22dffde1b\$lut for cells of type $lut.
Using template $paramod$7a02e05acb86bef14143e0e435fb2c7bb50c485b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100111 for cells of type $lut.
Using template $paramod$975817b14e428934970c836668538a3bbe3dd485\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod$52dba6761665aed9152453b29dcef2985488963d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000101 for cells of type $lut.
Using template $paramod$32ca6a11a7496c429ab05f705dec60e7d8fd6ce4\$lut for cells of type $lut.
Using template $paramod$b386beeb2114f85b641567d08ceda4ebd6492c7b\$lut for cells of type $lut.
Using template $paramod$d6ca727e39f31d51d29072e0f33aa09c65e37336\$lut for cells of type $lut.
Using template $paramod$3af90af0a9b4c985f808affa612afb51285a109a\$lut for cells of type $lut.
Using template $paramod$478e4a53d21c4a6adf4356e643f2e3ccffe11b9e\$lut for cells of type $lut.
Using template $paramod$20235ca863361fbc253329cfc7eeea38c77404dc\$lut for cells of type $lut.
Using template $paramod$9143a3c6fc31ebdc602844ddda0984ff0f9e61b5\$lut for cells of type $lut.
Using template $paramod$6b2e3f45e60a8ca189e3ece7e5bc1e9ffcf1353a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001100 for cells of type $lut.
Using template $paramod$91ab123105a0ae4c22bf7d361e2a1db55b2153f2\$lut for cells of type $lut.
Using template $paramod$034a69dd110db95ee917f313eafd6833fc6595f9\$lut for cells of type $lut.
Using template $paramod$23ba03b3f106a8b0f20f18bfebd862b419996ddc\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111010 for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod$db953d79e0ec2cfd9d94b3b8573af403982a46cd\$lut for cells of type $lut.
Using template $paramod$2d73cf21e7a3b53006ebbae47ecc48e73975ec46\$lut for cells of type $lut.
Using template $paramod$bf7e9470911c1386190a92a55d2a001e59495336\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111111 for cells of type $lut.
Using template $paramod$a2fbe7162371720a9cacb366ff4e9708d3a1f291\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
Using template $paramod$4133fe00eb18442862a284ccc67a95f8194d041c\$lut for cells of type $lut.
Using template $paramod$e46703b423a661cd7d311c41833ea655969702cc\$lut for cells of type $lut.
Using template $paramod$7d813eb49700f971f2635a434700eafdfa816bc3\$lut for cells of type $lut.
Using template $paramod$4b8f0a05fd2e57692c120fcc65d19c62f5c28432\$lut for cells of type $lut.
Using template $paramod$a197ef6f3b51d411ae3e5b42b5d77a606c4fb11a\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod$bf213c6f210460c86bb883320b87f74551d49001\$lut for cells of type $lut.
Using template $paramod$f7a897257decedfb6cc642e53d65fef7fc0df390\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$e4ce17fcded6e264148ce0a4c0df3ed1b1b269a4\$lut for cells of type $lut.
Using template $paramod$0aae27145afd1348566af63c85046495acb0e0d8\$lut for cells of type $lut.
Using template $paramod$50666a8f9d622ca1f027a4587dfd5f2a7d8810c9\$lut for cells of type $lut.
Using template $paramod$ac9879df029f610b92e03c233120acb21fbaf34e\$lut for cells of type $lut.
Using template $paramod$e6dfffc8b1c22ea11095f018046e1ca64d8b4e42\$lut for cells of type $lut.
Using template $paramod$09deb89cf77b6e37f6ed7fef8d797dc05c0b2eee\$lut for cells of type $lut.
Using template $paramod$f610ead37c0b0425701d8da1ff2cd0d9bbcdd315\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110010 for cells of type $lut.
Using template $paramod$9c6e6a10ea00e5b0682f6243b802d7839a398197\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010010 for cells of type $lut.
Using template $paramod$9dd298ae76fb41ac94779a83c068607fbc09ce4f\$lut for cells of type $lut.
Using template $paramod$f0740a6e324805120e00833ac51c0403ce0bac71\$lut for cells of type $lut.
Using template $paramod$dc49096963428cfbc07739b6a212e07ad5030b62\$lut for cells of type $lut.
Using template $paramod$504d627b7f107c5f6e5c95ac43c2135d313086e7\$lut for cells of type $lut.
Using template $paramod$d7c634c964a868577f926c0690c937ab5b147f6e\$lut for cells of type $lut.
Using template $paramod$fa874836ac64420bb7d9c67e99a0912e16a50ef2\$lut for cells of type $lut.
Using template $paramod$dc8f0be42379c903926eb5c45306997db4c0a27c\$lut for cells of type $lut.
Using template $paramod$8fb701a6e39d6b24e5957582c5384a18a2ebf76f\$lut for cells of type $lut.
Using template $paramod$32c48a69e3acd22031599a3593da71076425a763\$lut for cells of type $lut.
Using template $paramod$4380d164d25d6a9a3a11f9976a02840f91855a4a\$lut for cells of type $lut.
Using template $paramod$42c7f7e0577b90a637faf761b61988640dc1e9f6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101100 for cells of type $lut.
Using template $paramod$ad823946862e656cf7f96d606b18b8f972dc6d6c\$lut for cells of type $lut.
Using template $paramod$53ce561f80f32d4298a3beadc88b6c5c78293221\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~7924 debug messages>
Removed 0 unused cells and 7862 unused wires.

19.52. Executing AUTONAME pass.
Renamed 280225 objects in module xosera_upd (173 iterations).
<suppressed ~8004 debug messages>

19.53. Executing HIERARCHY pass (managing design hierarchy).

19.53.1. Analyzing design hierarchy..
Top module:  \xosera_upd

19.53.2. Analyzing design hierarchy..
Top module:  \xosera_upd
Removed 0 unused modules.

19.54. Printing statistics.

=== xosera_upd ===

   Number of wires:               2821
   Number of wire bits:          11410
   Number of public wires:        2821
   Number of public wire bits:   11410
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5897
     $_TBUF_                         8
     SB_CARRY                      368
     SB_DFF                         61
     SB_DFFE                       259
     SB_DFFESR                    1376
     SB_DFFESS                      21
     SB_DFFSR                      224
     SB_DFFSS                        1
     SB_IO                          16
     SB_LUT4                      3527
     SB_PLL40_CORE                   1
     SB_RAM40_4K                    30
     SB_SPRAM256KA                   4
     SB_WARMBOOT                     1

19.55. Executing CHECK pass (checking for obvious problems).
Checking module xosera_upd...
Found and reported 0 problems.

19.56. Executing JSON backend.

End of script. Logfile hash: b24dacd4ca, CPU: user 11.30s system 0.19s
Yosys 0.12+38 (git sha1 f599c148c, x86_64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 22% 12x techmap (2 sec), 14% 1x abc9_exe (1 sec), ...
