;
; copper - blend dual playfield test
;
; vim: set et ts=8 sw=8
;

                .list    false
//                .include "xosera_m68k_defs.inc"
                .macname false
                .listcond false
                .list    true
#include "xosera_m68k_defs.h"
#include "xosera_boing_defs.h"

                export  ball_dst
                export  ball_prev
                export  ball_gfx_ctrl
                export  ball_h_scroll
                export  ball_v_scroll

entry
                VPOS    #480                                            ; wait for offscreen
                VPOS    #V_WAITBLIT                                     ; wait until blitter not in use

                CMPM    ball_prev                                       ; check for zero ball_prev
                BRGE    draw_ball                                       ; skip erase before 1st draw

                ; blank previous ball
                MOVI    #$0001,XR_BLIT_CTRL                             ; no transp, constS
                MOVI    #$0000,XR_BLIT_ANDC                             ; ANDC constant
                MOVI    #$0000,XR_BLIT_XOR                              ; XOR constant
                MOVI    #$0000,XR_BLIT_MOD_S                            ; no modulo S
                MOVI    #$0000,XR_BLIT_SRC_S                            ; blank ball
                MOVI    #WIDTH_WORDS_B-BALL_TILES_WIDTH,XR_BLIT_MOD_D   ; modulo D
                MOVM    ball_prev,XR_BLIT_DST_D                         ; previous ball position
                MOVI    #$FF00,XR_BLIT_SHIFT                            ; no edge masking or shifting
                MOVI    #BALL_TILES_HEIGHT-1,XR_BLIT_LINES              ; 2-D blit
                MOVI    #BALL_TILES_WIDTH-1,XR_BLIT_WORDS               ; go!

draw_ball
                ; update previous ball position
                MOVE    ball_dst,ball_prev

                ; draw ball bitmap
                MOVI    #$0000,XR_BLIT_CTRL                             ; no transp, no constS
                MOVI    #$0000,XR_BLIT_ANDC                             ; ANDC constant
                MOVI    #$0000,XR_BLIT_XOR                              ; XOR constant
                MOVI    #$0000,XR_BLIT_MOD_S                            ; no modulo S
                MOVI    #VRAM_BASE_BALL,XR_BLIT_SRC_S                   ; ball
                MOVI    #WIDTH_WORDS_B-BALL_TILES_WIDTH,XR_BLIT_MOD_D   ; modulo D
                MOVM    ball_dst,XR_BLIT_DST_D                          ; ball position
                MOVI    #$FF00,XR_BLIT_SHIFT                            ; no edge masking or shifting
                MOVI    #BALL_TILES_HEIGHT-1,XR_BLIT_LINES              ; 2-D blit
                MOVI    #BALL_TILES_WIDTH-1,XR_BLIT_WORDS               ; go!

                ; update playfield B XR registers
                MOVI    #MAKE_GFX_CTRL(0x00,0,GFX_BPP_4,0,1,1),XR_PB_GFX_CTRL
                MOVM    ball_gfx_ctrl,XR_PB_GFX_CTRL
                MOVM    ball_h_scroll,XR_PB_H_SCROLL
                MOVM    ball_v_scroll,XR_PB_V_SCROLL

                ; wait for next frame
                VPOS    #V_EOF

ball_dst        word    0
ball_prev       word    0
ball_gfx_ctrl   word    0
ball_h_scroll   word    0
ball_v_scroll   word    0

